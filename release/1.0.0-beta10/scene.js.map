{"version":3,"file":"scene.js","sources":["../src/consts.ts","../src/PropertyObject.ts","../src/utils.ts","../src/EventTrigger.ts","../src/easing.ts","../src/Animator.ts","../src/utils/color.ts","../src/utils/property.ts","../src/Frame.ts","../src/Keyframes.ts","../src/utils/dot.ts","../src/utils/css.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts","../src/index.ts","../src/index.umd.ts"],"sourcesContent":["export type Role = true | RoleInterface;\nexport interface RoleInterface {\n  [role: string]: Role;\n}\nexport interface ObjectInterface<T> {\n  [name: string]: T;\n}\nexport type NameType = string | number;\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleInterface = { transform: {}, filter: {}, attribute: {} };\nexport const ALIAS: ObjectInterface<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { \"animation-timing-function\": true, \"contents\": true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\ntype OptionType = [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"];\ntype EventType = [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const RGBA = \"rgba\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const FUNCTION = \"function\";\nexport const PROPERTY = \"property\";\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n\nconst prefixes: string[] = [\"webkit\", \"ms\", \"moz\", \"o\"];\nconst checkProperties = (property: string) => {\n  const styles = (document.body || document.documentElement).style as any;\n  const length = prefixes.length;\n\n  if (typeof styles[property] !== \"undefined\") {\n    return property;\n  }\n  for (let i = 0; i < length; ++i) {\n    const name = `-${prefixes[i]}-${property}`;\n\n    if (typeof styles[name] !== \"undefined\") {\n      return name;\n    }\n  }\n  return \"\";\n};\n\nexport const TRANSFORM = /*#__PURE__*/checkProperties(\"transform\");\nexport const FILTER = /*#__PURE__*/checkProperties(\"filter\");\nexport const ANIMATION = /*#__PURE__*/checkProperties(\"animation\");\nexport const KEYFRAMES = /*#__PURE__*/ANIMATION.replace(\"animation\", \"keyframes\");\n","interface PropertyObjectInterface {\n  prefix?: string;\n  suffix?: string;\n  model?: string;\n  type?: string;\n  separator?: string;\n  [key: string]: any;\n}\n/**\n* Make string, array to PropertyObject for the dot product\n* @memberof Scene\n*/\nclass PropertyObject {\n  public value: any[];\n  public options: PropertyObjectInterface;\n\n  /**\n\t* @param {String|Array} value - This value is in the array format ..\n\t* @param {String} separator - Array separator.\n\t* @example\nvar obj1 = new PropertyObject(\"1,2,3\", \",\");\nvar obj2 = new PropertyObject([1,2,3], \" \");\nvar obj3 = new PropertyObject(\"1$2$3\", \"$\");\n\n// rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\t */\n  constructor(value: string | any[], options: PropertyObjectInterface = {}) {\n    this.options = {\n      prefix: \"\",\n      suffix: \"\",\n      model: \"\",\n      type: \"\",\n      separator: \",\",\n    };\n    this.setOptions(options);\n    this.init(value);\n  }\n  public setOptions(options: PropertyObjectInterface) {\n    (Object as any).assign(this.options, options);\n    return this;\n  }\n  public getOption(name: string) {\n    return this.options[name];\n  }\n  /**\n\t* the number of values.\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.length);\n// 3\n\t */\n  public size() {\n    return this.value.length;\n  }\n  /**\n\t* retrieve one of values at the index\n\t* @param {Number} index - index\n\t* @return {Object} one of values at the index\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.get(0));\n// 1\n\t */\n  public get(index: number) {\n    return this.value[index];\n  }\n  /**\n\t* Set the value at that index\n\t* @param {Number} index - index\n\t* @param {Object} value - text, a number, object to set\n\t* @return {PropertyObject} An instance itself\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nobj1.set(0, 2);\nconsole.log(obj1.toValue());\n// 2,2,3\n\t */\n  public set(index: number, value: any) {\n    this.value[index] = value;\n    return this;\n  }\n  /**\n\t* create a copy of an instance itself.\n\t* @return {PropertyObject} clone\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nconst obj2 = obj1.clone();\n\t */\n  public clone(): PropertyObject {\n    const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n\n    return new PropertyObject(arr, {\n      separator: this.options.separator,\n      prefix: this.options.prefix,\n      suffix: this.options.suffix,\n      model: this.options.model,\n      type: this.options.type,\n    });\n  }\n  /**\n\t* Make Property Object to String\n\t* @return {String} Make Property Object to String\n\t* @example\n//rgba(100, 100, 100, 0.5)\nconst obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\",\n});\nconsole.log(obj4.toValue());\n// \"rgba(100,100,100,0.5)\"\n\t*/\n  public toValue(): string {\n    return this.options.prefix + this.join() + this.options.suffix;\n  }\n  /**\n\t* Make Property Object's array to String\n\t* @return {String} Join the elements of an array into a string\n\t* @example\n\t//rgba(100, 100, 100, 0.5)\n\tvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\t\"separator\" : \",\",\n\t\t\"prefix\" : \"rgba(\",\n\t\t\"suffix\" : \")\"\n\t});\n\tobj4.join();  // =>   \"100,100,100,0.5\"\n\t */\n  public join() {\n    return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.options.separator);\n  }\n  /**\n\t* executes a provided function once per array element.\n\t* @param {Function} callback - Function to execute for each element, taking three arguments\n\t* @param {All} [callback.currentValue] The current element being processed in the array.\n\t* @param {Number} [callback.index] The index of the current element being processed in the array.\n\t* @param {Array} [callback.array] the array.\n\t* @return {PropertyObject} An instance itself\n\t* @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n\t* @example\n//rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\nobj4.forEach(t => {\n\tconsole.log(t);\n});  // =>   \"100,100,100,0.5\"\n\t*/\n  public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n    this.value.forEach(func);\n    return this;\n  }\n  private init(value: string | any[]) {\n    const type = typeof value;\n\n    if (type === \"string\") {\n      this.value = (value as string).split(this.options.separator);\n    } else if (type === \"object\") {\n      this.value = (value as any[]);\n    } else {\n      this.value = [value];\n    }\n    return this;\n  }\n}\nexport default PropertyObject;\n","import { ROLES, ObjectInterface, MAXIMUM, FIXED, ALIAS, PAUSED, RUNNING, PLAY, ANIMATION, ENDED } from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\n\nexport function setAlias(name: string, alias: string[]) {\n  ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n  const length = names.length;\n  let roles: any = ROLES;\n  let fixed: any = FIXED;\n\n  for (let i = 0; i < length - 1; ++i) {\n    !roles[names[i]] && (roles[names[i]] = {});\n    roles = roles[names[i]];\n    if (isFixedProperty) {\n      !fixed[names[i]] && (fixed[names[i]] = {});\n      fixed = fixed[names[i]];\n    }\n  }\n  isFixedProperty && (fixed[names[length - 1]] = true);\n  roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n  const type = typeof value;\n\n  if (type === \"object\") {\n    if (isArray(value)) {\n      return \"array\";\n    } else if (value instanceof PropertyObject) {\n      return \"property\";\n    }\n  } else if (type === \"string\" || type === \"number\") {\n    return \"value\";\n  }\n  return type;\n}\nexport function toFixed(num: number) {\n  return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function isInProperties(roles: ObjectInterface<any>, args: any[], isCheckTrue?: boolean) {\n  const length = args.length;\n  let role: any = roles;\n\n  if (length === 0) {\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    if (role === true) {\n      return false;\n    }\n    role = role[args[i]];\n    if (!role || (!isCheckTrue && role === true)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isRole(args: any[], isCheckTrue?: boolean) {\n  return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: any[]) {\n  return isInProperties(FIXED, args, true);\n}\nexport function isUndefined(value: any): value is undefined {\n  return (typeof value === \"undefined\");\n}\nexport function isObject(value: any): value is ObjectInterface<any> {\n  return value && (typeof value === \"object\");\n}\nexport function isArray(value: any): value is any[] {\n  return Array.isArray(value);\n}\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\nexport function splitUnit(text: string) {\n  const matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return { prefix: \"\", unit: \"\", value: NaN };\n  }\n  const prefix = matches[1];\n  const value = matches[2];\n  const unit = matches[3];\n\n  return { prefix, unit, value: parseFloat(value) };\n}\n// export function camelize(str: string) {\n// \treturn str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n// }\nexport function decamelize(str: string) {\n  return str.replace(/([a-z])([A-Z])/g, (all, letter, letter2) => `${letter}-${letter2.toLowerCase()}`);\n}\n\nexport interface IterationInterface {\n  currentTime: number;\n  iterationCount: number;\n  elapsedTime: number;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n  return item.state.playCSS && item.getPlayState() === PAUSED;\n}\nexport function playCSS(item: Scene | SceneItem, exportCSS: boolean, properties = {}) {\n  if (!ANIMATION || item.getPlayState() === RUNNING) {\n    return;\n  }\n  if (isPausedCSS(item)) {\n    item.addPlayClass(true, properties);\n  } else {\n    if (item.isEnded()) {\n      item.setTime(0);\n    }\n    exportCSS && item.exportCSS();\n    const el = item.addPlayClass(false, properties);\n\n    if (!el) {\n      return;\n    }\n    addAnimationEvent(item, el);\n    item.setState({ playCSS: true });\n  }\n  item.setPlayState(RUNNING);\n  item.trigger(PLAY);\n}\n\nexport function addAnimationEvent(item: Scene | SceneItem, el: HTMLElement) {\n  const duration = item.getDuration();\n  const isZeroDuration = !duration || !isFinite(duration);\n\n  const animationend = () => {\n    if (!isZeroDuration) {\n      item.setState({ playCSS: false });\n      item.finish();\n    }\n  };\n  item.on(ENDED, () => {\n    el.removeEventListener(\"animationend\", animationend);\n    el.removeEventListener(\"animationiteration\", animationiteration);\n  });\n  const animationiteration = ({elapsedTime}: any) => {\n    const currentTime = elapsedTime;\n    const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n    item.state.currentTime = currentTime;\n    item.setCurrentIterationCount(iterationCount);\n  };\n  el.addEventListener(\"animationend\", animationend);\n  el.addEventListener(\"animationiteration\", animationiteration);\n}\n","import { isObject } from \"./utils\";\n\ntype CallbackType = (...args: any[]) => any;\ninterface EventParamterType {\n  [name: string]: CallbackType | CallbackType[];\n}\n/**\n* attach and trigger event handlers.\n* @memberof Scene\n*/\nclass EventTrigger {\n  private events: { [name: string]: CallbackType[] };\n  /**\n\t* @example\nconst et = new Scene.EventTrigger();\nconst scene = new Scene();\n\nscene.on(\"call\", e => {\n\tconsole.log(e.param);\n});\net.on(\"call\", e => {\n\tconsole.log(e.param);\n});\nscene.trigger(\"call\", {param: 1});\net.trigger(\"call\", {param: 1});\n\t */\n  constructor() {\n    this.events = {};\n  }\n  /**\n\t* Attach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function() {\n\tconsole.log(\"animate\");\n});\n\ntarget.trigger(\"animate\");\n\n\t*/\n  public on(name: string | EventParamterType, callback?: CallbackType | CallbackType[]) {\n    const events = this.events;\n\n    if (isObject(name)) {\n      for (const i in name) {\n        this.on(i, name[i]);\n      }\n      return this;\n    }\n    if (!(name in events)) {\n      events[name] = [];\n    }\n    if (!callback) {\n      return this;\n    }\n    if (isObject(callback)) {\n      (callback as CallbackType[]).forEach(func => this.on(name, func));\n      return this;\n    }\n    const event = events[name];\n\n    event.push(callback);\n    return this;\n  }\n  /**\n\t* Dettach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\nconst callback = function() {\n\tconsole.log(\"animate\");\n};\ntarget.on(\"animate\", callback);\n\ntarget.off(\"animate\", callback);\ntarget.off(\"animate\");\n\n\t*/\n  public off(name?: string, callback?: CallbackType) {\n    if (!name) {\n      this.events = {};\n    } else if (!callback) {\n      this.events[name] = [];\n    } else {\n      const callbacks = this.events[name];\n\n      if (!callbacks) {\n        return this;\n      }\n      const index = callbacks.indexOf(callback);\n\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n  /**\n\t* execute event handler\n\t* @param {String} name - event's name\n\t* @param {Function} [...data] - event handler's additional parameter\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function(a1, a2) {\n\tconsole.log(\"animate\", a1, a2);\n});\n\ntarget.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n\t*/\n  public trigger(name: string, ...data: any[]) {\n    const events = this.events;\n\n    if (!(name in events)) {\n      return this;\n    }\n\n    const event = events[name];\n\n    if (data.length) {\n      const target = data[0];\n\n      target.type = name;\n      target.currentTarget = this;\n      !target.target && (target.target = this);\n    }\n    event.forEach(callback => {\n      callback.apply(this, data);\n    });\n\n    return this;\n  }\n}\nexport default EventTrigger;\n","export interface EasingFunctionInterface extends Function {\n  easingName?: string;\n}\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunctionInterface = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunctionInterface = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import {\n  ObjectInterface, THRESHOLD,\n  ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n  ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n  DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED, RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE } from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, EasingFunctionInterface } from \"./easing\";\nimport { toFixed, isString, splitUnit } from \"./utils\";\n\nlet lastTime = 0;\nfunction camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\nfunction GetterSetter<T extends { new(...args: any[]): {} }>(\n  getter: string[], setter: string[], parent: string) {\n  return (constructor: T) => {\n    const prototype = constructor.prototype;\n\n    getter.forEach(name => {\n      prototype[camelize(`get ${name}`)] = function() {\n        return this[parent][name];\n      };\n    });\n    setter.forEach(name => {\n      prototype[camelize(`set ${name}`)] = function(value: any) {\n        this[parent][name] = value;\n        return this;\n      };\n    });\n  };\n}\nconst requestAnimFrame = /*#__PURE__*/(() => {\n  return (window as any).requestAnimationFrame ||\n    (window as any).webkitRequestAnimationFrame ||\n    (window as any).mozRequestAnimationFrame ||\n    ((callback: (time: number) => void) => {\n      const currTime = Date.now();\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      const id = window.setTimeout(() => {\n        callback(currTime + timeToCall);\n      }, 1000 / 60);\n      lastTime = currTime + timeToCall;\n      return id;\n    });\n})();\n\nexport type FillModeType = \"forwards\" | \"backwards\" | \"both\";\nexport type IterationCountType = number | \"infinite\";\nexport type EasingType = 0 | EasingFunctionInterface;\nexport type DirectionType = \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\";\nexport type PlayStateType = \"paused\" | \"running\";\n\nexport interface StateInterface {\n  id?: string;\n  easing?: EasingType;\n  easingName?: string;\n  iterationCount?: IterationCountType;\n  delay?: number;\n  fillMode?: FillModeType;\n  direction?: DirectionType;\n  playSpeed?: number;\n  iterationTime?: number;\n  currentTime?: number;\n  tickTime?: number;\n  currentIterationCount?: number;\n  prevTime?: number;\n  playState?: PlayStateType;\n  duration?: number;\n  [key: string]: any;\n}\nexport function isDirectionReverse(currentIterationCount: number,\n                                   iteraiontCount: IterationCountType, direction: DirectionType) {\n  if (direction === REVERSE) {\n    return true;\n  } else if (iteraiontCount !== \"infinite\" && currentIterationCount === iteraiontCount && iteraiontCount % 1 === 0) {\n    return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n  }\n  return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorOptions The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n/**\n* play video, animation, the others\n* @memberof Scene\n* @class Animator\n* @extends Scene.EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n* @param {AnimatorOptions} [options] - animator's options\n* @example\nconst animator = new Animator({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n*/\n\nconst setters = [ITERATION_COUNT, DELAY, FILL_MODE,\n  DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n@GetterSetter(getters, setters, \"state\")\nclass Animator extends EventTrigger {\n  public state: StateInterface;\n  public options: ObjectInterface<any>;\n\n  constructor(options?: StateInterface) {\n    super();\n    this.options = {};\n    this.state = {\n      id: \"\",\n      easing: 0,\n      easingName: \"linear\",\n      iterationCount: 1,\n      delay: 0,\n      fillMode: \"forwards\",\n      direction: NORMAL,\n      playSpeed: 1,\n      currentTime: 0,\n      iterationTime: -1,\n      currentIterationCount: 0,\n      tickTime: 0,\n      prevTime: 0,\n      playState: PAUSED,\n      duration: 0,\n    };\n    this.setOptions(options);\n  }\n  /**\n\t* set animator's easing.\n\t* @method Scene.Animator#setEasing\n\t* @param {array| function} curverArray - The speed curve of an animation.\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n\t*/\n  public setEasing(curveArray: [number, number, number, number] | EasingFunctionInterface): this {\n    const easing = Array.isArray(curveArray) ?\n      bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]) : curveArray;\n    const easingName = easing[EASING_NAME] || \"linear\";\n\n    this.setState({ easing, easingName });\n    return this;\n  }\n  /**\n\t* set animator's options.\n\t* @method Scene.Animator#setOptions\n\t* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n\t* @param {Object} [AnimatorOptions] - animator's options\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n\t*/\n  public setOptions(options: StateInterface = {}): this {\n    for (const name in options) {\n      const value = options[name];\n\n      if (name === EASING) {\n        this.setEasing(value);\n        continue;\n      } else if (name === DURATION) {\n        value && this.setDuration(value);\n        continue;\n      }\n      ((name in this.state ? this.state : this.options) as StateInterface)[name] = value;\n    }\n\n    return this;\n  }\n  /**\n\t* Get the animator's total duration including delay\n\t* @method Scene.Animator#getTotalDuration\n\t* @return {number} Total duration\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getTotalDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.state[DELAY] + this.getActiveDuration();\n  }\n  /**\n\t* Get the animator's total duration excluding delay\n\t* @method Scene.Animator#getActiveDuration\n\t* @return {number} Total duration excluding delay\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getActiveDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.getDuration() * (this.state[ITERATION_COUNT] as number);\n  }\n  /**\n\t* Check if the animator has reached the end.\n\t* @method Scene.Animator#isEnded\n\t* @return {boolean} ended\n\t* @example\nanimator.isEnded(); // true or false\n\t*/\n  public isEnded(): boolean {\n    if (this.state.tickTime === 0 && this.state[PLAY_STATE] === PAUSED) {\n      return true;\n    } else if (this.getTime() < this.getActiveDuration()) {\n      return false;\n    }\n    return true;\n  }\n  /**\n\t*Check if the animator is paused:\n\t* @method Scene.Animator#isPaused\n\t* @return {boolean} paused\n\t* @example\nanimator.isPaused(); // true or false\n\t*/\n  public isPaused(): boolean {\n    return this.state[PLAY_STATE] === PAUSED;\n  }\n  public setNext(animator: Animator): this {\n    this.on(ENDED, () => {\n      animator.play();\n    });\n    return this;\n  }\n  /**\n\t* play animator\n\t* @method Scene.Animator#play\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public play() {\n    this.state[PLAY_STATE] = RUNNING;\n    if (this.isEnded()) {\n      this.setTickTime(0);\n    }\n    this.state.tickTime = this.getTime();\n\n    requestAnimFrame((time: number) => {\n      this.state.prevTime = time;\n      this.tick(time);\n    });\n    /**\n\t\t * This event is fired when play animator.\n\t\t * @event Scene.Animator#play\n\t\t */\n    this.trigger(PLAY);\n\n    return this;\n  }\n  /**\n\t* pause animator\n\t* @method Scene.Animator#pause\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public pause(): this {\n    this.state[PLAY_STATE] = PAUSED;\n    /**\n\t\t * This event is fired when animator is paused.\n\t\t * @event Scene.Animator#paused\n\t\t */\n    this.trigger(PAUSED);\n    return this;\n  }\n  /**\n\t * end animator\n\t * @method Scene.Animator#finish\n\t * @return {Scene.Animator} An instance itself.\n\t*/\n  public finish() {\n    this.end();\n    return this;\n  }\n  /**\n\t * end animator\n\t * @method Scene.Animator#end\n\t * @return {Scene.Animator} An instance itself.\n\t*/\n  public end() {\n    this.pause();\n    /**\n\t\t * This event is fired when animator is ended.\n\t\t * @event Scene.Animator#ended\n\t\t */\n    this.trigger(ENDED);\n    return this;\n  }\n  /**\n\t* reset animator\n\t* @method Scene.Animator#reset\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public reset() {\n    this.state.tickTime = 0;\n    this.setTime(0);\n    this.pause();\n    return this;\n  }\n  /**\n\t* set currentTime\n\t* @method Scene.Animator#setTime\n\t* @param {Number|String} time - currentTime\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\n\nanimator.setTime(\"from\"); // 0\nanimator.setTime(\"to\"); // 100%\nanimator.setTime(\"50%\");\nanimator.setTime(10);\nanimator.getTime() // 10\n\t*/\n  public setTime(time: number | string, isTick?: boolean) {\n    const activeDuration = this.getActiveDuration();\n    let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n    this.state.tickTime = this.state.delay + currentTime;\n    if (currentTime < 0) {\n      currentTime = 0;\n    } else if (currentTime > activeDuration) {\n      currentTime = activeDuration;\n    }\n    this.state.currentTime = currentTime;\n    this.calculateIterationTime();\n\n    if (this.isDelay()) {\n      return this;\n    }\n    /**\n\t\t * This event is fired when the animator updates the time.\n\t\t * @event Scene.Animator#timeupdate\n\t\t * @param {Object} param The object of data to be sent to an event.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t */\n    this.trigger(TIMEUPDATE, {\n      currentTime,\n      time: this.getIterationTime(),\n      iterationCount: this.getIterationCount(),\n    });\n\n    return this;\n  }\n  public getState(name: string): any {\n    return this.state[name];\n  }\n  public setState(object: StateInterface) {\n    for (const name in object) {\n      this.state[name] = object[name];\n    }\n    return this;\n  }\n  /**\n\t* Get the animator's current time\n\t* @method Scene.Animator#getTime\n\t* @return {number} current time\n\t* @example\nanimator.getTime();\n\t*/\n  public getTime(): number {\n    return this.state.currentTime;\n  }\n  public getUnitTime(time: string | number) {\n    if (isString(time)) {\n      const duration = this.getDuration() || 100;\n\n      if (time === \"from\") {\n        return 0;\n      } else if (time === \"to\") {\n        return duration;\n      }\n      const { unit, value } = splitUnit(time);\n\n      if (unit === \"%\") {\n        !this.getDuration() && (this.state.duration = duration);\n        return parseFloat(time) / 100 * duration;\n      } else if (unit === \">\") {\n        return value + THRESHOLD;\n      } else {\n        return value;\n      }\n    } else {\n      return toFixed(time);\n    }\n  }\n  /**\n\t * Check if the current state of animator is delayed.\n\t * @method Scene.Animator#isDelay\n\t * @return {boolean} check delay state\n\t */\n  public isDelay() {\n    const { delay, tickTime } = this.state;\n\n    return delay > 0 && (tickTime < delay);\n  }\n  public setCurrentIterationCount(iterationCount: number): this {\n    const state = this.state;\n    const passIterationCount = Math.floor(iterationCount);\n\n    if (state.currentIterationCount < passIterationCount) {\n      /**\n\t\t\t* The event is fired when an iteration of an animation ends.\n\t\t\t* @event Scene.Animator#iteration\n\t\t\t* @param {Object} param The object of data to be sent to an event.\n\t\t\t* @param {Number} param.currentTime The total time that the animator is running.\n\t\t\t* @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t\t*/\n      this.trigger(\"iteration\", {\n        currentTime: state.currentTime,\n        iterationCount: passIterationCount,\n      });\n    }\n    state.currentIterationCount = iterationCount;\n    return this;\n  }\n  protected calculateIterationTime() {\n    const { iterationCount, fillMode, direction } = this.state;\n    const duration = this.getDuration();\n    const time = this.getTime();\n    const currentIterationCount = duration === 0 ? 0 : time / duration;\n    let currentIterationTime = duration ? time % duration : 0;\n\n    if (!duration) {\n      this.setIterationTime(0);\n      return this;\n    }\n    this.setCurrentIterationCount(currentIterationCount);\n\n    // direction : normal, reverse, alternate, alternate-reverse\n    // fillMode : forwards, backwards, both, none\n    const isReverse = isDirectionReverse(currentIterationCount, iterationCount, direction);\n\n    if (isReverse) {\n      currentIterationTime = duration - currentIterationTime;\n    }\n    if (iterationCount !== INFINITE) {\n      const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n      // fill forwards\n      if (currentIterationCount >= iterationCount) {\n        currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n        isReverse && (currentIterationTime = duration - currentIterationTime);\n      }\n    }\n    this.setIterationTime(currentIterationTime);\n    return this;\n  }\n  protected tick(now: number) {\n    const state = this.state;\n    const { playSpeed, prevTime } = state;\n    const currentTime = this.state.tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n    state.prevTime = now;\n    this.setTickTime(currentTime);\n    if (this.isEnded()) {\n      this.end();\n      return;\n    }\n    if (state[PLAY_STATE] === PAUSED) {\n      return;\n    }\n\n    requestAnimFrame((time: number) => {\n      this.tick(time);\n    });\n  }\n  private setTickTime(time: number) {\n    this.setTime(time - this.state.delay, true);\n  }\n}\n\n/**\n * Get a delay for the start of an animation.\n * @method Scene.Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Scene.Animator#setDelay\n * @param {number} delay - delay\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#getFillMode\n * @return {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#setFillMode\n * @param {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode - fillMode\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Scene.Animator#getIterationCount\n * @return {\"inifnite\"|number} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Scene.Animator#setIterationCount\n * @param {\"inifnite\"|number} iterationCount - iterationCount\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#getDirection\n * @return {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#setDirection\n * @param {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction - direction\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Scene.Animator#getPlayState\n * @return {\"paused\"|\"running\"} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Scene.Animator#setPlayState\n * @param {\"paused\"|\"running\"} playState - playState\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Scene.Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Scene.Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Scene.Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Scene.Animator#setDuration\n * @param {number} duration - duration\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Scene.Animator#getEasing\n * @return {0|function} easing\n */\n/**\n * Get the speed curve's name\n * @method Scene.Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Scene.Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\ninterface Animator {\n  getIterationTime(): number;\n  setIterationTime(time: number): this;\n  setDelay(delay: number): this;\n  getDelay(): number;\n  setFillMode(fillMode: FillModeType): this;\n  getFillMode(): FillModeType;\n  setIterationCount(iterationCount: IterationCountType): this;\n  getIterationCount(): IterationCountType;\n  setDirection(direction: IterationCountType): this;\n  getDirection(): IterationCountType;\n  setPlayState(playState: PlayStateType): this;\n  getPlayState(): PlayStateType;\n  setPlaySpeed(playSpeed: number): this;\n  getPlaySpeed(): number;\n  setDuration(duration: number): this;\n  getDuration(): number;\n  getEasing(): EasingType;\n  getEasingName(): string;\n}\nexport default Animator;\n","import { RGBA } from \"../consts\";\n\n/**\n* @namespace\n* @name Color\n*/\nexport const COLOR_MODELS = [\"rgb\", RGBA, \"hsl\", \"hsla\"];\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {String} hex color\n* @example\nconsole.log(cutHex(\"#000000\"))\n// \"000000\"\n*/\nexport function cutHex(hex: string) {\n  return (hex.charAt(0) === \"#\") ? hex.substring(1) : hex;\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {Array} rgb color\n* @example\nconsole.log(hexToRGB(\"#000000\"));\n// [0, 0, 0]\nconsole.log(hexToRGB(\"#201045\"));\n// [32, 16, 69]\n*/\nexport function hexToRGB(hex: string) {\n  const h = cutHex(hex);\n  const r = parseInt(h.substring(0, 2), 16);\n  const g = parseInt(h.substring(2, 4), 16);\n  const b = parseInt(h.substring(4, 6), 16);\n  let a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n  return [r, g, b, a];\n}\n\n/**\n* convert 3-digit hex color to 6-digit hex color.\n* @memberof Color\n* @param {String} hex - 3-digit hex color\n* @return {String} 6-digit hex color\n* @example\nconsole.log(hex3to6(\"#123\"));\n// \"#112233\"\n*/\nexport function hex3to6(h: string) {\n  const r = h.charAt(1);\n  const g = h.charAt(2);\n  const b = h.charAt(3);\n  const arr = [\"#\", r, r, g, g, b, b];\n\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgb color.\n* @memberof Color\n* @param {Array} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1)\n* @return {Array} rgb color\n* @example\nconsole.log(hslToRGB([150, 0.5, 0.4]));\n// [51, 153, 102]\n*/\nexport function hslToRGB(hsl: number[]) {\n  let h = hsl[0];\n  const s = hsl[1];\n  const l = hsl[2];\n\n  if (h < 0) {\n    h +=  Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n  h %= 360;\n\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n  const m = l - c / 2;\n  let rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n  const result = [\n    Math.round((rgb[0] + m) * 255),\n    Math.round((rgb[1] + m) * 255),\n    Math.round((rgb[2] + m) * 255),\n  ];\n\n  if (hsl.length > 3) {\n    result[3] = hsl[3];\n  }\n  return result;\n}\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {COLOR_MODELS, hexToRGB, hex3to6, hslToRGB} from \"./color\";\nimport {isString, isArray} from \"../utils\";\nimport { ObjectInterface, RGBA } from \"../consts\";\n\n/**\n* divide text by space.\n* @memberof Property\n* @function splitSpace\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitSpace(text: string) {\n  // divide comma(,)\n  const matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Property\n* @function splitComma\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitComma(text: string) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  const matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n\n  return matches ? matches.map(str => str.trim()) : [];\n}\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const length = properties.length;\n  const obj = [];\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      continue;\n    }\n    obj.push({[matches[1].trim()]: toPropertyObject(matches[2].trim())});\n  }\n  return obj;\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n\t* convert text with parentheses to PropertyObject[type=color].\n\t* If the values are not RGBA model, change them RGBA mdoel.\n\t* @memberof Property\n\t* @function toColorObject\n\t* @param {String|PropertyObject} value - color value \"rgba(0,0,0,1)\"\n\t* @return {PropertyObject} PropertyObject[type=color]\n\t* @example\ntoColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function toColorObject(value: PropertyObject | number[] | string) {\n  let colorObject;\n\n  if (value instanceof PropertyObject) {\n    colorObject = value;\n  } else if (isArray(value)) {\n    colorObject = arrayToColorObject(value);\n  } else if (isString(value)) {\n    return stringToColorObject(value);\n  }\n  let colorArray = colorObject.value;\n  const length = colorArray.length;\n\n  if (length === 4) {\n    colorArray[3] = parseFloat(colorArray[3]);\n  } else if (length === 3) {\n    colorArray[3] = 1;\n  }\n  colorObject.setOptions({type: \"color\"});\n  const colorModel = colorObject.getOption(\"model\").toLowerCase();\n\n  // rgb hsl model to CHANGE rgba hsla\n  // string -> number\n  if (colorModel === \"rgb\") {\n    colorObject.setOptions({\n      type: \"color\",\n      model: RGBA,\n      prefix: `${RGBA}(`,\n      suffix: \")\",\n    });\n  }\n  switch (colorModel) {\n    case \"rgb\":\n    case RGBA:\n      for (let i = 0; i < 3; ++i) {\n        colorArray[i] = parseInt(colorArray[i], 10);\n      }\n      break;\n    case \"hsl\":\n    case \"hsla\":\n      for (let i = 1; i < 3; ++i) {\n        if (colorArray[i].indexOf(\"%\") !== -1) {\n          colorArray[i] = parseFloat(colorArray[i]) / 100;\n        }\n      }\n      // hsl, hsla to rgba\n      colorArray = hslToRGB(colorArray);\n      return arrayToColorObject(colorArray);\n    default:\n  }\n  return colorObject;\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(value: string) {\n  // [prefix, value, other]\n  const matches = (/([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g).exec(value);\n\n  if (!matches || matches.length < 4) {\n    return value;\n  }\n  const model = matches[1] || \"\";\n  const text = matches[2];\n  let prefix = `${model}(`;\n  let suffix = `)${matches[3]}`;\n  let separator = \",\";\n  let values;\n  // divide comma(,)\n  const obj = toPropertyObject(text);\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.getOption(\"separator\");\n    values = obj.value;\n    prefix += obj.getOption(\"prefix\");\n    suffix = obj.getOption(\"suffix\") + suffix;\n  } else {\n    values = [text];\n  }\n  const result = new PropertyObject(values, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n\n  if (COLOR_MODELS.indexOf(model) !== -1) {\n    return toColorObject(result);\n  } else {\n    return result;\n  }\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  let colorArray: number[];\n\n  if (value.charAt(0) === \"#\") {\n    if (value.length === 4) {\n      colorArray = hexToRGB(hex3to6(value));\n    } else {\n      colorArray = hexToRGB(value);\n    }\n    return arrayToColorObject(colorArray);\n  } else if (value.indexOf(\"(\") !== -1) {\n    // in bracket.\n    return stringToBracketObject(value);\n  } else {\n    throw new Error(`Invalid Format : Not a Color - ${value}`);\n  }\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: string | ObjectInterface<any> | any[]): any {\n  if (!isString(value)) {\n    if (Array.isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: ObjectInterface<any> = {}) {\n  const model = object.getOption(\"model\");\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => toObject(obj, result));\n  }\n  return result;\n}\n","import {\n  TRANSFORM, FILTER, ObjectInterface, NameType,\n  ANIMATION, ALIAS, TIMING_FUNCTION, PROPERTY, FUNCTION} from \"./consts\";\nimport {isObject, isString, isArray, isRole, getType} from \"./utils\";\nimport {toPropertyObject, splitStyle, toObject} from \"./utils/property\";\nimport PropertyObject from \"./PropertyObject\";\n\nfunction toInnerProperties(obj: ObjectInterface<string>) {\n  if (!obj) {\n    return \"\";\n  }\n  const arrObj = [];\n\n  for (const name in obj) {\n    arrObj.push(`${name.replace(/\\d/g, \"\")}(${obj[name]})`);\n  }\n  return arrObj.join(\" \");\n}\nfunction isPropertyObject(value: any): value is PropertyObject {\n  return value instanceof PropertyObject;\n}\n/* eslint-disable */\nfunction clone(target: ObjectInterface<any>, toValue = false) {\n  return merge({}, target, toValue);\n}\nfunction merge(to: ObjectInterface<any>, from: ObjectInterface<any>, toValue = false) {\n  for (const name in from) {\n    const value = from[name];\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n      to[name] = toValue ? value.toValue() : value.clone();\n    } else if (type === FUNCTION) {\n      to[name] = toValue ? getValue([name], value()) : value;\n    } else if (type === \"array\") {\n      to[name] = value.slice();\n    } else if (type === \"object\") {\n      if (isObject(to[name]) && !isPropertyObject(to[name])) {\n        merge(to[name], value, toValue);\n      } else {\n        to[name] = clone(value, toValue);\n      }\n    } else {\n      to[name] = from[name];\n    }\n  }\n  return to;\n}\n/* eslint-enable */\n\nfunction getValue(names: NameType[], value: any): any {\n  const type = getType(value);\n\n  if (type === PROPERTY) {\n    return value.toValue();\n  } else if (type === FUNCTION) {\n    if (names[0] !== TIMING_FUNCTION) {\n      return getValue(names, value());\n    }\n  } else if (type === \"object\") {\n    return clone(value, true);\n  }\n  return value;\n}\n/**\n* Animation's Frame\n* @class Scene.Frame\n* @param {Object} properties - properties\n* @example\nconst frame = new Scene.Frame({\n\tdisplay: \"none\"\n\ttransform: {\n\t\ttranslate: \"50px\",\n\t\tscale: \"5, 5\",\n\t}\n});\n */\nclass Frame {\n  public properties: ObjectInterface<any>;\n  constructor(properties: ObjectInterface<any> = {}) {\n    this.properties = {};\n    this.set(properties);\n  }\n  /**\n\t* get property value\n\t* @method Scene.Frame#get\n\t* @param {...Number|String|Scene.PropertyObject} args - property name or value\n\t* @example\n\tframe.get(\"display\") // => \"none\", \"block\", ....\n\tframe.get(\"transform\", \"translate\") // => \"10px,10px\"\n\t*/\n  public get(...args: NameType[]) {\n    const value = this.raw(...args);\n\n    return getValue(args[0] in ALIAS ? ALIAS[args[0]] : args, value);\n  }\n\n  public raw(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties)) {\n        return undefined;\n      }\n      properties = properties[params[i]];\n    }\n    return properties;\n  }\n  /**\n\t* remove property value\n\t* @method Scene.Frame#remove\n\t* @param {...String} args - property name\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.remove(\"display\")\n\t*/\n  public remove(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length - 1; ++i) {\n      if (!isObject(properties)) {\n        return this;\n      }\n      properties = properties[params[i]];\n    }\n    delete properties[params[length - 1]];\n    return this;\n  }\n  /**\n\t* set property\n\t* @method Scene.Frame#set\n\t* @param {...Number|String|Scene.PropertyObject} args - property names or values\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n// one parameter\nframe.set({\n\tdisplay: \"none\",\n\ttransform: {\n\t\ttranslate: \"10px, 10px\",\n\t\tscale: \"1\",\n\t},\n\tfilter: {\n\t\tbrightness: \"50%\",\n\t\tgrayscale: \"100%\"\n\t}\n});\n\n// two parameters\nframe.set(\"transform\", {\n\ttranslate: \"10px, 10px\",\n\tscale: \"1\",\n});\n\n// three parameters\nframe.set(\"transform\", \"translate\", \"50px\");\n\t*/\n  public set(...args: any[]) {\n    const length = args.length;\n    const params = args.slice(0, -1);\n    const value = args[length - 1];\n\n    if (params[0] in ALIAS) {\n      this._set(ALIAS[params[0]], value);\n    } else if (length === 2 && isArray(params[0])) {\n      this._set(params[0], value);\n    } else if (isObject(value)) {\n      if (isArray(value)) {\n        this._set(params, value);\n      } else if (isPropertyObject(value)) {\n        if (isRole(params)) {\n          this.set(...params, toObject(value));\n        } else {\n          this._set(params, value);\n        }\n      } else if (value instanceof Frame) {\n        this.merge(value);\n      } else {\n        for (const name in value) {\n          this.set(...params, name, value[name]);\n        }\n      }\n    } else if (isString(value)) {\n      if (isRole(params)) {\n        const obj = toPropertyObject(value);\n\n        if (isObject(obj)) {\n          this.set(...params, obj);\n        }\n        return this;\n      } else {\n        const styles = splitStyle(value);\n\n        styles.forEach(style => {\n          this.set(...params, style);\n        });\n        if (styles.length) {\n          return this;\n        }\n      }\n      this._set(params, value);\n    } else {\n      this._set(params, value);\n    }\n    return this;\n  }\n  /**\n\t* check that has property.\n\t* @method Scene.Frame#has\n\t* @param {...String} args - property name\n\t* @example\n\tframe.has(\"property\", \"display\") // => true or false\n\t*/\n  public has(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    if (!length) {\n      return false;\n    }\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties) || !(params[i] in properties)) {\n        return false;\n      }\n      properties = properties[params[i]];\n    }\n    return true;\n  }\n  /**\n\t* clone frame.\n\t* @method Scene.Frame#clone\n\t* @return {Scene.Frame} An instance of clone\n\t* @example\n\tframe.clone();\n\t*/\n  public clone() {\n    const frame = new Frame();\n\n    frame.merge(this);\n    return frame;\n  }\n  /**\n\t* merge one frame to other frame.\n\t* @method Scene.Frame#merge\n\t* @param {Scene.Frame} frame - target frame.\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.merge(frame2);\n\t*/\n  public merge(frame: Frame) {\n    const properties = this.properties;\n    const frameProperties = frame.properties;\n\n    if (!frameProperties) {\n      return this;\n    }\n    merge(properties, frameProperties);\n\n    return this;\n  }\n  public toObject() {\n    return clone(this.properties, true);\n  }\n  /**\n\t* Specifies an css object that coverted the frame.\n\t* @method Scene.Frame#toCSSObject\n\t* @return {object} cssObject\n\t*/\n  public toCSSObject() {\n    const properties = this.toObject();\n    const cssObject: ObjectInterface<string> = {};\n\n    for (const name in properties) {\n      if (isRole([name], true)) {\n        continue;\n      }\n      const value = properties[name];\n\n      if (name === TIMING_FUNCTION) {\n        cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n          (isString(value) ? value : value.easingName) || \"initial\";\n        continue;\n      }\n      cssObject[name] = value;\n    }\n    const transform = toInnerProperties(properties.transform);\n    const filter = toInnerProperties(properties.filter);\n\n    TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n    FILTER && filter && (cssObject[FILTER] = filter);\n    return cssObject;\n  }\n  /**\n\t* Specifies an css text that coverted the frame.\n\t* @method Scene.Frame#toCSS\n\t* @return {string} cssText\n\t*/\n  public toCSS() {\n    const cssObject = this.toCSSObject();\n    const cssArray = [];\n\n    for (const name in cssObject) {\n      cssArray.push(`${name}:${cssObject[name]};`);\n    }\n    return cssArray.join(\"\");\n  }\n  private _set(args: NameType[], value: any) {\n    let properties = this.properties;\n    const length = args.length;\n\n    for (let i = 0; i < length - 1; ++i) {\n      const name = args[i];\n\n      !(name in properties) && (properties[name] = {});\n      properties = properties[name];\n    }\n    if (!length) {\n      return;\n    }\n    properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n  }\n}\nexport default Frame;\n","import { ObjectInterface, RoleInterface } from \"./consts\";\nimport { isObject, isArray, isInProperties, toFixed } from \"./utils\";\nimport PropertyObject from \"./PropertyObject\";\nimport Frame from \"./Frame\";\n\nfunction getNames(names: ObjectInterface<any>, stack: string[]) {\n  let arr: string[][] = [];\n\n  for (const name in names) {\n    stack.push(name);\n\n    if (isObject(names[name])) {\n      arr = arr.concat(getNames(names[name], stack));\n    } else {\n      arr.push(stack.slice());\n    }\n    stack.pop();\n  }\n  return arr;\n}\nfunction updateFrame(names: ObjectInterface<any>, properties: ObjectInterface<any>) {\n  for (const name in properties) {\n    const value = properties[name];\n\n    if (!isObject(value) || isArray(value) || value instanceof PropertyObject) {\n      names[name] = true;\n      continue;\n    }\n    if (!isObject(names[name])) {\n      names[name] = {};\n    }\n    updateFrame(names[name], properties[name]);\n  }\n}\n/**\n* a list of objects in chronological order.\n* @memberof Scene\n*/\nclass Keyframes {\n  public times: number[];\n  public items: ObjectInterface<any>;\n  public names: RoleInterface;\n  /**\n\t */\n  constructor() {\n    this.times = [];\n    this.items = {};\n    this.names = {};\n  }\n  /**\n\t* A list of names\n\t* @return {string[][]} names\n\t* @example\nkeyframes.getNames(); // [[\"a\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n\t*/\n  public getNames() {\n    const names = this.names;\n\n    return getNames(names, []);\n  }\n  /**\n\t* Check if keyframes has propery's name\n\t* @param {...string[]} name - property's time\n\t* @return {Boolean} true: if has property, false: not\n\t* @example\nkeyframes.hasName(\"transform\", \"translate\"); // true or not\n\t*/\n  public hasName(...args: string[]) {\n    return isInProperties(this.names, args, true);\n  }\n  /**\n\t * update property names used in frames.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public update() {\n    const items = this.items;\n\n    for (const time in items) {\n      this.updateFrame(items[time]);\n    }\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} callback Function to execute for each element, taking three arguments\n\t * @param {Scene.Frame} [callback.item] The value of the item being processed in the keyframes.\n\t * @param {string} [callback.time] The time of the item being processed in the keyframes.\n\t * @param {object} [callback.items] The object that forEach() is being applied to.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public forEach(callback: (item: any, time: number, items: ObjectInterface<any>) => void) {\n    const times = this.times;\n    const items = this.items;\n\n    times.forEach(time => {\n      callback(items[time], time, items);\n    });\n  }\n  /**\n\t* update property names used in frame.\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.Keyframes} An instance itself\n\t* @example\nkeyframes.updateFrame(frame);\n\t*/\n  public updateFrame(frame: Frame) {\n    if (!frame) {\n      return this;\n    }\n    const properties = frame.properties;\n    const names = this.names;\n\n    updateFrame(names, properties);\n    return this;\n  }\n  /**\n\t * Get how long an animation should take to complete one cycle.\n\t * @return {number} duration\n\t */\n  public getDuration() {\n    const times = this.times;\n\n    return times.length === 0 ? 0 : times[times.length - 1];\n  }\n  /**\n\t * Set how long an animation should take to complete one cycle.\n\t * @param {number} duration - duration\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public setDuration(duration: number, originalDuration: number = this.getDuration()) {\n    const ratio = duration / originalDuration;\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(time => {\n      const time2 = toFixed(time * ratio);\n\n      obj[time2] = items[time];\n\n      return time2;\n    });\n    this.items = obj;\n  }\n  /**\n\t * Set how much time you want to push ahead.\n\t * @param {number} time - time\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public unshift(time: number) {\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(t => {\n      const time2 = toFixed(time + t);\n\n      obj[time2] = items[t];\n      return time2;\n    });\n    this.items = obj;\n    return this;\n  }\n  /**\n\t* get size of list\n\t* @return {Number} length of list\n\t*/\n  public size() {\n    return this.times.length;\n  }\n  /**\n\t* add object in list\n\t* @param {Number} time - frame's time\n\t* @param {Object} object - target\n\t* @return {Scene.Keyframes} An instance itself\n\t*/\n  public add(time: number, object: any) {\n    this.items[time] = object;\n    this.addTime(time);\n    return this;\n  }\n  /**\n\t* Check if keyframes has object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Boolean} true: if has time, false: not\n\t*/\n  public has(time: number) {\n    return time in this.items;\n  }\n  /**\n\t* get object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Object} object at that time\n\t*/\n  public get(time: number) {\n    return this.items[time];\n  }\n  /**\n\t* remove object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Keyframes} An instance itself\n\t*/\n  public remove(time: number) {\n    const items = this.items;\n\n    delete items[time];\n    this.removeTime(time);\n    return this;\n  }\n  private addTime(time: number) {\n    const times = this.times;\n    const length = times.length;\n    let pushIndex = length;\n\n    for (let i = 0; i < length; ++i) {\n      // if time is smaller than times[i], add time to index\n      if (time === times[i]) {\n        return this;\n      } else if (time < times[i]) {\n        pushIndex = i;\n        break;\n      }\n    }\n    this.times.splice(pushIndex, 0, time);\n    return this;\n  }\n  private removeTime(time: number) {\n    const index = this.times.indexOf(time);\n\n    if (index > -1) {\n      this.times.splice(index, 1);\n    }\n    return this;\n  }\n}\nexport default Keyframes;\n","/**\n* @namespace\n* @name Dot\n*/\n\nimport { isArray, splitUnit } from \"../utils\";\nimport PropertyObject from \"../PropertyObject\";\nimport { EasingType } from \"../Animator\";\nimport { getType } from \"../utils\";\nimport { PROPERTY, FUNCTION } from \"../consts\";\nimport { toPropertyObject } from \"./property\";\n\n/**\n* The dot product of Arrays\n* @memberof Dot\n* @function dotArray\n* @param {Array} a1 value1\n* @param {Array} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {Array|Object} Array.\n* @example\ndotArray([0, 0, 0, 1],[50, 50, 50, 1],0.5, 0.5);\n// => [25, 25, 25, 1]\n*/\nexport function dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  }\n  if (!isArray(a2)) {\n    return a1;\n  }\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\n/**\n* The dot product of PropertyObject(type=color)\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Dot\n* @function dotColor\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} PropertyObject(type=color).\n* @example\nvar colorObject = ......; //PropertyObject(type=color, model=\"rgba\", value=[254, 254, 254, 1]);\ndotColor(\"#000\",  colorObject, 0.5, 0.5);\n// \"#000\" => PropertyObject(type=color, model=\"rgba\", value=[0, 0, 0, 1]);\n// return => PropertyObject(type=color, model=\"rgba\", value=[127, 127, 127, 1]);\n*/\nexport function dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  if (b2 === 0) {\n    return color2;\n  }\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.getOption(\"model\");\n  const model2 = color2.getOption(\"model\");\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n/**\n* The dot product of Objects\n* @memberof Dot\n* @function dotObject\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} Array with Separator.\n* @example\ndotObject(PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)]),\nPropertyObject([\"9px\", \"solid\", rgba(50, 50, 50, 1)]),\n0.5, 0.5);\n// => PropertyObject([\"5px\", \"solid\", rgba(25, 25, 25, 1)])\n*/\nexport function dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.getOption(\"type\");\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.getOption(\"separator\") || a2.getOption(\"separator\"),\n    prefix: a1.getOption(\"prefix\") || a2.getOption(\"prefix\"),\n    suffix: a1.getOption(\"suffix\") || a2.getOption(\"suffix\"),\n    model: a1.getOption(\"model\") || a2.getOption(\"model\"),\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === \"array\") {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  // split number and unit of the value.\n  const r1 = b1 / (b1 + b2);\n  const r2 = 1 - r1;\n\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = v1.value * r2 + v2.value * r1;\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import { ObjectInterface } from \"../consts\";\n\nexport function hasClass(element: HTMLElement, className: string) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n  return !!element.className.match(new RegExp(`(\\\\s|^)${className}(\\\\s|$)`));\n}\n\nexport function addClass(element: HTMLElement, className: string) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += ` ${className}`;\n  }\n}\n\nexport function removeClass(element: HTMLElement, className: string) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    const reg = new RegExp(`(\\\\s|^)${className}(\\\\s|$)`);\n\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n\nexport function fromCSS(elements: HTMLElement | HTMLElement[] | NodeListOf<HTMLElement>, properties: string[]) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n  let element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n  const cssObject: ObjectInterface<any> = {};\n  const styles = window.getComputedStyle(element) as any;\n  const length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n  return cssObject;\n}\n","import Animator, { StateInterface, EasingType, isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n  isUndefined,\n  isObject,\n  isArray,\n  decamelize,\n  toFixed,\n  isFixed,\n  playCSS,\n} from \"./utils\";\nimport Keyframes from \"./Keyframes\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n  KEYFRAMES, ANIMATION, START_ANIMATION,\n  PREFIX, THRESHOLD, ObjectInterface, NameType,\n  TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, NORMAL, INFINITE,\n  REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n  EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION\n} from \"./consts\";\nimport { addClass, removeClass, hasClass, fromCSS } from \"./utils/css\";\n\nfunction toId(text: string) {\n  return text.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nfunction makeId(selector?: boolean) {\n  for (; ;) {\n    const id = `${Math.floor(Math.random() * 100000)}`;\n\n    if (!selector) {\n      return id;\n    }\n    const checkElement = document.querySelector(`[data-scene-id=\"${id}\"]`);\n\n    if (!checkElement) {\n      return id;\n    }\n  }\n}\nfunction makeAnimationProperties(properties: ObjectInterface<string | number>) {\n  const cssArray = [];\n\n  for (const name in properties) {\n    cssArray.push(`${ANIMATION}-${decamelize(name)} : ${properties[name]};`);\n  }\n  return cssArray.join(\"\");\n}\n\ntype ElementsType = HTMLElement[] | NodeListOf<HTMLElement>;\n/**\n* manage Frame Keyframes and play keyframes.\n* @memberof Scene\n* @extends Scene.Animator\n* @example\nconst item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator {\n  public keyframes: Keyframes;\n  private elements: ElementsType;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst item = new Scene.SceneItem({\n\t\t0: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\t1: {\n\t\t\tdisplay: \"block\",\n\t\t\topacity: 0,\n\t\t},\n\t\t2: {\n\t\t\topacity: 1,\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.keyframes = new Keyframes();\n    this.elements = [];\n    this.load(properties, options);\n  }\n  public getDuration() {\n    return Math.max(this.state[DURATION], this.keyframes.getDuration());\n  }\n  public setDuration(duration: number) {\n    if (duration === 0) {\n      return this;\n    }\n    const originalDuration = this.getDuration();\n\n    if (originalDuration > 0) {\n      this.keyframes.setDuration(duration, originalDuration);\n    }\n    super.setDuration(toFixed(duration));\n    return this;\n  }\n  /**\n\t* set the unique indicator of the item.\n\t* @method Scene.SceneItem#setId\n\t* @param {String} [id] - the indicator of the item.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nconst item = new SceneItem();\n\nitem.setId(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public setId(id?: string) {\n    const elements = this.elements;\n    const length = elements.length;\n\n    this.setState({ id: id || makeId(!!length) });\n    const sceneId = toId(this.getId());\n\n    this.options.selector || (this.options.selector = `[data-scene-id=\"${sceneId}\"]`);\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      elements[i].setAttribute(\"data-scene-id\", sceneId);\n    }\n    return this;\n  }\n  /**\n\t* Specifies the unique indicator of the item.\n\t* @method Scene.SceneItem#getId\n\t* @return {String} the indicator of the item.\n\t* @example\nconst item = scene.newItem(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public getId() {\n    return this.state.id;\n  }\n  /**\n\t* Set properties to the sceneItem at that time\n\t* @method Scene.SceneItem#set\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\nconsole.log(item.get(0, \"a\")); // \"b\"\n\t*/\n  public set(time: any[] | number | string | ObjectInterface<any>, ...args: any[]) {\n    if (isObject(time)) {\n      this.load(time);\n      return this;\n    } else if (args[0]) {\n      if (args[0] instanceof SceneItem) {\n        const item: SceneItem = args[0];\n        const delay = item.getDelay();\n        const realTime = this.getUnitTime(time) + delay;\n        const { keys, values, frames } = item.getAllTimes(!!delay || !this.hasFrame(time));\n        const easing = this.getEasingName() !== item.getEasingName() ? item.getEasing() : 0;\n\n        keys.forEach(t => {\n          this.set(realTime + t, frames[values[t]]);\n        });\n        if (easing) {\n          this.set(realTime + keys[0], EASING, easing);\n          this.set(realTime + keys[keys.length - 1], EASING, \"initial\");\n        }\n        return this;\n      } else if (args.length === 1 && isArray(args[0])) {\n        args[0].forEach((item: any) => {\n          this.set(time, item);\n        });\n        return this;\n      }\n    }\n    const frame = this.newFrame(time);\n\n    frame.set(...args);\n    this.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Get properties of the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} args property's name or properties\n\t* @return {Number|String|Scene.PropertyObejct} property value\n\t* @example\nitem.get(0, \"a\"); // item.getFrame(0).get(\"a\");\nitem.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n\t*/\n  public get(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    return frame && frame.get(...args);\n  }\n  /**\n\t* remove properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.remove(0, \"a\");\n\t*/\n  public remove(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    frame && frame.remove(...args);\n    this.update();\n    return this;\n  }\n  /**\n\t* Append the item or object at the last time.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.append(new SceneItem({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n}));\nitem.append({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\nitem.set(item.getDuration(), {\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\n\t*/\n  public append(item: SceneItem | object) {\n    this.set(this.getDuration(), item);\n    return this;\n  }\n  /**\n\t* Push the front frames for the time and prepend the scene item or item object.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t*/\n  public prepend(item: SceneItem | object) {\n    if (item instanceof SceneItem) {\n      const delay = item.getDelay();\n      const duration = item.getIterationCount() === INFINITE ? item.getDuration() : item.getActiveDuration();\n      const unshiftTime = duration + delay;\n      const firstFrame = this.keyframes.get(0);\n\n      if (firstFrame) {\n        this.keyframes.remove(0);\n      }\n      this.keyframes.unshift(unshiftTime);\n      this.set(0, item);\n      this.set(unshiftTime + THRESHOLD, firstFrame);\n    } else {\n      this.prepend(new SceneItem(item));\n    }\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize items' keyframes.\n\t* @method Scene.SceneItem#setSelector\n\t* @param {string} selectors - Selectors to find elements in items.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setSelector(\"#id.class\");\n\t*/\n  public setSelector(selector: boolean | string) {\n    this.options.selector = selector === true ? this.state.id :\n      (selector || `[data-scene-id=\"${this.state.id}\"]`);\n    this.setElement(document.querySelectorAll(this.options.selector));\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize item's keyframes.\n\t* @method Scene.SceneItem#setElement\n\t* @param {Element|Array|string} elements - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n\t*/\n  public setElement(elements: HTMLElement | ElementsType) {\n    if (!elements) {\n      return this;\n    }\n    this.elements = (elements instanceof Element) ? [elements] : elements;\n    this.setId(this.getId());\n    return this;\n  }\n  /**\n\t* add css styles of items's element to the frame at that time.\n\t* @method Scene.SceneItem#setCSS\n\t* @param {Array} properties - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public setCSS(time: number, properties: string[]) {\n    this.set(time, fromCSS(this.elements, properties));\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t* update property names used in frames.\n\t* @method Scene.SceneItem#update\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.update();\n\t*/\n  public update() {\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* update property names used in frame.\n\t* @method Scene.SceneItem#updateFrame\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.updateFrame(time, this.get(time));\n\t*/\n  public updateFrame(frame: Frame) {\n    this.keyframes.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Create and add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#newFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} Created frame.\n\t* @example\nitem.newFrame(time);\n\t*/\n  public newFrame(time: string | number) {\n    let frame = this.getFrame(time);\n\n    if (frame) {\n      return frame;\n    }\n    frame = new Frame();\n    this.setFrame(time, frame);\n    return frame;\n  }\n  /**\n\t* Add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#setFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setFrame(time, frame);\n\t*/\n  public setFrame(time: string | number, frame: Frame) {\n    this.keyframes.add(this.getUnitTime(time), frame);\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* get sceneItem's frame at that time\n\t* @method Scene.SceneItem#getFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} sceneItem's frame at that time\n\t* @example\nconst frame = item.getFrame(time);\n\t*/\n  public getFrame(time: number | string) {\n    return this.keyframes.get(this.getUnitTime(time));\n  }\n  /**\n\t* check if the item has a frame at that time\n\t* @method Scene.SceneItem#hasFrame\n\t* @param {Number} time - frame's time\n\t* @return {Boolean} true: the item has a frame // false: not\n\t* @example\nif (item.hasFrame(10)) {\n\t// has\n} else {\n\t// not\n}\n\t*/\n  public hasFrame(time: number | string) {\n    return this.keyframes.has(this.getUnitTime(time));\n  }\n  /**\n\t* remove sceneItem's frame at that time\n\t* @method Scene.SceneItem#removeFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.removeFrame(time);\n\t*/\n  public removeFrame(time: number) {\n    const keyframes = this.keyframes;\n\n    keyframes.remove(time);\n    keyframes.update();\n\n    return this;\n  }\n  /**\n\t* Copy frame of the previous time at the next time.\n\t* @method Scene.SceneItem#copyFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(0) equal getFrame(1)\nitem.copyFrame(0, 1);\n\t*/\n  public copyFrame(fromTime: ObjectInterface<number> | number | string, toTime: number) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.copyFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const copyFrame = frame.clone();\n\n    this.setFrame(toTime, copyFrame);\n    return this;\n  }\n  /**\n\t* merge frame of the previous time at the next time.\n\t* @method Scene.SceneItem#mergeFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number|string} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(1) contains getFrame(0)\nitem.merge(0, 1);\n\t*/\n  public mergeFrame(fromTime: ObjectInterface<number> | number | string, toTime: number | string) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.mergeFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const toFrame = this.newFrame(toTime);\n\n    toFrame.merge(frame);\n    return this;\n  }\n  /**\n\t* Get frame of the current time\n\t* @method Scene.SceneItem#getNowFrame\n\t* @param {Number} time - the current time\n\t* @param {function} easing - the speed curve of an animation\n\t* @return {Scene.Frame} frame of the current time\n\t* @example\nlet item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n// opacity: 0.7; display:\"block\";\nconst frame = item.getNowFrame(1.7);\n\t*/\n  public getNowFrame(time: number, easing?: EasingType) {\n    const frame = new Frame();\n    const names = this.keyframes.getNames();\n    const { left, right } = this._getNearTimeIndex(time);\n    const realEasing = this._getEasing(time, left, right, this.getEasing() || easing);\n\n    names.forEach(properties => {\n      const value = this._getNowValue(time, left, right, properties, realEasing);\n\n      if (isUndefined(value)) {\n        return;\n      }\n      frame.set(properties, value);\n    });\n    return frame;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (isArray(properties)) {\n      const length = properties.length;\n\n      for (let i = 0; i < length; ++i) {\n        const time = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n        this.set(time, properties[i]);\n      }\n    } else if (properties.keyframes) {\n      this.set(properties.keyframes);\n    } else {\n      for (const time in properties) {\n        if (time === \"options\" || time === \"keyframes\") {\n          continue;\n        }\n        const value = properties[time];\n        const realTime = this.getUnitTime(time);\n\n        if (typeof value === \"number\") {\n          this.mergeFrame(value, realTime);\n          continue;\n        }\n        this.set(realTime, value);\n      }\n    }\n    options && this.setOptions(options);\n    return this;\n  }\n  /**\n\t * clone SceneItem.\n\t * @method Scene.SceneItem#clone\n\t * @param {AnimatorOptions} [options] animator options\n\t * @return {Scene.SceneItem} An instance of clone\n\t * @example\n\t * item.clone();\n\t */\n  public clone(options = {}) {\n    const item = new SceneItem();\n\n    item.setOptions(this.state);\n    item.setOptions(options);\n    this.keyframes.forEach((frame: Frame, time: number) => item.setFrame(time, frame.clone()));\n    return item;\n  }\n  public setOptions(options: StateInterface = {}) {\n    super.setOptions(options);\n    const { id, selector, duration, elements } = options;\n\n    duration && this.setDuration(duration);\n    id && this.setId(id);\n    if (elements) {\n      this.setElement(elements);\n    } else if (selector) {\n      this.setSelector(selector === true ? this.state.id : selector);\n    }\n    return this;\n  }\n  public getAllTimes(isStartZero = true, options: StateInterface = {}) {\n    const times = this.keyframes.times.slice();\n    let length = times.length;\n    const keys: number[] = [];\n    const values: ObjectInterface<number> = {};\n\n    if (!length) {\n      return { keys: [], values: {}, frames: {} };\n    }\n    const frames: ObjectInterface<Frame> = {};\n    const duration = this.getDuration();\n    const direction = options[DIRECTION] || this.state[DIRECTION];\n    const isShuffle = direction === ALTERNATE || direction === ALTERNATE_REVERSE;\n    (!this.getFrame(0)) && times.unshift(0);\n    (!this.getFrame(duration)) && times.push(duration);\n    length = times.length;\n    let iterationCount = options[ITERATION_COUNT] || this.state[ITERATION_COUNT];\n\n    iterationCount = iterationCount !== INFINITE ? iterationCount : 1;\n    const totalDuration = iterationCount * duration;\n\n    for (let i = 0; i < iterationCount; ++i) {\n      const isReverse = isDirectionReverse(i, iterationCount, direction);\n      const start = i * duration;\n\n      for (let j = 0; j < length; ++j) {\n        if (isShuffle && i !== 0 && j === 0) {\n          // pass duplicate\n          continue;\n        }\n        // isStartZero is keytimes[0] is 0 (i === 0 & j === 0)\n        const threshold = j === 0 && (i === 0 ? !isStartZero : !isShuffle) ? THRESHOLD : 0;\n        const keyvalue = toFixed(isReverse ? times[length - 1 - j] : times[j]);\n        const time = toFixed(isReverse ? duration - keyvalue : keyvalue);\n        const keytime = toFixed(start + time + threshold);\n\n        if (totalDuration < keytime) {\n          break;\n        }\n        keys.push(keytime);\n        values[keytime] = keyvalue;\n\n        if (!frames[keyvalue]) {\n          const frame = this.getFrame(keyvalue);\n\n          if (!frame || j === 0 || j === length - 1 || frame.has(\"transform\") || frame.has(\"filter\")) {\n            frames[keyvalue] = this.getNowFrame(keyvalue);\n          } else {\n            frames[keyvalue] = frame;\n          }\n        }\n      }\n    }\n    if (keys[keys.length - 1] < totalDuration) {\n      // last time === totalDuration\n      const isReverse = isDirectionReverse(iterationCount, iterationCount, direction);\n      const keyvalue = toFixed(duration * (isReverse ? 1 - iterationCount % 1 : iterationCount % 1));\n\n      keys.push(totalDuration);\n      values[totalDuration] = keyvalue;\n      !frames[keyvalue] && (frames[keyvalue] = this.getNowFrame(keyvalue));\n    }\n    return { keys, values, frames };\n  }\n  /**\n\t* Specifies an css text that coverted the keyframes of the item.\n\t* @param {Array} [duration=this.getDuration()] - elements to synchronize item's keyframes.\n\t* @param {Array} [options={}] - parent options to unify options of items.\n\t* @example\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public toCSS(parentDuration = this.getDuration(), options: StateInterface = {}) {\n    const state = this.state;\n    const selector = state.selector || this.options.selector;\n\n    if (!selector) {\n      return \"\";\n    }\n    const id = this._getId();\n    // infinity or zero\n    const isParent = !isUndefined(options[ITERATION_COUNT]);\n    const isZeroDuration = parentDuration === 0;\n    const duration = isZeroDuration ? this.getDuration() : parentDuration;\n    const playSpeed = (options[PLAY_SPEED] || 1);\n    const delay = ((options[DELAY] || 0) + (isZeroDuration ? state[DELAY] : 0)) / playSpeed;\n    const easingName = (state[EASING] && state[EASING_NAME]) ||\n      (isParent && options[EASING] && options[EASING_NAME]) || state[EASING_NAME];\n    const iterationCount = (!isZeroDuration && options[ITERATION_COUNT]) || state[ITERATION_COUNT];\n    const fillMode = (options[FILL_MODE] !== \"forwards\" && options[FILL_MODE]) || state[FILL_MODE];\n    const direction = options[DIRECTION] || state[DIRECTION];\n    const cssText = makeAnimationProperties({\n      fillMode,\n      direction,\n      iterationCount,\n      delay: `${delay}s`,\n      name: `${PREFIX}KEYFRAMES_${toId(id)}`,\n      duration: `${duration / playSpeed}s`,\n      timingFunction: easingName,\n    });\n\n    const css = `${selector}.${START_ANIMATION} {\n\t\t\t${cssText}\n\t\t}${selector}.${PAUSE_ANIMATION} {\n      ${ANIMATION}-play-state: paused;\n    }\n\t\t${this._toKeyframes(duration, !isZeroDuration && isParent)}`;\n\n    return css;\n  }\n  public exportCSS(duration = this.getDuration(), options: StateInterface = {}) {\n    if (!this.elements.length) {\n      return;\n    }\n    const id = this._getId();\n    const styleElement: HTMLElement = document.querySelector(`#${PREFIX}${id}`);\n    const css = this.toCSS(duration, options);\n\n    if (styleElement) {\n      styleElement.innerText = css;\n    } else {\n      document.body.insertAdjacentHTML(\"beforeend\",\n        `<style id=\"${PREFIX}STYLE_${toId(id)}\">${css}</style>`);\n    }\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      addClass(elements[i], PAUSE_ANIMATION);\n    }\n  }\n  public endCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      const element = elements[i];\n\n      removeClass(element, PAUSE_ANIMATION);\n      removeClass(element, START_ANIMATION);\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nitem.playCSS();\nitem.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(exportCSS = true, properties = {}) {\n    playCSS(this, exportCSS, properties);\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const elements = this.elements;\n    const length = elements.length;\n    const cssText = makeAnimationProperties(properties);\n\n    if (!length) {\n      return;\n    }\n    if (isPaused) {\n      for (let i = 0; i < length; ++i) {\n        removeClass(elements[i], PAUSE_ANIMATION);\n      }\n    } else {\n      for (let i = 0; i < length; ++i) {\n        const element = elements[i];\n\n        element.style.cssText += cssText;\n        if (hasClass(element, START_ANIMATION)) {\n          removeClass(element, START_ANIMATION);\n          (el => {\n            requestAnimationFrame(() => {\n              requestAnimationFrame(() => {\n                addClass(el, START_ANIMATION);\n              });\n            });\n          })(element);\n        } else {\n          addClass(element, START_ANIMATION);\n        }\n      }\n    }\n    return elements[0];\n  }\n  private _getId() {\n    return this.state.id || this.setId().getId();\n  }\n  private _getEasing(time: number, left: number, right: number, easing: EasingType) {\n    if (this.keyframes.hasName(TIMING_FUNCTION)) {\n      const nowEasing = this._getNowValue(time, left, right, [TIMING_FUNCTION], 0, true);\n\n      return typeof nowEasing === \"function\" ? nowEasing : easing;\n    }\n    return easing;\n  }\n  private _toKeyframes(duration = this.getDuration(), isParent: boolean) {\n    const id = this._getId();\n    const state = this.state;\n    const playSpeed = state[PLAY_SPEED];\n    const iterationCount = state[ITERATION_COUNT];\n    const fillMode = state[FILL_MODE];\n    const delay = isParent ? state[DELAY] : 0;\n    const direction = isParent ? state[DIRECTION] : NORMAL;\n    const isReverse = direction === REVERSE || direction === ALTERNATE_REVERSE;\n    const { keys, values, frames } = this.getAllTimes(true, {\n      duration,\n      delay,\n      direction,\n      iterationCount: isParent && iterationCount !== INFINITE ? iterationCount : 1,\n      isCSS: true,\n    });\n    const length = keys.length;\n    const css: ObjectInterface<string> = {};\n    const keyframes: string[] = [];\n\n    if (!keys.length) {\n      return \"\";\n    }\n    for (const time in frames) {\n      css[time] = frames[time].toCSS();\n    }\n    const lastTime = keys[length - 1];\n    const lastCSS = css[values[lastTime]];\n\n    if (delay) {\n      const delayCSS = isReverse && (fillMode === \"both\" || fillMode === \"backwards\") ? lastCSS : css[0];\n      keyframes.push(`0%{${delayCSS}}`);\n      isReverse && keyframes.push(`${delay / playSpeed / duration * 100 - THRESHOLD}%{${delayCSS}}`);\n    }\n    keys.forEach(time => {\n      keyframes.push(`${(delay + time) / playSpeed / duration * 100}%{${css[values[time]]}}`);\n    });\n    // if (afterDelay) {\n    //   keyframes.push(`${lastTime / playSpeed / duration * 100 + THRESHOLD}%{${lastCSS}}`);\n    //   keyframes.push(`100%{${lastCSS}`);\n    // } else {\n    if ((delay + lastTime) / playSpeed < duration) {\n      // not 100%\n      keyframes.push(`100%{${lastCSS}`);\n    }\n    // }\n    return `@${KEYFRAMES} ${PREFIX}KEYFRAMES_${toId(id)}{\n\t\t\t${keyframes.join(\"\\n\")}\n\t\t}`;\n  }\n  private _getNowValue(\n    time: number,\n    left: number,\n    right: number,\n    properties: string[],\n    easing: EasingType = this.getEasing(),\n    usePrevValue: boolean = isFixed(properties),\n  ) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    let prevTime;\n    let nextTime;\n    let prevFrame;\n    let nextFrame;\n\n    for (let i = left; i >= 0; --i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        prevTime = times[i];\n        prevFrame = frame;\n        break;\n      }\n    }\n    const prevValue = prevFrame && prevFrame.raw(...properties);\n\n    if (usePrevValue) {\n      return prevValue;\n    }\n    for (let i = right; i < length; ++i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        nextTime = times[i];\n        nextFrame = frame;\n        break;\n      }\n    }\n    const nextValue = nextFrame && nextFrame.raw(...properties);\n\n    if (!prevFrame || isUndefined(prevValue)) {\n      return nextValue;\n    }\n    if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n      return prevValue;\n    }\n    if (prevTime < 0) {\n      prevTime = 0;\n    }\n    return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n  }\n  private _getNearTimeIndex(time: number) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (times[i] === time) {\n        return { left: i, right: i };\n      } else if (times[i] > time) {\n        return { left: i === 0 ? 0 : i - 1, right: i };\n      }\n    }\n    return { left: length - 1, right: length - 1 };\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const easing = this.getEasing() || parentEasing;\n    const frame = this.getNowFrame(iterationTime, easing);\n    const currentTime = this.getTime();\n\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @event Scene.SceneItem#animate\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Scene.Frame} param.frame frame of that time.\n\t\t */\n    this.trigger(\"animate\", {\n      frame,\n      currentTime,\n      time: iterationTime,\n    });\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return frame;\n    }\n    const attributes = frame.get(\"attribute\");\n\n    if (attributes) {\n      for (const name in (attributes as any)) {\n        for (let i = 0; i < length; ++i) {\n          elements[i].setAttribute(name, attributes[name]);\n        }\n      }\n    }\n    const cssText = frame.toCSS();\n\n    if (this.state.cssText !== cssText) {\n      this.state.cssText = cssText;\n\n      for (let i = 0; i < length; ++i) {\n        elements[i].style.cssText += cssText;\n      }\n      return frame;\n    }\n  }\n}\n\nexport default SceneItem;\n","import Animator, { StateInterface, EasingType } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface, ANIMATE } from \"./consts\";\nimport Frame from \"./Frame\";\nimport { playCSS } from \"./utils\";\n\n/**\n* manage sceneItems and play Scene.\n* @extends Scene.Animator\n*/\nclass Scene extends Animator {\n\n  public items: ObjectInterface<Scene | SceneItem>;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst scene = new Scene({\n\t\titem1: {\n\t\t\t0: {\n\t\t\t\tdisplay: \"none\",\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tdisplay: \"block\",\n\t\t\t\topacity: 0,\n\t\t\t},\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t},\n\t\titem2: {\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.items = {};\n    this.load(properties, options);\n  }\n  public setId(id: string = `scene${Math.floor(Math.random() * 100000)}`) {\n    this.state.id = id;\n    return this;\n  }\n  public getId() {\n    return this.state.id;\n  }\n  public getDuration() {\n    const items = this.items;\n    let time = 0;\n\n    for (const id in items) {\n      const item = items[id];\n\n      time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n    }\n    return time;\n  }\n  public setDuration(duration: number) {\n    const items = this.items;\n    const sceneDuration = this.getDuration();\n\n    if (duration === 0 || !isFinite(sceneDuration)) {\n      return this;\n    }\n    if (sceneDuration === 0) {\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDuration(duration);\n      }\n    } else {\n      const ratio = duration / sceneDuration;\n\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDelay(item.getDelay() * ratio);\n        item.setDuration(item.getDuration() * ratio);\n      }\n    }\n    return this;\n  }\n  /**\n\t* get item in scene by name\n\t* @method Scene#getItem\n\t* @param {string} name - item's name\n\t* @return {Scene.SceneItem} item\n\t* @example\nconst item = scene.getItem(\"item1\")\n\t*/\n  public getItem(name: string) {\n    return this.items[name];\n  }\n  /**\n\t* create item in scene\n\t* @method Scene#newItem\n\t* @param {String} name - name of item to create\n\t* @param {StateOptions} options - The option object of SceneItem\n\t* @return {Sceme.SceneItem} Newly created item\n\t* @example\nconst item = scene.newItem(\"item1\")\n\t*/\n  public newItem(name: string, options = {}) {\n    if (name in this.items) {\n      return this.items[name];\n    }\n    const item = new SceneItem();\n\n    this.setItem(name, item);\n    item.setOptions(options);\n\n    return item;\n  }\n  /**\n\t* add a sceneItem to the scene\n\t* @param {String} name - name of item to create\n\t* @param {Scene.SceneItem} item - sceneItem\n\t* @example\nconst item = scene.newItem(\"item1\")\n\t*/\n  public setItem(name: string, item?: Scene | SceneItem) {\n    if (item instanceof Animator) {\n      item.setId(name);\n    }\n    this.items[name] = item;\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} func Function to execute for each element, taking three arguments\n\t * @param {Scene | Scene.SceneItem} [func.item] The value of the item being processed in the scene.\n\t * @param {string} [func.name] The name of the item being processed in the scene.\n\t * @param {object} [func.items] The object that forEach() is being applied to.\n\t * @return {Scene} An instance itself\n\t */\n  public forEach(func: (item?: Scene | SceneItem, name?: string, items?: ObjectInterface<Scene | SceneItem>) => void) {\n    const items = this.items;\n\n    for (const name in items) {\n      func(items[name], name, items);\n    }\n    return this;\n  }\n  /**\n\t * Export the CSS of the items to the style.\n\t * @return {Scene} An instance itself\n\t */\n  public exportCSS(duration: number = this.getDuration(), state?: StateInterface) {\n    const items = this.items;\n    let totalDuration = state ? this.getDuration() : duration;\n\n    if (!totalDuration || !isFinite(totalDuration)) {\n      totalDuration = 0;\n    }\n    for (const id in items) {\n      const item = items[id];\n\n      item.exportCSS(totalDuration, this.state);\n    }\n    return this;\n  }\n  public append(item: SceneItem | Scene) {\n    item.setDelay(item.getDelay() + this.getDuration());\n    this.setItem(item.getId() || item.setId().getId(), item);\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].pauseCSS();\n    }\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public endCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].endCSS();\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const items = this.items;\n    let animtionElement: HTMLElement;\n\n    for (const id in items) {\n      const el = items[id].addPlayClass(isPaused, properties);\n\n      !animtionElement && (animtionElement = el);\n    }\n    return animtionElement;\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @return {Scene} An instance itself\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nscene.playCSS();\nscene.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(exportCSS = true, properties = {}) {\n    playCSS(this, exportCSS, properties);\n    return this;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (!properties) {\n      return this;\n    }\n    const isSelector = options && options.selector;\n\n    for (const name in properties) {\n      if (name === \"options\") {\n        continue;\n      }\n      const object = properties[name];\n      let item;\n\n      if (object instanceof Scene || object instanceof SceneItem) {\n        this.setItem(name, object);\n        item = object;\n      } else {\n        item = this.newItem(name);\n        item.load(object);\n      }\n      isSelector && item.setSelector(name);\n    }\n    this.setOptions(options);\n  }\n  public setSelector(_: string | boolean) {\n    const isSelector = this.options.selector;\n\n    this.forEach((item, name) => {\n      item.setSelector(isSelector ? name : false);\n    });\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const items = this.items;\n    const easing = this.getEasing() || parentEasing;\n    const frames: ObjectInterface<ObjectInterface<any> | Frame> = {};\n\n    for (const id in items) {\n      const item = items[id];\n\n      frames[id] = item.animate(Math.max(iterationTime * item.getPlaySpeed() - item.getDelay(), 0), easing);\n    }\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Frame} param.frames frame of that time.\n\t\t */\n    this.trigger(ANIMATE, {\n      currentTime: this.getTime(),\n      time: iterationTime,\n      frames,\n    });\n    return frames;\n  }\n}\n\nexport default Scene;\n","\nimport { StateInterface } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface } from \"./consts\";\n\n/**\n * @namespace presets\n */\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func set\n * @param {string | string[]} property - property to set effect\n * @param {any[]} values - values of 100%\n * @param {AnimatorOptions} [options]\n * @example\n// import {set, blink} from \"scenejs\";\n// set(\"opacity\", [0, 1, 0], {duration: 2});\nScene.set(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\nScene.blink({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function set(property: string | string[], values: any[], options: StateInterface) {\n  const item = new SceneItem({}, options);\n  const length = values.length;\n\n  for (let i = 0; i < length; ++i) {\n    item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n  }\n  return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof presets\n * @func zoomIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {set, zoomIn} from \"scenejs\";\n// zoomIn({duration: 2});\nScene.zoomIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof presets\n * @func zoomOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {zoomOut} from \"scenejs\";\n// zoomOut({duration: 2});\nScene.zoomOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof presets\n * @func wipeIn\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeIn} from \"scenejs\";\n// wipeIn({property: \"left\", duration: 2});\nScene.wipeIn({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof presets\n * @func wipeOut\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeOut} from \"scenejs\";\n// wipeOut({property: \"left\", duration: 2});\nScene.wipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func transition\n * @param {Scene.SceneItem} item1 - Item that end effect\n * @param {Scene.SceneItem} item2 - Item that start effect\n * @param {AnimatorOptions} options\n * @param {object} options.from The starting properties of item1 and end properties of item2\n * @param {object} options.to The starting properties of item2 and end properties of item1\n * @param {number} options.duration animation's duration\n * @param {number} [options.time] start time of item1 <br/> <strong>default: item1.getDuration() - duration</strong>\n * @example\n// import {transition} from \"scenejs\";\ntransition(item1, item2, {\n\tfrom: {\n\t\topacity: 1,\n\t},\n\tto: {\n\t\topacity: 0,\n\t},\n\tduration: 0.1,\n});\n\n// Same\nitem1.set({\n\t[item1.getDuration() - 0.1]: {\n\t\topacity: 1,\n\t},\n\t[item1.getDuration()]: {\n\t\topacity: 0,\n\t}\n});\nitem2.set({\n\t0: {\n\t\topacity: 0,\n\t},\n\t0.1: {\n\t\topacity: 1,\n\t}\n});\n */\nexport function transition(item1: SceneItem, item2: SceneItem, {\n  from,\n  to,\n  duration = item1.getDuration(),\n  time = Math.max(item1.getDuration() - duration, 0),\n}: { from: ObjectInterface<any>, to: ObjectInterface<any>, duration?: number, time: number }) {\n  item1.set({\n    [time]: from,\n    [time + duration]: to,\n  });\n  item2.set({\n    0: to,\n    [duration]: from,\n  });\n}\n\n/**\n * Make a fade in effect.\n * @memberof presets\n * @func fadeIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeIn} from \"scenejs\";\n// fadeIn({duration: 2});\nScene.fadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof presets\n * @func fadeOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeOut} from \"scenejs\";\n// fadeOut({duration: 2});\nScene.fadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof presets\n * @func blink\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {blink} from \"scenejs\";\n// blink({duration: 2});\nScene.blink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to, from], arguments[0]);\n}\n","import Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport Frame from \"./Frame\";\nimport Keyframes from \"./Keyframes\";\nimport PropertyObject from \"./PropertyObject\";\nimport Animator from \"./Animator\";\nimport * as _presets from \"./presets\";\n\n/**\n* version info\n* @name Scene.VERSION\n* @memberof Scene\n* @static\n* @type {string}\n* @example\n* Scene.VERSION // #__VERSION__#\n*/\nexport const VERSION: string = \"#__VERSION__#\";\nexport { SceneItem, Frame, Animator, Keyframes, PropertyObject };\nexport { bezier, EASE_IN_OUT, EASE_IN, EASE_OUT, EASE, LINEAR, steps, STEP_START, STEP_END } from \"./easing\";\nexport { set, transition, wipeIn, wipeOut, fadeIn, fadeOut, blink, zoomIn, zoomOut} from \"./presets\";\nexport { OPTIONS, EVENTS } from \"./consts\";\nexport { setRole, setAlias } from \"./utils\";\nexport { Scene as default };\n","import Scene, * as others from \"./index\";\n\nfor (const name in others) {\n  (Scene as any)[name] = (others as any)[name];\n}\n\nexport default Scene;\n"],"names":["PREFIX","TIMING_FUNCTION","ROLES","transform","filter","attribute","ALIAS","easing","FIXED","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","ITERATION_TIME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","ITERATION","RGBA","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","FUNCTION","PROPERTY","OPTIONS","EVENTS","prefixes","checkProperties","property","styles","document","body","documentElement","style","length","i","name","TRANSFORM","FILTER","ANIMATION","KEYFRAMES","replace","value","options","prefix","suffix","model","type","separator","setOptions","init","Object","assign","index","arr","map","v","PropertyObject","clone","join","toValue","func","forEach","split","setAlias","alias","setRole","names","isProperty","isFixedProperty","roles","fixed","getType","isArray","toFixed","num","Math","round","isInProperties","args","isCheckTrue","role","isRole","isFixed","isUndefined","isObject","Array","isString","splitUnit","text","matches","exec","unit","NaN","parseFloat","decamelize","str","all","letter","letter2","toLowerCase","isPausedCSS","item","state","playCSS","getPlayState","exportCSS","properties","addPlayClass","isEnded","setTime","el","addAnimationEvent","setState","setPlayState","trigger","duration","getDuration","isZeroDuration","isFinite","animationend","finish","on","removeEventListener","animationiteration","_a","elapsedTime","currentTime","iterationCount","setCurrentIterationCount","addEventListener","events","callback","_this","event","push","callbacks","indexOf","splice","_i","data","target","currentTarget","apply","cubic","y1","y2","t","t2","solveFromX","x1","x2","x","solveX","dx","abs","bezier","max","min","easingName","steps","count","position","time","level","floor","STEP_START","STEP_END","LINEAR","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","lastTime","camelize","toUpperCase","GetterSetter","getter","setter","parent","constructor","prototype","requestAnimFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","currTime","Date","now","timeToCall","id","setTimeout","isDirectionReverse","currentIterationCount","iteraiontCount","direction","setters","getters","tslib_1","_super","delay","fillMode","playSpeed","iterationTime","tickTime","prevTime","playState","curveArray","setEasing","setDuration","Infinity","getActiveDuration","getTime","animator","play","setTickTime","tick","end","pause","isTick","activeDuration","getUnitTime","calculateIterationTime","isDelay","getIterationTime","getIterationCount","object","passIterationCount","currentIterationTime","setIterationTime","isReverse","isForwards","Animator","EventTrigger","COLOR_MODELS","cutHex","hex","charAt","substring","hexToRGB","h","r","parseInt","g","b","a","isNaN","hex3to6","hslToRGB","hsl","s","l","c","m","rgb","result","splitSpace","match","splitComma","trim","splitStyle","obj","toPropertyObject","arrayToColorObject","toColorObject","colorObject","stringToColorObject","colorArray","colorModel","getOption","stringToBracketObject","values","arrayToPropertyObject","Error","toObject","size","get","toInnerProperties","arrObj","isPropertyObject","merge","to","from","getValue","slice","set","raw","params","undefined","_set","Frame","frame","frameProperties","cssObject","toCSSObject","cssArray","getNames","stack","concat","pop","updateFrame","times","items","originalDuration","ratio","time2","addTime","removeTime","pushIndex","dotArray","a1","a2","b1","b2","v1","dot","dotColor","color1","color2","value1","value2","model1","model2","dotObject","a1Type","type1","type2","isFunction1","isFunction2","r1","r2","v2","dotValue","nextTime","prevValue","nextValue","hasClass","element","className","classList","contains","RegExp","addClass","add","removeClass","remove","reg","fromCSS","elements","Element","getComputedStyle","toId","makeId","selector","random","checkElement","querySelector","makeAnimationProperties","keyframes","Keyframes","load","sceneId","getId","setAttribute","SceneItem","getDelay","realTime_1","keys","values_1","frames_1","getEasingName","getEasing","newFrame","getFrame","update","unshiftTime","firstFrame","unshift","prepend","setElement","querySelectorAll","setId","parentEasing","_animate","isNumber","setFrame","has","fromTime","toTime","copyFrame","mergeFrame","toFrame","left","right","realEasing","_getEasing","_getNowValue","realTime","setSelector","isStartZero","frames","isShuffle","totalDuration","start","j","threshold","keyvalue","keytime","getNowFrame","parentDuration","_getId","isParent","cssText","timingFunction","css","_toKeyframes","styleElement","toCSS","innerText","insertAdjacentHTML","pauseCSS","isPaused","endCSS","hasName","nowEasing","lastCSS","delayCSS","usePrevValue","prevFrame","nextFrame","attributes","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","setItem","animtionElement","isSelector","Scene","newItem","_","animate","zoomIn","_b","_c","arguments","zoomOut","wipeIn","_d","wipeOut","transition","item1","item2","_e","fadeIn","fadeOut","blink","VERSION","others"],"mappings":"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"}