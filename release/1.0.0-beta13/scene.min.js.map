{"version":3,"file":"scene.min.js","sources":["../src/consts.ts","../node_modules/@daybrush/utils/dist/utils.esm.js","../node_modules/fjx/dist/fjx.esm.js","../src/EventTrigger.ts","../src/easing.ts","../src/PropertyObject.ts","../src/utils.ts","../src/Animator.ts","../src/utils/property.ts","../src/Frame.ts","../src/Keyframes.ts","../src/utils/dot.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts","../src/index.umd.ts"],"sourcesContent":["import { ObjectInterface } from \"@daybrush/utils\";\nimport { RoleInterface, OptionType, EventType } from \"./types\";\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleInterface = { transform: {}, filter: {}, attribute: {} };\nexport const ALIAS: ObjectInterface<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { \"animation-timing-function\": true, \"contents\": true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {$ts:OptionType}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {$ts:EventType}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n","/*\nCopyright (c) 2018 Daybrush\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.4.0\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (typeof document === UNDEFINED) {\n    return \"\";\n  }\n\n  var styles = (document.body || document.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {string} hex - hex color\n* @return {string} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {Array} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {String} hex - 3(or 4)-digit hex color\n* @return {String} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {Array} hsl(a) - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {Array} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {String} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {Array} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * @namespace DOM\n */\n\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param {HTMLElement} element - target\n* @param {string} className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param {HTMLElement} element - target\n* @param {string} className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param {HTMLElement} element - target\n* @param {string} className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param {HTMLElement | HTMLElement[]} elements - elements\n* @param {string[]} properites - the CSS properties\n* @return {object} returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, now, requestAnimationFrame, hasClass, addClass, removeClass, fromCSS };\n//# sourceMappingURL=utils.esm.js.map\n","/*\nCopyright (c) 2018 Daybrush\n@name: fjx\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/fjx.git\n@version 0.0.1-rc2\n*/\nimport { isFunction } from '@daybrush/utils';\n\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nfunction __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\n\n/**\n * @namespace Consts\n */\n\n/**\n* @memberof Consts\n*/\nvar IS_SYMBOL = typeof Symbol !== \"undefined\";\n/**\n* @memberof Consts\n*/\n\nvar IS_PROMISE = typeof Promise !== \"undefined\";\n\n/**\n * @namespace Functions\n */\n\n/**\n * @memberof Functions\n */\n\nfunction reduceArrayF(callbackFn, initial, iterator) {\n  return iterator.reduce(callbackFn, initial);\n}\n/**\n * @memberof Functions\n */\n\nfunction reduceObjectF(callbackFn, initial, iterator) {\n  var cur = initial;\n\n  for (var key in iterator) {\n    cur = callbackFn(cur, iterator[key], key, iterator);\n  }\n\n  return cur;\n}\n/**\n * @memberof Functions\n */\n\nfunction reduceIteratorF(callbackFn, initial, iterator) {\n  var e_1, _a;\n\n  var cur = initial;\n\n  try {\n    for (var iterator_1 = __values(iterator), iterator_1_1 = iterator_1.next(); !iterator_1_1.done; iterator_1_1 = iterator_1.next()) {\n      var value = iterator_1_1.value;\n      cur = callbackFn(cur, value, iterator);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (iterator_1_1 && !iterator_1_1.done && (_a = iterator_1.return)) _a.call(iterator_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return cur;\n} // each\n\n/**\n * @memberof Functions\n * @returns {} The calling array itself\n */\n\nfunction eachArrayF(f, iterator) {\n  iterator.forEach(f);\n  return iterator;\n}\n/**\n * @memberof Functions\n * @returns {} The calling object itself\n */\n\nfunction eachObjectF(f, iterator) {\n  for (var key in iterator) {\n    f(iterator[key], key, iterator);\n  }\n\n  return iterator;\n}\n/**\n * @memberof Functions\n* @returns {} The calling iterator itself\n */\n\nfunction eachIteratorF(f, iterator) {\n  var e_2, _a;\n\n  try {\n    for (var iterator_2 = __values(iterator), iterator_2_1 = iterator_2.next(); !iterator_2_1.done; iterator_2_1 = iterator_2.next()) {\n      var value = iterator_2_1.value;\n      f(value, iterator);\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (iterator_2_1 && !iterator_2_1.done && (_a = iterator_2.return)) _a.call(iterator_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  return iterator;\n} // map\n\n/**\n * @memberof FunctionS\n */\n\nfunction mapArrayF(f, iterator) {\n  return iterator.map(f);\n}\n/**\n * @memberof Functions\n */\n\nfunction mapObjectF(f, iterator) {\n  var obj = {};\n\n  for (var key in iterator) {\n    obj[key] = f(iterator[key], key, iterator);\n  }\n\n  return obj;\n}\n/**\n * @memberof Functions\n */\n\nfunction mapIteratorF(f, iterator) {\n  var e_3, _a, iterator_3, iterator_3_1, value, e_3_1;\n\n  return __generator(this, function (_b) {\n    switch (_b.label) {\n      case 0:\n        _b.trys.push([0, 5, 6, 7]);\n\n        iterator_3 = __values(iterator), iterator_3_1 = iterator_3.next();\n        _b.label = 1;\n\n      case 1:\n        if (!!iterator_3_1.done) return [3\n        /*break*/\n        , 4];\n        value = iterator_3_1.value;\n        return [4\n        /*yield*/\n        , f(value, iterator)];\n\n      case 2:\n        _b.sent();\n\n        _b.label = 3;\n\n      case 3:\n        iterator_3_1 = iterator_3.next();\n        return [3\n        /*break*/\n        , 1];\n\n      case 4:\n        return [3\n        /*break*/\n        , 7];\n\n      case 5:\n        e_3_1 = _b.sent();\n        e_3 = {\n          error: e_3_1\n        };\n        return [3\n        /*break*/\n        , 7];\n\n      case 6:\n        try {\n          if (iterator_3_1 && !iterator_3_1.done && (_a = iterator_3.return)) _a.call(iterator_3);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n\n        return [7\n        /*endfinally*/\n        ];\n\n      case 7:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n} // filter\n\n/**\n * @memberof Functions\n */\n\nfunction filterArrayF(f, iterator) {\n  return iterator.filter(f);\n}\n/**\n * @memberof Functions\n */\n\nfunction filterObjectF(f, iterator) {\n  var obj = {};\n\n  for (var key in iterator) {\n    f(iterator[key], key, iterator) && (obj[key] = iterator[key]);\n  }\n\n  return obj;\n}\n/**\n * @memberof Functions\n */\n\nfunction filterIteratorF(f, iterator) {\n  var e_4, _a, iterator_4, iterator_4_1, value, _b, e_4_1;\n\n  return __generator(this, function (_c) {\n    switch (_c.label) {\n      case 0:\n        _c.trys.push([0, 6, 7, 8]);\n\n        iterator_4 = __values(iterator), iterator_4_1 = iterator_4.next();\n        _c.label = 1;\n\n      case 1:\n        if (!!iterator_4_1.done) return [3\n        /*break*/\n        , 5];\n        value = iterator_4_1.value;\n        _b = f(value, iterator);\n        if (!_b) return [3\n        /*break*/\n        , 3];\n        return [4\n        /*yield*/\n        , value];\n\n      case 2:\n        _b = _c.sent();\n        _c.label = 3;\n\n      case 3:\n        _c.label = 4;\n\n      case 4:\n        iterator_4_1 = iterator_4.next();\n        return [3\n        /*break*/\n        , 1];\n\n      case 5:\n        return [3\n        /*break*/\n        , 8];\n\n      case 6:\n        e_4_1 = _c.sent();\n        e_4 = {\n          error: e_4_1\n        };\n        return [3\n        /*break*/\n        , 8];\n\n      case 7:\n        try {\n          if (iterator_4_1 && !iterator_4_1.done && (_a = iterator_4.return)) _a.call(iterator_4);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n\n        return [7\n        /*endfinally*/\n        ];\n\n      case 8:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n/**\n * @memberof Functions\n */\n\nfunction headArray(iterator) {\n  return iterator[0];\n}\n/**\n * @memberof Functions\n */\n\nfunction tailArray(iterator) {\n  return iterator[iterator.length - 1];\n}\n/**\n * @memberof Functions\n */\n\nfunction head(iterator) {\n  var e_5, _a;\n\n  try {\n    for (var iterator_5 = __values(iterator), iterator_5_1 = iterator_5.next(); !iterator_5_1.done; iterator_5_1 = iterator_5.next()) {\n      var value = iterator_5_1.value;\n      return value;\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (iterator_5_1 && !iterator_5_1.done && (_a = iterator_5.return)) _a.call(iterator_5);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n}\n/**\n * @memberof Functions\n */\n\nfunction tail(iterator) {\n  return reduceIteratorF(function (prev) {\n    return prev;\n  }, void 0, iterator);\n}\n\n/**\n * @namespace utils\n */\n\n/**\n * @memberof utils\n */\n\nfunction isPromise(value) {\n  return IS_PROMISE && value instanceof Promise;\n}\n/**\n * @memberof utils\n */\n\nfunction isIterable(iter) {\n  return IS_SYMBOL && !!(iter && (iter[Symbol.iterator] || iter[Symbol.asyncIterator]));\n}\n/**\n * @memberof utils\n */\n\nfunction isIterator(iter) {\n  return iter && isFunction(iter.next);\n}\n/**\n * @memberof utils\n */\n\nfunction curry(f) {\n  var length = f.length;\n\n  if (length === 0) {\n    return f;\n  }\n\n  function nest(i, args) {\n    return function () {\n      var args2 = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args2[_i] = arguments[_i];\n      }\n\n      var length2 = i - args2.length;\n      return length2 <= 0 ? f.apply(void 0, __spread(args, args2)) : nest(length2, args.concat(args2));\n    };\n  }\n\n  return nest(length, []);\n}\nfunction _pipe(args) {\n  return function (a) {\n    return reduceArrayF(function (prev, cur) {\n      return cur(prev);\n    }, a, args);\n  };\n}\n/**\n * @memberof utils\n */\n\nfunction pipe() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return _pipe(args);\n}\n/**\n * @memberof utils\n */\n\nfunction compose() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return _pipe(args.reverse());\n}\n\n/**\n * @memberof AsyncFunctions\n */\n\nfunction exec(v, f) {\n  return isPromise(v) ? v.then(function (pv) {\n    return f(pv);\n  }) : f(v);\n} // async to await\n\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncArray(iterator) {\n  var _this = this;\n\n  return reduceArrayF(function (prev, cur) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , prev];\n\n          case 1:\n            _b = (_a = _c.sent()).push;\n            return [4\n            /*yield*/\n            , cur];\n\n          case 2:\n            _b.apply(_a, [_c.sent()]);\n\n            return [2\n            /*return*/\n            , prev];\n        }\n      });\n    });\n  }, [], iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncObject(iterator) {\n  var _this = this;\n\n  return reduceObjectF(function (prev, cur, key) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , prev];\n\n          case 1:\n            _a = _c.sent();\n            _b = key;\n            return [4\n            /*yield*/\n            , cur];\n\n          case 2:\n            _a[_b] = _c.sent();\n            return [2\n            /*return*/\n            , prev];\n        }\n      });\n    });\n  }, {}, iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction toArray(iterator) {\n  return Array.from(iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncIterator(iterator) {\n  return Promise.all(toArray(iterator)).then(function (list) {\n    return list[Symbol.iterator]();\n  });\n} // async reduce\n\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncReduceArrayF(callbackFn, initial, iterator) {\n  var _this = this;\n\n  return reduceArrayF(function (prev, cur, index) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var prev2, cur2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , prev];\n\n          case 1:\n            prev2 = _a.sent();\n            return [4\n            /*yield*/\n            , cur];\n\n          case 2:\n            cur2 = _a.sent();\n            return [2\n            /*return*/\n            , callbackFn(prev2, cur2, index, iterator)];\n        }\n      });\n    });\n  }, initial, iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncReduceObjectF(callbackFn, initial, iterator) {\n  var _this = this;\n\n  return reduceObjectF(function (prev, cur, key) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var prev2, cur2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , prev];\n\n          case 1:\n            prev2 = _a.sent();\n            return [4\n            /*yield*/\n            , cur];\n\n          case 2:\n            cur2 = _a.sent();\n            return [2\n            /*return*/\n            , callbackFn(prev2, cur2, key, iterator)];\n        }\n      });\n    });\n  }, initial, iterator);\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncReduceIteratorF(callbackFn, initial, iterator) {\n  var _this = this;\n\n  return reduceIteratorF(function (prev, cur) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var prev2, cur2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , prev];\n\n          case 1:\n            prev2 = _a.sent();\n            return [4\n            /*yield*/\n            , cur];\n\n          case 2:\n            cur2 = _a.sent();\n            return [2\n            /*return*/\n            , callbackFn(prev2, cur2, iterator)];\n        }\n      });\n    });\n  }, initial, iterator);\n} // async each\n\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncEachArrayF(f, iterator) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , asyncReduceArrayF(function (prev, cur, index) {\n        f(cur, index, iterator);\n        return cur;\n      }, void 0, iterator).then(function () {\n        return iterator;\n      })];\n    });\n  });\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncEachObjectF(f, iterator) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , asyncReduceObjectF(function (prev, cur, key) {\n        f(cur, key, iterator);\n        return cur;\n      }, void 0, iterator).then(function () {\n        return iterator;\n      })];\n    });\n  });\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncEachIteratorF(f, iterator) {\n  return __awaiter(this, void 0, void 0, function () {\n    var e_1, _a, iterator_1, iterator_1_1, value, _b, e_1_1;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _c.trys.push([0, 5, 6, 7]);\n\n          iterator_1 = __values(iterator), iterator_1_1 = iterator_1.next();\n          _c.label = 1;\n\n        case 1:\n          if (!!iterator_1_1.done) return [3\n          /*break*/\n          , 4];\n          value = iterator_1_1.value;\n          _b = f;\n          return [4\n          /*yield*/\n          , value];\n\n        case 2:\n          _b.apply(void 0, [_c.sent(), iterator]);\n\n          _c.label = 3;\n\n        case 3:\n          iterator_1_1 = iterator_1.next();\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [3\n          /*break*/\n          , 7];\n\n        case 5:\n          e_1_1 = _c.sent();\n          e_1 = {\n            error: e_1_1\n          };\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          try {\n            if (iterator_1_1 && !iterator_1_1.done && (_a = iterator_1.return)) _a.call(iterator_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 7:\n          return [2\n          /*return*/\n          , iterator];\n      }\n    });\n  });\n} // async map\n\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncMapArrayF(f, iterator) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , asyncReduceArrayF(function (prev, cur, index) {\n        prev.push(f(cur, index, iterator));\n        return prev;\n      }, [], iterator)];\n    });\n  });\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncMapObjectF(f, iterator) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , asyncReduceObjectF(function (prev, cur, key) {\n        prev[key] = f(cur, key, iterator);\n        return prev;\n      }, {}, iterator)];\n    });\n  });\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncMapIteratorF(f, iterator) {\n  return __asyncGenerator(this, arguments, function asyncMapIteratorF_1() {\n    var e_2, _a, iterator_2, iterator_2_1, value, _b, e_2_1;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _c.trys.push([0, 7, 8, 9]);\n\n          iterator_2 = __values(iterator), iterator_2_1 = iterator_2.next();\n          _c.label = 1;\n\n        case 1:\n          if (!!iterator_2_1.done) return [3\n          /*break*/\n          , 6];\n          value = iterator_2_1.value;\n          _b = f;\n          return [4\n          /*yield*/\n          , __await(value)];\n\n        case 2:\n          return [4\n          /*yield*/\n          , __await.apply(void 0, [_b.apply(void 0, [_c.sent(), iterator])])];\n\n        case 3:\n          return [4\n          /*yield*/\n          , _c.sent()];\n\n        case 4:\n          _c.sent();\n\n          _c.label = 5;\n\n        case 5:\n          iterator_2_1 = iterator_2.next();\n          return [3\n          /*break*/\n          , 1];\n\n        case 6:\n          return [3\n          /*break*/\n          , 9];\n\n        case 7:\n          e_2_1 = _c.sent();\n          e_2 = {\n            error: e_2_1\n          };\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          try {\n            if (iterator_2_1 && !iterator_2_1.done && (_a = iterator_2.return)) _a.call(iterator_2);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 9:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n} // async filter\n\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncFilterArrayF(f, iterator) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , asyncReduceArrayF(function (prev, cur, index) {\n        f(cur, index, iterator) && prev.push(cur);\n        return prev;\n      }, [], iterator)];\n    });\n  });\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncFilterObjectF(f, iterator) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , asyncReduceObjectF(function (prev, cur, key) {\n        f(cur, key, iterator) && (prev[key] = cur);\n        return prev;\n      }, {}, iterator)];\n    });\n  });\n}\n/**\n * @memberof AsyncFunctions\n */\n\nfunction asyncFilterIteratorF(f, iterator) {\n  return __asyncGenerator(this, arguments, function asyncFilterIteratorF_1() {\n    var e_3, _a, iterator_3, iterator_3_1, value, _b, _c, e_3_1;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _d.trys.push([0, 8, 9, 10]);\n\n          iterator_3 = __values(iterator), iterator_3_1 = iterator_3.next();\n          _d.label = 1;\n\n        case 1:\n          if (!!iterator_3_1.done) return [3\n          /*break*/\n          , 7];\n          value = iterator_3_1.value;\n          _c = f;\n          return [4\n          /*yield*/\n          , __await(value)];\n\n        case 2:\n          _b = _c.apply(void 0, [_d.sent(), iterator]);\n          if (!_b) return [3\n          /*break*/\n          , 5];\n          return [4\n          /*yield*/\n          , __await(value)];\n\n        case 3:\n          return [4\n          /*yield*/\n          , _d.sent()];\n\n        case 4:\n          _b = _d.sent();\n          _d.label = 5;\n\n        case 5:\n          _d.label = 6;\n\n        case 6:\n          iterator_3_1 = iterator_3.next();\n          return [3\n          /*break*/\n          , 1];\n\n        case 7:\n          return [3\n          /*break*/\n          , 10];\n\n        case 8:\n          e_3_1 = _d.sent();\n          e_3 = {\n            error: e_3_1\n          };\n          return [3\n          /*break*/\n          , 10];\n\n        case 9:\n          try {\n            if (iterator_3_1 && !iterator_3_1.done && (_a = iterator_3.return)) _a.call(iterator_3);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 10:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\n/**\n * @namespace Currying\n * @sort 1\n */\n\n/**\n * @memberof Currying\n * @function\n */\n// currying reduce\n\nvar reduceArray =\n/*#__PURE__*/\ncurry(reduceArrayF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar reduceObject =\n/*#__PURE__*/\ncurry(reduceObjectF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar reduceIterator =\n/*#__PURE__*/\ncurry(reduceIteratorF); // currying each\n\n/**\n * @memberof Currying\n * @function\n */\n\nvar eachArray =\n/*#__PURE__*/\ncurry(eachArrayF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar eachObject =\n/*#__PURE__*/\ncurry(eachObjectF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar eachIterator =\n/*#__PURE__*/\ncurry(eachIteratorF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar mapArray =\n/*#__PURE__*/\ncurry(mapArrayF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar mapObject =\n/*#__PURE__*/\ncurry(mapObjectF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar mapIterator =\n/*#__PURE__*/\ncurry(mapIteratorF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar filterArray =\n/*#__PURE__*/\ncurry(filterArrayF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar filterObject =\n/*#__PURE__*/\ncurry(filterObjectF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar filterIterator =\n/*#__PURE__*/\ncurry(filterIteratorF); // currying async each\n\n/**\n * @memberof Currying\n * @function\n */\n\nvar asyncEachIterator =\n/*#__PURE__*/\ncurry(asyncEachIteratorF);\n/**\n * @memberof Currying\n * @function\n */\n\nvar asyncReduceIterator =\n/*#__PURE__*/\ncurry(asyncReduceIteratorF);\n/**\n * @memberof Currying\n * @function\n * @param {} callbackFn - Function that produces an element of the new Iterator.\n * @param {} [iterator] - The iterator to call this function.\n * @example\nasyncMapIterator(v => console.log(v), [fetch(\"https://daybrush.com\").then(res => res.json()), 1, 2, 3]);\n\n// curry\nconst func = asyncMapIterator(v => console.log(v));\n\nfunc([fetch(\"https://daybrush.com\").then(res => res.json()), 1, 2, 3])\n */\n\nvar asyncMapIterator =\n/*#__PURE__*/\ncurry(asyncMapIteratorF);\n\nexport { reduceArray, reduceObject, reduceIterator, eachArray, eachObject, eachIterator, mapArray, mapObject, mapIterator, filterArray, filterObject, filterIterator, asyncEachIterator, asyncReduceIterator, asyncMapIterator, reduceArrayF, reduceObjectF, reduceIteratorF, eachArrayF, eachObjectF, eachIteratorF, mapArrayF, mapObjectF, mapIteratorF, filterArrayF, filterObjectF, filterIteratorF, headArray, tailArray, head, tail, exec, asyncArray, asyncObject, toArray, asyncIterator, asyncReduceArrayF, asyncReduceObjectF, asyncReduceIteratorF, asyncEachArrayF, asyncEachObjectF, asyncEachIteratorF, asyncMapArrayF, asyncMapObjectF, asyncMapIteratorF, asyncFilterArrayF, asyncFilterObjectF, asyncFilterIteratorF, isPromise, isIterable, isIterator, curry, _pipe, pipe, compose };\n//# sourceMappingURL=fjx.esm.js.map\n","import { isObject, isArray } from \"@daybrush/utils\";\nimport { EventInterface, CallbackType, EventParamterType, eachObjectF, eachArrayF } from \"fjx\";\n\n/**\n* attach and trigger event handlers.\n*/\nclass EventTrigger implements EventInterface {\n  public events: { [name: string]: CallbackType[] };\n  /**\n\t* @example\nconst et = new Scene.EventTrigger();\nconst scene = new Scene();\n\nscene.on(\"call\", e => {\n\tconsole.log(e.param);\n});\net.on(\"call\", e => {\n\tconsole.log(e.param);\n});\nscene.trigger(\"call\", {param: 1});\net.trigger(\"call\", {param: 1});\n\t */\n  constructor() {\n    this.events = {};\n  }\n  public _on(name: string | EventParamterType, callback?: CallbackType | CallbackType[], once?: boolean) {\n    const events = this.events;\n\n    if (isObject(name)) {\n      eachObjectF((f, i) => {\n        this._on(i, f, once);\n      }, name);\n      return;\n    }\n    if (!(name in events)) {\n      events[name] = [];\n    }\n    if (!callback) {\n      return;\n    }\n    if (isArray(callback)) {\n      eachArrayF(func => this._on(name, func, once), callback);\n      return;\n    }\n    const event = events[name];\n    event.push(once ? function callback2(...args) {\n      callback(...args);\n      this.off(name, callback2);\n    } : callback);\n  }\n  /**\n\t* Attach an event handler function for one or more events to target\n\t* @param - event's name\n\t* @param - function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function() {\n\tconsole.log(\"animate\");\n});\n\ntarget.trigger(\"animate\");\n\n  */\n  public on(name: string | EventParamterType, callback?: CallbackType | CallbackType[]) {\n    this._on(name, callback);\n    return this;\n  }\n  /**\n\t* Dettach an event handler function for one or more events to target\n\t* @param - event's name\n\t* @param -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\nconst callback = function() {\n\tconsole.log(\"animate\");\n};\ntarget.on(\"animate\", callback);\n\ntarget.off(\"animate\", callback);\ntarget.off(\"animate\");\n\n\t*/\n  public off(name?: string, callback?: CallbackType) {\n    if (!name) {\n      this.events = {};\n    } else if (!callback) {\n      this.events[name] = [];\n    } else {\n      const callbacks = this.events[name];\n\n      if (!callbacks) {\n        return this;\n      }\n      const index = callbacks.indexOf(callback);\n\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n  /**\n\t* execute event handler\n\t* @param - event's name\n\t* @param - event handler's additional parameter\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function(a1, a2) {\n\tconsole.log(\"animate\", a1, a2);\n});\n\ntarget.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n\t*/\n  public trigger(name: string, ...data: any[]) {\n    const events = this.events;\n\n    if (!(name in events)) {\n      return this;\n    }\n    const event = events[name];\n\n    if (data.length) {\n      const target = data[0];\n\n      target.type = name;\n      target.currentTarget = this;\n      !target.target && (target.target = this);\n    }\n    eachArrayF(callback => {\n      callback.apply(this, data);\n    }, event);\n\n    return this;\n  }\n  public once(name: string | EventParamterType, callback?: CallbackType | CallbackType[]) {\n    this._on(name, callback, true);\n    return this;\n  }\n}\nexport default EventTrigger;\n","/**\n * @typedef\n */\nexport interface EasingFunctionInterface extends Function {\n  easingName?: string;\n}\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunctionInterface = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunctionInterface = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import { OBJECT, STRING } from \"@daybrush/utils\";\n\n/**\n * @typedef\n */\ninterface PropertyObjectInterface {\n  prefix?: string;\n  suffix?: string;\n  model?: string;\n  type?: string;\n  separator?: string;\n}\n/**\n* Make string, array to PropertyObject for the dot product\n*/\nclass PropertyObject {\n  public value: any[];\n  public options: PropertyObjectInterface;\n\n  /**\n\t* @param - This value is in the array format.\n\t* @param - options\n\t* @example\nvar obj = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\t */\n  constructor(value: string | any[], options?: PropertyObjectInterface) {\n    this.options = {\n      prefix: \"\",\n      suffix: \"\",\n      model: \"\",\n      type: \"\",\n      separator: \",\",\n    };\n    options && this.setOptions(options);\n    this.init(value);\n  }\n  public setOptions(newOptions: PropertyObjectInterface) {\n    const options = this.options;\n\n    for (const name in newOptions) {\n      options[name as keyof PropertyObjectInterface] = newOptions[name as keyof PropertyObjectInterface];\n    }\n    options && (this.options = {...this.options, ...options});\n    return this;\n  }\n  public getOption(name: keyof PropertyObjectInterface) {\n    return this.options[name];\n  }\n  /**\n\t* the number of values.\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.length);\n// 3\n\t */\n  public size() {\n    return this.value.length;\n  }\n  /**\n\t* retrieve one of values at the index\n\t* @param {Number} index - index\n\t* @return {Object} one of values at the index\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.get(0));\n// 1\n\t */\n  public get(index: number) {\n    return this.value[index];\n  }\n  /**\n\t* Set the value at that index\n\t* @param {Number} index - index\n\t* @param {Object} value - text, a number, object to set\n\t* @return {PropertyObject} An instance itself\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nobj1.set(0, 2);\nconsole.log(obj1.toValue());\n// 2,2,3\n\t */\n  public set(index: number, value: any) {\n    this.value[index] = value;\n    return this;\n  }\n  /**\n\t* create a copy of an instance itself.\n\t* @return {PropertyObject} clone\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nconst obj2 = obj1.clone();\n\t */\n  public clone(): PropertyObject {\n    const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n    return new PropertyObject(arr, this.options);\n  }\n  /**\n\t* Make Property Object to String\n\t* @return {String} Make Property Object to String\n\t* @example\n//rgba(100, 100, 100, 0.5)\nconst obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\",\n});\nconsole.log(obj4.toValue());\n// \"rgba(100,100,100,0.5)\"\n\t*/\n  public toValue(): string {\n    return this.options.prefix + this.join() + this.options.suffix;\n  }\n  /**\n\t* Make Property Object's array to String\n\t* @return {String} Join the elements of an array into a string\n\t* @example\n\t//rgba(100, 100, 100, 0.5)\n\tvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\t\"separator\" : \",\",\n\t\t\"prefix\" : \"rgba(\",\n\t\t\"suffix\" : \")\"\n\t});\n\tobj4.join();  // =>   \"100,100,100,0.5\"\n\t */\n  public join() {\n    return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.options.separator);\n  }\n  /**\n\t* executes a provided function once per array element.\n\t* @param {Function} callback - Function to execute for each element, taking three arguments\n\t* @param {All} [callback.currentValue] The current element being processed in the array.\n\t* @param {Number} [callback.index] The index of the current element being processed in the array.\n\t* @param {Array} [callback.array] the array.\n\t* @return {PropertyObject} An instance itself\n\t* @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n\t* @example\n//rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\nobj4.forEach(t => {\n\tconsole.log(t);\n});  // =>   \"100,100,100,0.5\"\n\t*/\n  public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n    this.value.forEach(func);\n    return this;\n  }\n  private init(value: string | any[]) {\n    const type = typeof value;\n\n    if (type === STRING) {\n      this.value = (value as string).split(this.options.separator);\n    } else if (type === OBJECT) {\n      this.value = (value as any[]);\n    } else {\n      this.value = [value];\n    }\n    return this;\n  }\n}\nexport default PropertyObject;\n","import { ROLES, MAXIMUM, FIXED, ALIAS,\n  PAUSED, RUNNING, PLAY, ENDED, PREFIX } from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport {\n  isArray, ANIMATION, ARRAY, OBJECT,\n  PROPERTY, STRING, NUMBER, IS_WINDOW, ObjectInterface,\n} from \"@daybrush/utils\";\n\nexport function isPropertyObject(value: any): value is PropertyObject {\n  return value instanceof PropertyObject;\n}\nexport function setAlias(name: string, alias: string[]) {\n  ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n  const length = names.length;\n  let roles: any = ROLES;\n  let fixed: any = FIXED;\n\n  for (let i = 0; i < length - 1; ++i) {\n    !roles[names[i]] && (roles[names[i]] = {});\n    roles = roles[names[i]];\n    if (isFixedProperty) {\n      !fixed[names[i]] && (fixed[names[i]] = {});\n      fixed = fixed[names[i]];\n    }\n  }\n  isFixedProperty && (fixed[names[length - 1]] = true);\n  roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n  const type = typeof value;\n\n  if (type === OBJECT) {\n    if (isArray(value)) {\n      return ARRAY;\n    } else if (isPropertyObject(value)) {\n      return PROPERTY;\n    }\n  } else if (type === STRING || type === NUMBER) {\n    return \"value\";\n  }\n  return type;\n}\nexport function toFixed(num: number) {\n  return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function isInProperties(roles: ObjectInterface<any>, args: any[], isCheckTrue?: boolean) {\n  const length = args.length;\n  let role: any = roles;\n\n  if (length === 0) {\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    if (role === true) {\n      return false;\n    }\n    role = role[args[i]];\n    if (!role || (!isCheckTrue && role === true)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isRole(args: any[], isCheckTrue?: boolean) {\n  return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: any[]) {\n  return isInProperties(FIXED, args, true);\n}\n\nexport interface IterationInterface {\n  currentTime: number;\n  iterationCount: number;\n  elapsedTime: number;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n  return item.state.playCSS && item.getPlayState() === PAUSED;\n}\nexport function exportCSS(id: number | string, css: string) {\n  const styleId = `${PREFIX}STYLE_${toId(id)}`;\n  const styleElement: HTMLElement = document.querySelector(`#${styleId}`);\n\n  if (styleElement) {\n    styleElement.innerText = css;\n  } else {\n    document.body.insertAdjacentHTML(\"beforeend\",\n      `<style id=\"${styleId}\">${css}</style>`);\n  }\n}\nexport function makeId(selector?: boolean) {\n  for (; ;) {\n    const id = `${Math.floor(Math.random() * 10000000)}`;\n\n    if (!IS_WINDOW || !selector) {\n      return id;\n    }\n    const checkElement = document.querySelector(`[data-scene-id=\"${id}\"]`);\n\n    if (!checkElement) {\n      return id;\n    }\n  }\n}\nexport function getRealId(item: Scene | SceneItem) {\n  return item.state.id || item.setId().getId();\n}\nexport function toId(text: number | string) {\n  return `${text}`.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nexport function playCSS(item: Scene | SceneItem, isExportCSS: boolean, properties = {}) {\n  if (!ANIMATION || item.getPlayState() === RUNNING) {\n    return;\n  }\n  if (isPausedCSS(item)) {\n    item.addPlayClass(true, properties);\n  } else {\n    if (item.isEnded()) {\n      item.setTime(0);\n    }\n    isExportCSS && item.exportCSS();\n    const el = item.addPlayClass(false, properties);\n\n    if (!el) {\n      return;\n    }\n    !item.state.peusdo && addAnimationEvent(item, el);\n    item.setState({ playCSS: true });\n  }\n  item.setPlayState(RUNNING);\n  item.trigger(PLAY);\n}\n\nexport function addAnimationEvent(item: Scene | SceneItem, el: HTMLElement) {\n  const duration = item.getDuration();\n  const isZeroDuration = !duration || !isFinite(duration);\n\n  const animationend = () => {\n    if (!isZeroDuration) {\n      item.setState({ playCSS: false });\n      item.finish();\n    }\n  };\n  item.on(ENDED, () => {\n    el.removeEventListener(\"animationend\", animationend);\n    el.removeEventListener(\"animationiteration\", animationiteration);\n  });\n  const animationiteration = ({elapsedTime}: any) => {\n    const currentTime = elapsedTime;\n    const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n    item.state.currentTime = currentTime;\n    item.setCurrentIterationCount(iterationCount);\n  };\n  el.addEventListener(\"animationend\", animationend);\n  el.addEventListener(\"animationiteration\", animationiteration);\n}\n","import {\n  THRESHOLD,\n  ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n  ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n  DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED, RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE } from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, EasingFunctionInterface } from \"./easing\";\nimport { toFixed } from \"./utils\";\nimport { splitUnit, isString, camelize, requestAnimationFrame, ObjectInterface } from \"@daybrush/utils\";\n\nfunction GetterSetter<T extends { new(...args: any[]): {} }>(\n  getter: string[], setter: string[], parent: string) {\n  return (constructor: T) => {\n    const prototype = constructor.prototype;\n\n    getter.forEach(name => {\n      prototype[camelize(`get ${name}`)] = function() {\n        return this[parent][name];\n      };\n    });\n    setter.forEach(name => {\n      prototype[camelize(`set ${name}`)] = function(value: any) {\n        this[parent][name] = value;\n        return this;\n      };\n    });\n  };\n}\n\n/**\n * @typedef\n */\nexport type FillModeType = \"forwards\" | \"backwards\" | \"both\";\n/**\n * @typedef\n */\nexport type IterationCountType = number | \"infinite\";\n/**\n * @typedef\n */\nexport type EasingType = 0 | EasingFunctionInterface;\n/**\n * @typedef\n */\nexport type DirectionType = \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\";\n/**\n * @typedef\n */\nexport type PlayStateType = \"paused\" | \"running\";\n\nexport interface StateInterface {\n  id?: number | string;\n  easing?: EasingType;\n  easingName?: string;\n  iterationCount?: IterationCountType;\n  delay?: number;\n  fillMode?: FillModeType;\n  direction?: DirectionType;\n  playSpeed?: number;\n  iterationTime?: number;\n  currentTime?: number;\n  tickTime?: number;\n  currentIterationCount?: number;\n  prevTime?: number;\n  playState?: PlayStateType;\n  duration?: number;\n  [key: string]: any;\n}\nexport function isDirectionReverse(currentIterationCount: number,\n                                   iteraiontCount: IterationCountType, direction: DirectionType) {\n  if (direction === REVERSE) {\n    return true;\n  } else if (iteraiontCount !== \"infinite\" && currentIterationCount === iteraiontCount && iteraiontCount % 1 === 0) {\n    return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n  }\n  return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} StateInterface The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n\nconst setters = [ITERATION_COUNT, DELAY, FILL_MODE,\n  DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n/**\n* play video, animation, the others\n* @extends EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n*/\n@GetterSetter(getters, setters, \"state\")\nclass Animator extends EventTrigger {\n  public state: StateInterface;\n  public options: ObjectInterface<any>;\n\n  /**\n   * @param - animator's options\n   * @example\nconst animator = new Animator({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n   */\n  constructor(options?: StateInterface) {\n    super();\n    this.options = {};\n    this.state = {\n      id: \"\",\n      easing: 0,\n      easingName: \"linear\",\n      iterationCount: 1,\n      delay: 0,\n      fillMode: \"forwards\",\n      direction: NORMAL,\n      playSpeed: 1,\n      currentTime: 0,\n      iterationTime: -1,\n      currentIterationCount: 0,\n      tickTime: 0,\n      prevTime: 0,\n      playState: PAUSED,\n      duration: 0,\n    };\n    this.setOptions(options);\n  }\n  /**\n\t* set animator's easing.\n\t* @param curverArray - The speed curve of an animation.\n\t* @return {Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n\t*/\n  public setEasing(curveArray: [number, number, number, number] | EasingFunctionInterface): this {\n    const easing = Array.isArray(curveArray) ?\n      bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]) : curveArray;\n    const easingName = easing[EASING_NAME] || \"linear\";\n\n    this.setState({ easing, easingName });\n    return this;\n  }\n  /**\n\t* set animator's options.\n\t* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n\t* @param - animator's options\n\t* @return {Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n\t*/\n  public setOptions(options: StateInterface = {}): this {\n    for (const name in options) {\n      const value = options[name];\n\n      if (name === EASING) {\n        this.setEasing(value);\n        continue;\n      } else if (name === DURATION) {\n        value && this.setDuration(value);\n        continue;\n      }\n      ((name in this.state ? this.state : this.options) as StateInterface)[name] = value;\n    }\n\n    return this;\n  }\n  /**\n\t* Get the animator's total duration including delay\n\t* @return {number} Total duration\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getTotalDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.state[DELAY] + this.getActiveDuration();\n  }\n  /**\n\t* Get the animator's total duration excluding delay\n\t* @return {number} Total duration excluding delay\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getActiveDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.getDuration() * (this.state[ITERATION_COUNT] as number);\n  }\n  /**\n\t* Check if the animator has reached the end.\n\t* @return {boolean} ended\n\t* @example\nanimator.isEnded(); // true or false\n\t*/\n  public isEnded(): boolean {\n    if (this.state.tickTime === 0 && this.state[PLAY_STATE] === PAUSED) {\n      return true;\n    } else if (this.getTime() < this.getActiveDuration()) {\n      return false;\n    }\n    return true;\n  }\n  /**\n\t*Check if the animator is paused:\n\t* @return {boolean} paused\n\t* @example\nanimator.isPaused(); // true or false\n\t*/\n  public isPaused(): boolean {\n    return this.state[PLAY_STATE] === PAUSED;\n  }\n  public setNext(animator: Animator): this {\n    this.on(ENDED, () => {\n      animator.play();\n    });\n    return this;\n  }\n  /**\n\t* play animator\n\t* @return {Animator} An instance itself.\n\t*/\n  public play() {\n    this.state[PLAY_STATE] = RUNNING;\n    if (this.isEnded()) {\n      this.setTickTime(0);\n    }\n    this.state.tickTime = this.getTime();\n\n    requestAnimationFrame((time: number) => {\n      this.state.prevTime = time;\n      this.tick(time);\n    });\n    /**\n\t\t * This event is fired when play animator.\n\t\t * @event Animator#play\n\t\t */\n    this.trigger(PLAY);\n\n    return this;\n  }\n  /**\n\t* pause animator\n\t* @return {Animator} An instance itself.\n\t*/\n  public pause(): this {\n    this.state[PLAY_STATE] = PAUSED;\n    /**\n\t\t * This event is fired when animator is paused.\n\t\t * @event Animator#paused\n\t\t */\n    this.trigger(PAUSED);\n    return this;\n  }\n  /**\n\t * end animator\n\t * @return {Animator} An instance itself.\n\t*/\n  public finish() {\n    this.state.tickTime = 0;\n    this.setTime(0);\n    this.end();\n    return this;\n  }\n  /**\n\t * end animator\n\t * @return {Animator} An instance itself.\n\t*/\n  public end() {\n    this.pause();\n    /**\n\t\t * This event is fired when animator is ended.\n\t\t * @event Animator#ended\n\t\t */\n    this.trigger(ENDED);\n    return this;\n  }\n  /**\n\t* set currentTime\n\t* @param {Number|String} time - currentTime\n\t* @return {Animator} An instance itself.\n\t* @example\n\nanimator.setTime(\"from\"); // 0\nanimator.setTime(\"to\"); // 100%\nanimator.setTime(\"50%\");\nanimator.setTime(10);\nanimator.getTime() // 10\n\t*/\n  public setTime(time: number | string, isTick?: boolean) {\n    const activeDuration = this.getActiveDuration();\n    let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n    this.state.tickTime = this.state.delay + currentTime;\n    if (currentTime < 0) {\n      currentTime = 0;\n    } else if (currentTime > activeDuration) {\n      currentTime = activeDuration;\n    }\n    this.state.currentTime = currentTime;\n    this.calculateIterationTime();\n\n    if (this.isDelay()) {\n      return this;\n    }\n    /**\n\t\t * This event is fired when the animator updates the time.\n\t\t * @event Animator#timeupdate\n\t\t * @param {Object} param The object of data to be sent to an event.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t */\n    this.trigger(TIMEUPDATE, {\n      currentTime,\n      time: this.getIterationTime(),\n      iterationCount: this.getIterationCount(),\n    });\n\n    return this;\n  }\n  public getState(name: string): any {\n    return this.state[name];\n  }\n  public setState(object: StateInterface) {\n    for (const name in object) {\n      this.state[name] = object[name];\n    }\n    return this;\n  }\n  /**\n\t* Get the animator's current time\n\t* @return {number} current time\n\t* @example\nanimator.getTime();\n\t*/\n  public getTime(): number {\n    return this.state.currentTime;\n  }\n  public getUnitTime(time: string | number) {\n    if (isString(time)) {\n      const duration = this.getDuration() || 100;\n\n      if (time === \"from\") {\n        return 0;\n      } else if (time === \"to\") {\n        return duration;\n      }\n      const { unit, value } = splitUnit(time);\n\n      if (unit === \"%\") {\n        !this.getDuration() && (this.state.duration = duration);\n        return parseFloat(time) / 100 * duration;\n      } else if (unit === \">\") {\n        return value + THRESHOLD;\n      } else {\n        return value;\n      }\n    } else {\n      return toFixed(time);\n    }\n  }\n  /**\n\t * Check if the current state of animator is delayed.\n\t * @return {boolean} check delay state\n\t */\n  public isDelay() {\n    const { delay, tickTime } = this.state;\n\n    return delay > 0 && (tickTime < delay);\n  }\n  public setCurrentIterationCount(iterationCount: number): this {\n    const state = this.state;\n    const passIterationCount = Math.floor(iterationCount);\n\n    if (state.currentIterationCount < passIterationCount) {\n      /**\n\t\t\t* The event is fired when an iteration of an animation ends.\n\t\t\t* @event Animator#iteration\n\t\t\t* @param {Object} param The object of data to be sent to an event.\n\t\t\t* @param {Number} param.currentTime The total time that the animator is running.\n\t\t\t* @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t\t*/\n      this.trigger(\"iteration\", {\n        currentTime: state.currentTime,\n        iterationCount: passIterationCount,\n      });\n    }\n    state.currentIterationCount = iterationCount;\n    return this;\n  }\n  protected calculateIterationTime() {\n    const { iterationCount, fillMode, direction } = this.state;\n    const duration = this.getDuration();\n    const time = this.getTime();\n    const currentIterationCount = duration === 0 ? 0 : time / duration;\n    let currentIterationTime = duration ? time % duration : 0;\n\n    if (!duration) {\n      this.setIterationTime(0);\n      return this;\n    }\n    this.setCurrentIterationCount(currentIterationCount);\n\n    // direction : normal, reverse, alternate, alternate-reverse\n    // fillMode : forwards, backwards, both, none\n    const isReverse = isDirectionReverse(currentIterationCount, iterationCount, direction);\n\n    const isFiniteDuration = isFinite(duration);\n    if (isFiniteDuration && isReverse) {\n      currentIterationTime = duration - currentIterationTime;\n    }\n    if (isFiniteDuration && iterationCount !== INFINITE) {\n      const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n      // fill forwards\n      if (currentIterationCount >= iterationCount) {\n        currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n        isReverse && (currentIterationTime = duration - currentIterationTime);\n      }\n    }\n    this.setIterationTime(currentIterationTime);\n    return this;\n  }\n  protected tick(now: number) {\n    const state = this.state;\n    const { playSpeed, prevTime } = state;\n    const currentTime = this.state.tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n    state.prevTime = now;\n    this.setTickTime(currentTime);\n    if (this.isEnded()) {\n      this.end();\n      return;\n    }\n    if (state[PLAY_STATE] === PAUSED) {\n      return;\n    }\n\n    requestAnimationFrame((time: number) => {\n      this.tick(time);\n    });\n  }\n  private setTickTime(time: number) {\n    this.setTime(time - this.state.delay, true);\n  }\n}\n\n/**\n * Get a delay for the start of an animation.\n * @method Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Animator#setDelay\n * @param {number} delay - delay\n * @return {Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#getFillMode\n * @return {FillModeType} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#setFillMode\n * @param {FillModeType} fillMode - fillMode\n * @return {Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Animator#getIterationCount\n * @return {IterationCountType} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Animator#setIterationCount\n * @param {IterationCountType} iterationCount - iterationCount\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#getDirection\n * @return {DirectionType} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#setDirection\n * @param {DirectionType} direction - direction\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Animator#getPlayState\n * @return {PlayStateType} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Animator#setPlayState\n * @param {PlayStateType} playState - playState\n * @return {Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Animator#setDuration\n * @param {number} duration - duration\n * @return {Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Animator#getEasing\n * @return {EasingType} easing\n */\n/**\n * Get the speed curve's name\n * @method Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\ninterface Animator {\n  getIterationTime(): number;\n  setIterationTime(time: number): this;\n  setDelay(delay: number): this;\n  getDelay(): number;\n  setFillMode(fillMode: FillModeType): this;\n  getFillMode(): FillModeType;\n  setIterationCount(iterationCount: IterationCountType): this;\n  getIterationCount(): IterationCountType;\n  setDirection(direction: DirectionType): this;\n  getDirection(): DirectionType;\n  setPlayState(playState: PlayStateType): this;\n  getPlayState(): PlayStateType;\n  setPlaySpeed(playSpeed: number): this;\n  getPlaySpeed(): number;\n  setDuration(duration: number): this;\n  getDuration(): number;\n  getEasing(): EasingType;\n  getEasingName(): string;\n}\nexport default Animator;\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {\n  COLOR_MODELS, isString,\n  splitComma, splitSpace, stringToRGBA,\n  RGBA, splitBracket, ObjectInterface\n} from \"@daybrush/utils\";\n\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const obj: ObjectInterface<string | PropertyObject> = {};\n  let length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      --length;\n      continue;\n    }\n    obj[matches[1].trim()] = toPropertyObject(matches[2].trim());\n  }\n  return {styles: obj, length};\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(text: string) {\n  // [prefix, value, other]\n  const { prefix: model, value, suffix: afterModel } = splitBracket(text);\n\n  if (typeof value === \"undefined\") {\n    return text;\n  }\n  if (COLOR_MODELS.indexOf(model) !== -1) {\n    return arrayToColorObject(stringToRGBA(text));\n  }\n  // divide comma(,)\n  const obj = toPropertyObject(value);\n\n  let arr = [value];\n  let separator = \",\";\n  let prefix = `${model}(`;\n  let suffix = `)${afterModel}`;\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.getOption(\"separator\");\n    arr = obj.value;\n    prefix += obj.getOption(\"prefix\");\n    suffix = obj.getOption(\"suffix\") + suffix;\n  }\n  return new PropertyObject(arr, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  const result = stringToRGBA(value);\n\n  return result ? arrayToColorObject(result) : value;\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: any[]): PropertyObject;\nexport function toPropertyObject(value: ObjectInterface<any>): ObjectInterface<any>;\nexport function toPropertyObject(value: string): PropertyObject | string;\nexport function toPropertyObject(value: string | ObjectInterface<any> | any[]) {\n  if (!isString(value)) {\n    if (Array.isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: ObjectInterface<any> = {}) {\n  const model = object.getOption(\"model\");\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => toObject(obj, result));\n  }\n  return result;\n}\n","import {\n  ALIAS, TIMING_FUNCTION\n} from \"./consts\";\nimport { isRole, getType, isPropertyObject } from \"./utils\";\nimport { toPropertyObject, splitStyle, toObject } from \"./utils/property\";\nimport { isObject, isArray, isString,\n  ANIMATION, TRANSFORM, FILTER, PROPERTY, FUNCTION, ARRAY, OBJECT, ObjectInterface } from \"@daybrush/utils\";\nimport { NameType } from \"./types\";\n\nfunction toInnerProperties(obj: ObjectInterface<string>) {\n  if (!obj) {\n    return \"\";\n  }\n  const arrObj = [];\n\n  for (const name in obj) {\n    arrObj.push(`${name.replace(/\\d/g, \"\")}(${obj[name]})`);\n  }\n  return arrObj.join(\" \");\n}\n\n/* eslint-disable */\nfunction clone(target: ObjectInterface<any>, toValue = false) {\n  return merge({}, target, toValue);\n}\nfunction merge(to: ObjectInterface<any>, from: ObjectInterface<any>, toValue = false) {\n  for (const name in from) {\n    const value = from[name];\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n      to[name] = toValue ? value.toValue() : value.clone();\n    } else if (type === FUNCTION) {\n      to[name] = toValue ? getValue([name], value()) : value;\n    } else if (type === ARRAY) {\n      to[name] = value.slice();\n    } else if (type === OBJECT) {\n      if (isObject(to[name]) && !isPropertyObject(to[name])) {\n        merge(to[name], value, toValue);\n      } else {\n        to[name] = clone(value, toValue);\n      }\n    } else {\n      to[name] = from[name];\n    }\n  }\n  return to;\n}\n/* eslint-enable */\n\nfunction getPropertyName(args: NameType[]) {\n  return args[0] in ALIAS ? ALIAS[args[0]] : args;\n}\nfunction getValue(names: NameType[], value: any): any {\n  const type = getType(value);\n\n  if (type === PROPERTY) {\n    return value.toValue();\n  } else if (type === FUNCTION) {\n    if (names[0] !== TIMING_FUNCTION) {\n      return getValue(names, value());\n    }\n  } else if (type === OBJECT) {\n    return clone(value, true);\n  }\n  return value;\n}\n/**\n* Animation's Frame\n*/\nclass Frame {\n  public properties: ObjectInterface<any>;\n  /**\n   * @param - properties\n   * @example\nconst frame = new Scene.Frame({\n\tdisplay: \"none\"\n\ttransform: {\n\t\ttranslate: \"50px\",\n\t\tscale: \"5, 5\",\n\t}\n});\n   */\n  constructor(properties: ObjectInterface<any> = {}) {\n    this.properties = {};\n    this.set(properties);\n  }\n  /**\n\t* get property value\n\t* @param {...Number|String|PropertyObject} args - property name or value\n\t* @example\n\tframe.get(\"display\") // => \"none\", \"block\", ....\n\tframe.get(\"transform\", \"translate\") // => \"10px,10px\"\n\t*/\n  public get(...args: NameType[]) {\n    const value = this.raw(...args);\n\n    return getValue(getPropertyName(args), value);\n  }\n\n  public raw(...args: NameType[]) {\n    let properties = this.properties;\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties)) {\n        return undefined;\n      }\n      properties = properties[params[i]];\n    }\n    return properties;\n  }\n  /**\n\t* remove property value\n\t* @param {...String} args - property name\n\t* @return {Frame} An instance itself\n\t* @example\n\tframe.remove(\"display\")\n\t*/\n  public remove(...args: NameType[]) {\n    let properties = this.properties;\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length - 1; ++i) {\n      if (!isObject(properties)) {\n        return this;\n      }\n      properties = properties[params[i]];\n    }\n    delete properties[params[length - 1]];\n    return this;\n  }\n  /**\n\t* set property\n\t* @param {...Number|String|PropertyObject} args - property names or values\n\t* @return {Frame} An instance itself\n\t* @example\n// one parameter\nframe.set({\n\tdisplay: \"none\",\n\ttransform: {\n\t\ttranslate: \"10px, 10px\",\n\t\tscale: \"1\",\n\t},\n\tfilter: {\n\t\tbrightness: \"50%\",\n\t\tgrayscale: \"100%\"\n\t}\n});\n\n// two parameters\nframe.set(\"transform\", {\n\ttranslate: \"10px, 10px\",\n\tscale: \"1\",\n});\n\n// three parameters\nframe.set(\"transform\", \"translate\", \"50px\");\n  */\n  public set(...args: any[]) {\n    const length = args.length;\n    const params = args.slice(0, -1);\n    const value = args[length - 1];\n\n    if (params[0] in ALIAS) {\n      this._set(ALIAS[params[0]], value);\n    } else if (length === 2 && isArray(params[0])) {\n      this._set(params[0], value);\n    } else if (isObject(value)) {\n      if (isArray(value)) {\n        this._set(params, value);\n      } else if (isPropertyObject(value)) {\n        if (isRole(params)) {\n          this.set(...params, toObject(value));\n        } else {\n          this._set(params, value);\n        }\n      } else if (value instanceof Frame) {\n        this.merge(value);\n      } else {\n        for (const name in value) {\n          this.set(...params, name, value[name]);\n        }\n      }\n    } else if (isString(value)) {\n      if (isRole(params)) {\n        const obj = toPropertyObject(value);\n\n        if (isObject(obj)) {\n          this.set(...params, obj);\n        }\n        return this;\n      } else {\n        const {styles, length: stylesLength} = splitStyle(value);\n\n        for (const name in styles) {\n          this.set(...params, name, styles[name]);\n        }\n        if (stylesLength) {\n          return this;\n        }\n      }\n      this._set(params, value);\n    } else {\n      this._set(params, value);\n    }\n    return this;\n  }\n  /**\n\t* check that has property.\n\t* @param {...String} args - property name\n\t* @example\n\tframe.has(\"property\", \"display\") // => true or false\n\t*/\n  public has(...args: NameType[]) {\n    let properties = this.properties;\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    if (!length) {\n      return false;\n    }\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties) || !(params[i] in properties)) {\n        return false;\n      }\n      properties = properties[params[i]];\n    }\n    return true;\n  }\n  /**\n\t* clone frame.\n\t* @return {Frame} An instance of clone\n\t* @example\n\tframe.clone();\n\t*/\n  public clone() {\n    const frame = new Frame();\n\n    return frame.merge(this);\n  }\n  /**\n\t* merge one frame to other frame.\n\t* @param - target frame.\n\t* @return {Frame} An instance itself\n\t* @example\n\tframe.merge(frame2);\n\t*/\n  public merge(frame: Frame) {\n    const properties = this.properties;\n    const frameProperties = frame.properties;\n\n    if (!frameProperties) {\n      return this;\n    }\n    merge(properties, frameProperties);\n\n    return this;\n  }\n  public toObject() {\n    return clone(this.properties, true);\n  }\n  /**\n\t* Specifies an css object that coverted the frame.\n\t* @return {object} cssObject\n\t*/\n  public toCSSObject() {\n    const properties = this.toObject();\n    const cssObject: ObjectInterface<string> = {};\n\n    for (const name in properties) {\n      if (isRole([name], true)) {\n        continue;\n      }\n      const value = properties[name];\n\n      if (name === TIMING_FUNCTION) {\n        cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n          (isString(value) ? value : value.easingName) || \"initial\";\n        continue;\n      }\n      cssObject[name] = value;\n    }\n    const transform = toInnerProperties(properties.transform);\n    const filter = toInnerProperties(properties.filter);\n\n    TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n    FILTER && filter && (cssObject[FILTER] = filter);\n    return cssObject;\n  }\n  /**\n\t* Specifies an css text that coverted the frame.\n\t* @return {string} cssText\n\t*/\n  public toCSS() {\n    const cssObject = this.toCSSObject();\n    const cssArray = [];\n\n    for (const name in cssObject) {\n      cssArray.push(`${name}:${cssObject[name]};`);\n    }\n    return cssArray.join(\"\");\n  }\n  private _set(args: NameType[], value: any) {\n    let properties = this.properties;\n    const length = args.length;\n\n    for (let i = 0; i < length - 1; ++i) {\n      const name = args[i];\n\n      !(name in properties) && (properties[name] = {});\n      properties = properties[name];\n    }\n    if (!length) {\n      return;\n    }\n    properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n  }\n}\nexport default Frame;\n","import { isInProperties, toFixed } from \"./utils\";\nimport PropertyObject from \"./PropertyObject\";\nimport Frame from \"./Frame\";\nimport { isObject, isArray, ObjectInterface } from \"@daybrush/utils\";\nimport { RoleInterface } from \"./types\";\n\nfunction getNames(names: ObjectInterface<any>, stack: string[]) {\n  let arr: string[][] = [];\n\n  for (const name in names) {\n    stack.push(name);\n\n    if (isObject(names[name])) {\n      arr = arr.concat(getNames(names[name], stack));\n    } else {\n      arr.push(stack.slice());\n    }\n    stack.pop();\n  }\n  return arr;\n}\nfunction updateFrame(names: ObjectInterface<any>, properties: ObjectInterface<any>) {\n  for (const name in properties) {\n    const value = properties[name];\n\n    if (!isObject(value) || isArray(value) || value instanceof PropertyObject) {\n      names[name] = true;\n      continue;\n    }\n    if (!isObject(names[name])) {\n      names[name] = {};\n    }\n    updateFrame(names[name], properties[name]);\n  }\n}\n/**\n* a list of objects in chronological order.\n*/\nclass Keyframes {\n  public times: number[];\n  public items: ObjectInterface<Frame>;\n  public names: RoleInterface;\n  /**\n\t */\n  constructor() {\n    this.times = [];\n    this.items = {};\n    this.names = {};\n  }\n  /**\n\t* A list of names\n\t* @return {} names\n\t* @example\nkeyframes.getNames(); // [[\"a\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n\t*/\n  public getNames(): string[][] {\n    const names = this.names;\n\n    return getNames(names, []);\n  }\n  /**\n\t* Check if keyframes has propery's name\n\t* @param - property's time\n\t* @return {boolean} true: if has property, false: not\n\t* @example\nkeyframes.hasName(\"transform\", \"translate\"); // true or not\n\t*/\n  public hasName(...args: string[]) {\n    return isInProperties(this.names, args, true);\n  }\n  /**\n\t * update property names used in frames.\n\t * @return {Keyframes} An instance itself\n\t */\n  public update() {\n    const items = this.items;\n\n    for (const time in items) {\n      this.updateFrame(items[time]);\n    }\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param - Function to execute for each element, taking three arguments\n\t * @return {Keyframes} An instance itself\n\t */\n  public forEach(callback: (item: any, time: number, items: ObjectInterface<any>) => void) {\n    const times = this.times;\n    const items = this.items;\n\n    times.forEach(time => {\n      callback(items[time], time, items);\n    });\n    return this;\n  }\n  /**\n\t* update property names used in frame.\n\t* @param {Frame} [frame] - frame of that time.\n\t* @return {Keyframes} An instance itself\n\t* @example\nkeyframes.updateFrame(frame);\n\t*/\n  public updateFrame(frame: Frame) {\n    if (!frame) {\n      return this;\n    }\n    const properties = frame.properties;\n    const names = this.names;\n\n    updateFrame(names, properties);\n    return this;\n  }\n  /**\n\t * Get how long an animation should take to complete one cycle.\n\t * @return {number} duration\n\t */\n  public getDuration() {\n    const times = this.times;\n\n    return times.length === 0 ? 0 : times[times.length - 1];\n  }\n  /**\n\t * Set how long an animation should take to complete one cycle.\n\t * @param {number} duration - duration\n\t * @return {Keyframes} An instance itself.\n\t */\n  public setDuration(duration: number, originalDuration: number = this.getDuration()) {\n    const ratio = duration / originalDuration;\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(time => {\n      const time2 = toFixed(time * ratio);\n\n      obj[time2] = items[time];\n\n      return time2;\n    });\n    this.items = obj;\n  }\n  /**\n\t * Set how much time you want to push ahead.\n\t * @param {number} time - time\n\t * @return {Keyframes} An instance itself.\n\t */\n  public unshift(time: number) {\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(t => {\n      const time2 = toFixed(time + t);\n\n      obj[time2] = items[t];\n      return time2;\n    });\n    this.items = obj;\n    return this;\n  }\n  /**\n\t* get size of list\n\t* @return {Number} length of list\n\t*/\n  public size() {\n    return this.times.length;\n  }\n  /**\n\t* add object in list\n\t* @param {number} time - frame's time\n\t* @param {any} object - target\n\t* @return {Keyframes} An instance itself\n\t*/\n  public add(time: number, object: any) {\n    this.items[time] = object;\n    this.addTime(time);\n    return this;\n  }\n  /**\n\t* Check if keyframes has object at that time.\n\t* @param {number} time - object's time\n\t* @return {boolean} true: if has time, false: not\n\t*/\n  public has(time: number) {\n    return time in this.items;\n  }\n  /**\n\t* get object at that time.\n\t* @param {number} time - object's time\n\t* @return {object} object at that time\n\t*/\n  public get(time: number) {\n    return this.items[time];\n  }\n  /**\n\t* remove object at that time.\n\t* @param {number} time - object's time\n\t* @return {Keyframes} An instance itself\n\t*/\n  public remove(time: number) {\n    const items = this.items;\n\n    delete items[time];\n    this.removeTime(time);\n    return this;\n  }\n  private addTime(time: number) {\n    const times = this.times;\n    const length = times.length;\n    let pushIndex = length;\n\n    for (let i = 0; i < length; ++i) {\n      // if time is smaller than times[i], add time to index\n      if (time === times[i]) {\n        return this;\n      } else if (time < times[i]) {\n        pushIndex = i;\n        break;\n      }\n    }\n    this.times.splice(pushIndex, 0, time);\n    return this;\n  }\n  private removeTime(time: number) {\n    const index = this.times.indexOf(time);\n\n    if (index > -1) {\n      this.times.splice(index, 1);\n    }\n    return this;\n  }\n}\nexport default Keyframes;\n","/**\n* @namespace\n* @name Dot\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport { EasingType } from \"../Animator\";\nimport { getType } from \"../utils\";\nimport { toPropertyObject } from \"./property\";\nimport { isArray, splitUnit, PROPERTY, FUNCTION } from \"@daybrush/utils\";\n\n/**\n* The dot product of Arrays\n* @memberof Dot\n* @function dotArray\n* @param {Array} a1 value1\n* @param {Array} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {Array|Object} Array.\n* @example\ndotArray([0, 0, 0, 1],[50, 50, 50, 1],0.5, 0.5);\n// => [25, 25, 25, 1]\n*/\nexport function dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  }\n  if (!isArray(a2)) {\n    return a1;\n  }\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\n/**\n* The dot product of PropertyObject(type=color)\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Dot\n* @function dotColor\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} PropertyObject(type=color).\n* @example\nvar colorObject = ......; //PropertyObject(type=color, model=\"rgba\", value=[254, 254, 254, 1]);\ndotColor(\"#000\",  colorObject, 0.5, 0.5);\n// \"#000\" => PropertyObject(type=color, model=\"rgba\", value=[0, 0, 0, 1]);\n// return => PropertyObject(type=color, model=\"rgba\", value=[127, 127, 127, 1]);\n*/\nexport function dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  if (b2 === 0) {\n    return color2;\n  }\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.getOption(\"model\");\n  const model2 = color2.getOption(\"model\");\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n/**\n* The dot product of Objects\n* @memberof Dot\n* @function dotObject\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} Array with Separator.\n* @example\ndotObject(PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)]),\nPropertyObject([\"9px\", \"solid\", rgba(50, 50, 50, 1)]),\n0.5, 0.5);\n// => PropertyObject([\"5px\", \"solid\", rgba(25, 25, 25, 1)])\n*/\nexport function dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.getOption(\"type\");\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.getOption(\"separator\") || a2.getOption(\"separator\"),\n    prefix: a1.getOption(\"prefix\") || a2.getOption(\"prefix\"),\n    suffix: a1.getOption(\"suffix\") || a2.getOption(\"suffix\"),\n    model: a1.getOption(\"model\") || a2.getOption(\"model\"),\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === \"array\") {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  // split number and unit of the value.\n  const r1 = b1 / (b1 + b2);\n  const r2 = 1 - r1;\n\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = v1.value * r2 + v2.value * r1;\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import Animator, { StateInterface, EasingType, isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n  toFixed,\n  isFixed,\n  playCSS,\n  toId,\n  exportCSS,\n  getRealId,\n  makeId,\n} from \"./utils\";\nimport Keyframes from \"./Keyframes\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n  START_ANIMATION,\n  PREFIX, THRESHOLD,\n  TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, NORMAL, INFINITE,\n  REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n  EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION\n} from \"./consts\";\nimport { isObject, isArray, isUndefined, decamelize,\n  ANIMATION, fromCSS, addClass, removeClass, hasClass,\n  KEYFRAMES, requestAnimationFrame, isFunction, IS_WINDOW, ObjectInterface } from \"@daybrush/utils\";\nimport { NameType } from \"./types\";\n\nfunction makeAnimationProperties(properties: ObjectInterface<string | number>) {\n  const cssArray = [];\n\n  for (const name in properties) {\n    cssArray.push(`${ANIMATION}-${decamelize(name)} : ${properties[name]};`);\n  }\n  return cssArray.join(\"\");\n}\n\ntype ElementsType = HTMLElement[] | NodeListOf<HTMLElement>;\n/**\n* manage Frame Keyframes and play keyframes.\n* @extends Animator\n* @example\nconst item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator {\n  public keyframes: Keyframes;\n  public elements: ElementsType;\n  /**\n\t* @param - properties\n\t* @param - options\n\t* @example\n\tconst item = new SceneItem({\n\t\t0: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\t1: {\n\t\t\tdisplay: \"block\",\n\t\t\topacity: 0,\n\t\t},\n\t\t2: {\n\t\t\topacity: 1,\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: StateInterface) {\n    super();\n    this.keyframes = new Keyframes();\n    this.elements = [];\n    this.load(properties, options);\n  }\n  public getDuration() {\n    return Math.max(this.state[DURATION], this.keyframes.getDuration());\n  }\n  public setDuration(duration: number) {\n    if (duration === 0) {\n      return this;\n    }\n    const originalDuration = this.getDuration();\n\n    if (originalDuration > 0) {\n      this.keyframes.setDuration(duration, originalDuration);\n    }\n    super.setDuration(toFixed(duration));\n    return this;\n  }\n  /**\n\t* set the unique indicator of the item.\n\t* @param {String} [id] - the indicator of the item.\n\t* @return {SceneItem} An instance itself\n\t* @example\nconst item = new SceneItem();\n\nitem.setId(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public setId(id?: number | string) {\n    const elements = this.elements;\n    const length = elements.length;\n\n    this.setState({ id: id || makeId(!!length) });\n    const sceneId = toId(this.getId());\n\n    this.state.selector || (this.state.selector = `[data-scene-id=\"${sceneId}\"]`);\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      elements[i].setAttribute(\"data-scene-id\", sceneId);\n    }\n    return this;\n  }\n  /**\n\t* Specifies the unique indicator of the item.\n\t* @return {String} the indicator of the item.\n\t* @example\nconst item = scene.newItem(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public getId() {\n    return this.state.id;\n  }\n  /**\n\t* Set properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\nconsole.log(item.get(0, \"a\")); // \"b\"\n\t*/\n  public set(time: any, ...args: any[]) {\n    if (isObject(time)) {\n      this.load(time);\n      return this;\n    } else if (args[0]) {\n      if (args[0] instanceof SceneItem) {\n        const item: SceneItem = args[0];\n        const delay = item.getDelay();\n        const realTime = this.getUnitTime(time) + delay;\n        const { keys, values, frames } = item.getAllTimes(!!delay || !this.hasFrame(time));\n        const easing = this.getEasingName() !== item.getEasingName() ? item.getEasing() : 0;\n\n        keys.forEach(t => {\n          this.set(realTime + t, frames[values[t]]);\n        });\n        if (easing) {\n          this.set(realTime + keys[0], EASING, easing);\n          this.set(realTime + keys[keys.length - 1], EASING, \"initial\");\n        }\n        return this;\n      } else if (args.length === 1 && isArray(args[0])) {\n        args[0].forEach((item: any) => {\n          this.set(time, item);\n        });\n        return this;\n      }\n    }\n    const frame = this.newFrame(time);\n\n    frame.set(...args);\n    this.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Get properties of the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} args property's name or properties\n\t* @return {Number|String|PropertyObejct} property value\n\t* @example\nitem.get(0, \"a\"); // item.getFrame(0).get(\"a\");\nitem.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n\t*/\n  public get(time: string | number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    return frame && frame.get(...args);\n  }\n  /**\n\t* remove properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.remove(0, \"a\");\n\t*/\n  public remove(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    frame && frame.remove(...args);\n    this.update();\n    return this;\n  }\n  /**\n\t* Append the item or object at the last time.\n\t* @param - the scene item or item object\n\t* @return An instance itself\n\t* @example\nitem.append(new SceneItem({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n}));\nitem.append({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\nitem.set(item.getDuration(), {\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\n\t*/\n  public append(item: SceneItem | ObjectInterface<any>) {\n    this.set(this.getDuration(), item);\n    return this;\n  }\n  /**\n\t* Push the front frames for the time and prepend the scene item or item object.\n\t* @param - the scene item or item object\n\t* @return An instance itself\n\t*/\n  public prepend(item: SceneItem | ObjectInterface<any>) {\n    if (item instanceof SceneItem) {\n      const delay = item.getDelay();\n      const duration = item.getIterationCount() === INFINITE ? item.getDuration() : item.getActiveDuration();\n      const unshiftTime = duration + delay;\n      const firstFrame = this.keyframes.get(0);\n\n      if (firstFrame) {\n        this.keyframes.remove(0);\n      }\n      this.keyframes.unshift(unshiftTime);\n      this.set(0, item);\n      this.set(unshiftTime + THRESHOLD, firstFrame);\n    } else {\n      this.prepend(new SceneItem(item));\n    }\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize items' keyframes.\n\t* @param {string} selectors - Selectors to find elements in items.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setSelector(\"#id.class\");\n\t*/\n  public setSelector(selector: boolean | string) {\n    const state = this.state;\n\n    state.selector = selector === true ? state.id :\n      (selector || `[data-scene-id=\"${state.id}\"]`);\n\n    const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(state.selector);\n\n    if (matches) {\n      state.selector = matches[1];\n      state.peusdo = matches[2];\n    }\n    IS_WINDOW && this.setElement(document.querySelectorAll(state.selector));\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize item's keyframes.\n\t* @param {Element|Array|string} elements - elements to synchronize item's keyframes.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n\t*/\n  public setElement(elements: HTMLElement | ElementsType) {\n    if (!elements) {\n      return this;\n    }\n    this.elements = (elements instanceof Element) ? [elements] : elements;\n    this.setId(this.getId());\n    return this;\n  }\n  /**\n\t* add css styles of items's element to the frame at that time.\n\t* @param {Array} properties - elements to synchronize item's keyframes.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public setCSS(time: number, properties: string[]) {\n    this.set(time, fromCSS(this.elements, properties));\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t* update property names used in frames.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.update();\n\t*/\n  public update() {\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* update property names used in frame.\n\t* @param {Frame} [frame] - frame of that time.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.updateFrame(time, this.get(time));\n\t*/\n  public updateFrame(frame: Frame) {\n    this.keyframes.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Create and add a frame to the sceneItem at that time\n\t* @param {Number} time - frame's time\n\t* @return {Frame} Created frame.\n\t* @example\nitem.newFrame(time);\n\t*/\n  public newFrame(time: string | number) {\n    let frame = this.getFrame(time);\n\n    if (frame) {\n      return frame;\n    }\n    frame = new Frame();\n    this.setFrame(time, frame);\n    return frame;\n  }\n  /**\n\t* Add a frame to the sceneItem at that time\n\t* @param {Number} time - frame's time\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setFrame(time, frame);\n\t*/\n  public setFrame(time: string | number, frame: Frame) {\n    this.keyframes.add(this.getUnitTime(time), frame);\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* get sceneItem's frame at that time\n\t* @param {Number} time - frame's time\n\t* @return {Frame} sceneItem's frame at that time\n\t* @example\nconst frame = item.getFrame(time);\n\t*/\n  public getFrame(time: number | string) {\n    return this.keyframes.get(this.getUnitTime(time));\n  }\n  /**\n\t* check if the item has a frame at that time\n\t* @param {Number} time - frame's time\n\t* @return {Boolean} true: the item has a frame // false: not\n\t* @example\nif (item.hasFrame(10)) {\n\t// has\n} else {\n\t// not\n}\n\t*/\n  public hasFrame(time: number | string) {\n    return this.keyframes.has(this.getUnitTime(time));\n  }\n  /**\n\t* remove sceneItem's frame at that time\n\t* @param {Number} time - frame's time\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.removeFrame(time);\n\t*/\n  public removeFrame(time: number) {\n    const keyframes = this.keyframes;\n\n    keyframes.remove(time);\n    keyframes.update();\n\n    return this;\n  }\n  /**\n\t* Copy frame of the previous time at the next time.\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number} toTime - the next time\n\t* @return {SceneItem} An instance itself\n\t* @example\n// getFrame(0) equal getFrame(1)\nitem.copyFrame(0, 1);\n\t*/\n  public copyFrame(fromTime: ObjectInterface<number> | number | string, toTime: number) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.copyFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const copyFrame = frame.clone();\n\n    this.setFrame(toTime, copyFrame);\n    return this;\n  }\n  /**\n\t* merge frame of the previous time at the next time.\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number|string} toTime - the next time\n\t* @return {SceneItem} An instance itself\n\t* @example\n// getFrame(1) contains getFrame(0)\nitem.merge(0, 1);\n\t*/\n  public mergeFrame(fromTime: ObjectInterface<number> | number | string, toTime: number | string) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.mergeFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const toFrame = this.newFrame(toTime);\n\n    toFrame.merge(frame);\n    return this;\n  }\n  /**\n\t* Get frame of the current time\n\t* @param {Number} time - the current time\n\t* @param {function} easing - the speed curve of an animation\n\t* @return {Frame} frame of the current time\n\t* @example\nlet item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n// opacity: 0.7; display:\"block\";\nconst frame = item.getNowFrame(1.7);\n\t*/\n  public getNowFrame(time: number, easing?: EasingType) {\n    const frame = new Frame();\n    const names = this.keyframes.getNames();\n    const { left, right } = this._getNearTimeIndex(time);\n    const realEasing = this._getEasing(time, left, right, this.getEasing() || easing);\n\n    names.forEach(properties => {\n      const value = this._getNowValue(time, properties, left, right, realEasing);\n\n      if (isUndefined(value)) {\n        return;\n      }\n      frame.set(properties, value);\n    });\n    return frame;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (isArray(properties)) {\n      const length = properties.length;\n\n      for (let i = 0; i < length; ++i) {\n        const time = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n        this.set(time, properties[i]);\n      }\n    } else if (properties.keyframes) {\n      this.set(properties.keyframes);\n    } else {\n      for (const time in properties) {\n        if (time === \"options\" || time === \"keyframes\") {\n          continue;\n        }\n        const value = properties[time];\n        const realTime = this.getUnitTime(time);\n\n        if (typeof value === \"number\") {\n          this.mergeFrame(value, realTime);\n          continue;\n        }\n        this.set(realTime, value);\n      }\n    }\n    options && this.setOptions(options);\n    return this;\n  }\n  /**\n\t * clone SceneItem.\n\t * @param {StateInterface} [options] animator options\n\t * @return {SceneItem} An instance of clone\n\t * @example\n\t * item.clone();\n\t */\n  public clone(options = {}) {\n    const item = new SceneItem();\n\n    item.setOptions(this.state);\n    item.setOptions(options);\n    this.keyframes.forEach((frame: Frame, time: number) => item.setFrame(time, frame.clone()));\n    return item;\n  }\n  public setOptions(options: StateInterface = {}) {\n    super.setOptions(options);\n    const { id, selector, duration, elements } = options;\n\n    duration && this.setDuration(duration);\n    id && this.setId(id);\n    if (elements) {\n      this.setElement(elements);\n    } else if (selector) {\n      this.setSelector(selector === true ? this.state.id : selector);\n    }\n    return this;\n  }\n  public getAllTimes(isStartZero = true, options: StateInterface = {}) {\n    const times = this.keyframes.times.slice();\n    let length = times.length;\n    const keys: number[] = [];\n    const values: ObjectInterface<number> = {};\n\n    if (!length) {\n      return { keys: [], values: {}, frames: {} };\n    }\n    const frames: ObjectInterface<Frame> = {};\n    const duration = this.getDuration();\n    const direction = options[DIRECTION] || this.state[DIRECTION];\n    const isShuffle = direction === ALTERNATE || direction === ALTERNATE_REVERSE;\n    (!this.getFrame(0)) && times.unshift(0);\n    (!this.getFrame(duration)) && times.push(duration);\n    length = times.length;\n    let iterationCount = options[ITERATION_COUNT] || this.state[ITERATION_COUNT];\n\n    iterationCount = iterationCount !== INFINITE ? iterationCount : 1;\n    const totalDuration = iterationCount * duration;\n\n    for (let i = 0; i < iterationCount; ++i) {\n      const isReverse = isDirectionReverse(i, iterationCount, direction);\n      const start = i * duration;\n\n      for (let j = 0; j < length; ++j) {\n        if (isShuffle && i !== 0 && j === 0) {\n          // pass duplicate\n          continue;\n        }\n        // isStartZero is keytimes[0] is 0 (i === 0 & j === 0)\n        const threshold = j === 0 && (i === 0 ? !isStartZero : !isShuffle) ? THRESHOLD : 0;\n        const keyvalue = toFixed(isReverse ? times[length - 1 - j] : times[j]);\n        const time = toFixed(isReverse ? duration - keyvalue : keyvalue);\n        const keytime = toFixed(start + time + threshold);\n\n        if (totalDuration < keytime) {\n          break;\n        }\n        keys.push(keytime);\n        values[keytime] = keyvalue;\n\n        if (!frames[keyvalue]) {\n          const frame = this.getFrame(keyvalue);\n\n          if (!frame || j === 0 || j === length - 1) {\n            frames[keyvalue] = this.getNowFrame(keyvalue);\n          } else {\n            frames[keyvalue] = frame.clone();\n            const isTransform = frame.has(\"transform\");\n            const isFilter = frame.has(\"filter\");\n            if (isTransform || isFilter) {\n              const nowFrame = this.getNowFrame(keyvalue);\n\n              isTransform && frames[keyvalue].remove(\"transform\").set(\"transform\", nowFrame.raw(\"transform\"));\n              isFilter && frames[keyvalue].remove(\"filter\").set(\"filter\", nowFrame.raw(\"filter\"));\n            }\n          }\n        }\n      }\n    }\n    if (keys[keys.length - 1] < totalDuration) {\n      // last time === totalDuration\n      const isReverse = isDirectionReverse(iterationCount, iterationCount, direction);\n      const keyvalue = toFixed(duration * (isReverse ? 1 - iterationCount % 1 : iterationCount % 1));\n\n      keys.push(totalDuration);\n      values[totalDuration] = keyvalue;\n      !frames[keyvalue] && (frames[keyvalue] = this.getNowFrame(keyvalue));\n    }\n    return { keys, values, frames };\n  }\n  /**\n\t* Specifies an css text that coverted the keyframes of the item.\n\t* @param {Array} [duration=this.getDuration()] - elements to synchronize item's keyframes.\n\t* @param {Array} [options={}] - parent options to unify options of items.\n\t* @example\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public toCSS(parentDuration = this.getDuration(), options: StateInterface = {}) {\n    const state = this.state;\n    const selector = state.selector || this.options.selector;\n    if (!selector) {\n      return \"\";\n    }\n    const peusdo = state.peusdo || \"\";\n    const id = getRealId(this);\n    // infinity or zero\n    const isInfinite = state[ITERATION_COUNT] === \"infinite\";\n    const isParent = !isUndefined(options[ITERATION_COUNT]);\n    const isZeroDuration = parentDuration === 0;\n    const duration = isZeroDuration ? this.getDuration() : parentDuration;\n    const playSpeed = (options[PLAY_SPEED] || 1);\n    const delay = ((options[DELAY] || 0) + (isZeroDuration ? state[DELAY] : 0)) / playSpeed;\n    const easingName = (state[EASING] && state[EASING_NAME]) ||\n      (isParent && options[EASING] && options[EASING_NAME]) || state[EASING_NAME];\n    const iterationCount = isInfinite ? \"infinite\" :\n      (!isZeroDuration && options[ITERATION_COUNT]) || state[ITERATION_COUNT];\n    const fillMode = (options[FILL_MODE] !== \"forwards\" && options[FILL_MODE]) || state[FILL_MODE];\n    const direction = isInfinite ? state[DIRECTION] : options[DIRECTION] || state[DIRECTION];\n    const cssText = makeAnimationProperties({\n      fillMode,\n      direction,\n      iterationCount,\n      delay: `${delay}s`,\n      name: `${PREFIX}KEYFRAMES_${toId(id)}`,\n      duration: `${duration / playSpeed}s`,\n      timingFunction: easingName,\n    });\n\n    const css = `${selector}.${START_ANIMATION}${peusdo} {\n\t\t\t${cssText}\n\t\t}${selector}.${PAUSE_ANIMATION}${peusdo} {\n      ${ANIMATION}-play-state: paused;\n    }\n\t\t${this._toKeyframes(duration, !isZeroDuration && isParent)}`;\n\n    return css;\n  }\n  public exportCSS(duration?: number, options?: StateInterface) {\n    if (!this.elements.length) {\n      return \"\";\n    }\n    const css = this.toCSS(duration, options);\n    const isParent = options && !isUndefined(options[ITERATION_COUNT]);\n\n    !isParent && exportCSS(getRealId(this), css);\n    return css;\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      addClass(elements[i], PAUSE_ANIMATION);\n    }\n  }\n  public endCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      const element = elements[i];\n\n      removeClass(element, PAUSE_ANIMATION);\n      removeClass(element, START_ANIMATION);\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nitem.playCSS();\nitem.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(isExportCSS = true, properties = {}) {\n    playCSS(this, isExportCSS, properties);\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const elements = this.elements;\n    const length = elements.length;\n    const cssText = makeAnimationProperties(properties);\n\n    if (!length) {\n      return;\n    }\n    if (isPaused) {\n      for (let i = 0; i < length; ++i) {\n        removeClass(elements[i], PAUSE_ANIMATION);\n      }\n    } else {\n      for (let i = 0; i < length; ++i) {\n        const element = elements[i];\n\n        element.style.cssText += cssText;\n        if (hasClass(element, START_ANIMATION)) {\n          removeClass(element, START_ANIMATION);\n          (el => {\n            requestAnimationFrame(() => {\n              requestAnimationFrame(() => {\n                addClass(el, START_ANIMATION);\n              });\n            });\n          })(element);\n        } else {\n          addClass(element, START_ANIMATION);\n        }\n      }\n    }\n    return elements[0];\n  }\n  private _getEasing(time: number, left: number, right: number, easing: EasingType) {\n    if (this.keyframes.hasName(TIMING_FUNCTION)) {\n      const nowEasing = this._getNowValue(time, [TIMING_FUNCTION], left, right, 0, true);\n\n      return isFunction(nowEasing) ? nowEasing : easing;\n    }\n    return easing;\n  }\n  private _toKeyframes(duration = this.getDuration(), isParent: boolean) {\n    const id = getRealId(this);\n    const state = this.state;\n    const playSpeed = state[PLAY_SPEED];\n    const iterationCount = state[ITERATION_COUNT];\n    const fillMode = state[FILL_MODE];\n    const delay = isParent ? state[DELAY] : 0;\n    const direction = isParent ? state[DIRECTION] : NORMAL;\n    const isReverse = direction === REVERSE || direction === ALTERNATE_REVERSE;\n    const { keys, values, frames } = this.getAllTimes(true, {\n      duration,\n      delay,\n      direction,\n      iterationCount: isParent && iterationCount !== INFINITE ? iterationCount : 1,\n      isCSS: true,\n    });\n    const length = keys.length;\n    const css: ObjectInterface<string> = {};\n    const keyframes: string[] = [];\n\n    if (!keys.length) {\n      return \"\";\n    }\n    for (const time in frames) {\n      css[time] = frames[time].toCSS();\n    }\n    const lastTime = keys[length - 1];\n    const lastCSS = css[values[lastTime]];\n\n    if (delay) {\n      const delayCSS = isReverse && (fillMode === \"both\" || fillMode === \"backwards\") ? lastCSS : css[0];\n      keyframes.push(`0%{}`);\n      isReverse && keyframes.push(`${delay / playSpeed / duration * 100 - THRESHOLD}%{${delayCSS}}`);\n    }\n    keys.forEach(time => {\n      const keyTime = (delay + time) / playSpeed / duration * 100;\n      keyframes.push(`${keyTime}%{${keyTime === 0 ? \"\" : css[values[time]]}}`);\n    });\n    // if (afterDelay) {\n    //   keyframes.push(`${lastTime / playSpeed / duration * 100 + THRESHOLD}%{${lastCSS}}`);\n    //   keyframes.push(`100%{${lastCSS}`);\n    // } else {\n    if ((delay + lastTime) / playSpeed < duration) {\n      // not 100%\n      keyframes.push(`100%{${lastCSS}}`);\n    }\n    // }\n    return `@${KEYFRAMES} ${PREFIX}KEYFRAMES_${toId(id)}{\n\t\t\t${keyframes.join(\"\\n\")}\n\t\t}`;\n  }\n  private _getNowValue(\n    time: number,\n    properties: string[],\n    left: number,\n    right: number,\n    easing: EasingType = this.getEasing(),\n    usePrevValue: boolean = isFixed(properties),\n  ) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    let prevTime: number;\n    let nextTime: number;\n    let prevFrame: Frame;\n    let nextFrame: Frame;\n\n    for (let i = left; i >= 0; --i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        prevTime = times[i];\n        prevFrame = frame;\n        break;\n      }\n    }\n    const prevValue = prevFrame && prevFrame.raw(...properties);\n\n    if (usePrevValue) {\n      return prevValue;\n    }\n    for (let i = right; i < length; ++i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        nextTime = times[i];\n        nextFrame = frame;\n        break;\n      }\n    }\n    const nextValue = nextFrame && nextFrame.raw(...properties);\n\n    if (!prevFrame || isUndefined(prevValue)) {\n      return nextValue;\n    }\n    if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n      return prevValue;\n    }\n    if (prevTime < 0) {\n      prevTime = 0;\n    }\n    return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n  }\n  private _getNearTimeIndex(time: number) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (times[i] === time) {\n        return { left: i, right: i };\n      } else if (times[i] > time) {\n        return { left: i === 0 ? 0 : i - 1, right: i };\n      }\n    }\n    return { left: length - 1, right: length - 1 };\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const easing = this.getEasing() || parentEasing;\n    const frame = this.getNowFrame(iterationTime, easing);\n    const currentTime = this.getTime();\n\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @event SceneItem#animate\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Frame} param.frame frame of that time.\n\t\t */\n    this.trigger(\"animate\", {\n      frame,\n      currentTime,\n      time: iterationTime,\n    });\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length || this.state.peusdo) {\n      return frame;\n    }\n    const attributes = frame.get(\"attribute\");\n\n    if (attributes) {\n      for (const name in (attributes as any)) {\n        for (let i = 0; i < length; ++i) {\n          elements[i].setAttribute(name, attributes[name]);\n        }\n      }\n    }\n    const cssText = frame.toCSS();\n\n    if (this.state.cssText !== cssText) {\n      this.state.cssText = cssText;\n\n      for (let i = 0; i < length; ++i) {\n        elements[i].style.cssText += cssText;\n      }\n      return frame;\n    }\n  }\n}\n\nexport default SceneItem;\n","import Animator, { StateInterface, EasingType } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ANIMATE, ITERATION_COUNT, EASING, EASING_NAME } from \"./consts\";\nimport Frame from \"./Frame\";\nimport { playCSS, exportCSS, getRealId, makeId } from \"./utils\";\nimport { isFunction, IS_WINDOW, ObjectInterface } from \"@daybrush/utils\";\nimport { eachObjectF, ForEachInterface } from \"fjx\";\n\n/**\n* manage sceneItems and play Scene.\n*/\nclass Scene extends Animator implements ForEachInterface<Scene | SceneItem> {\n  /**\n  * version info\n  * @type {string}\n  * @example\n  * Scene.VERSION // #__VERSION__#\n  */\n  public static VERSION: string = \"#__VERSION__#\";\n  public items: ObjectInterface<Scene | SceneItem>;\n  /**\n  * @sort 1\n  * @param - properties\n  * @param - options\n  * @example\n  const scene = new Scene({\n    item1: {\n      0: {\n        display: \"none\",\n      },\n      1: {\n        display: \"block\",\n        opacity: 0,\n      },\n      2: {\n        opacity: 1,\n      },\n    },\n    item2: {\n      2: {\n        opacity: 1,\n      },\n    }\n  });\n    */\n  constructor(properties?: ObjectInterface<any>, options?: StateInterface) {\n    super();\n    this.items = {};\n    this.load(properties, options);\n  }\n  public setId(id: number | string = `scene${Math.floor(Math.random() * 100000)}`) {\n    this.state.id = id;\n    return this;\n  }\n  public getId() {\n    return this.state.id;\n  }\n  public getDuration() {\n    const items = this.items;\n    let time = 0;\n\n    for (const id in items) {\n      const item = items[id];\n\n      time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n    }\n    return time;\n  }\n  public setDuration(duration: number) {\n    const items = this.items;\n    const sceneDuration = this.getDuration();\n\n    if (duration === 0 || !isFinite(sceneDuration)) {\n      return this;\n    }\n    if (sceneDuration === 0) {\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDuration(duration);\n      }\n    } else {\n      const ratio = duration / sceneDuration;\n\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDelay(item.getDelay() * ratio);\n        item.setDuration(item.getDuration() * ratio);\n      }\n    }\n    return this;\n  }\n  public getItem<T extends (Scene | SceneItem) = Scene | SceneItem>(name: number | string): T;\n  public getItem(name: number | string, index: number): SceneItem;\n  /**\n  * get item in scene by name\n  * @param - The item's name\n  * @param - If item is added as function, it can be imported via index.\n  * @return {Scene | SceneItem} item\n  * @example\n  const item = scene.getItem(\"item1\")\n  */\n  public getItem(name: number | string, index?: number) {\n    if (index != null) {\n      return (this.items[name] as Scene).getItem(index) as SceneItem;\n    }\n    return this.items[name];\n  }\n  /**\n  * create item in scene\n  * @param {String} name - name of item to create\n  * @param {StateInterface} options - The option object of SceneItem\n  * @return {Sceme.SceneItem} Newly created item\n  * @example\n  const item = scene.newItem(\"item1\")\n  */\n  public newItem(name: number | string, options: StateInterface = {}) {\n    if (name in this.items) {\n      return;\n    }\n    const item = new SceneItem();\n\n    this.setItem(name, item);\n    item.setOptions(options);\n\n    return item;\n  }\n  /**\n  * add a sceneItem to the scene\n  * @param - name of item to create\n  * @param - sceneItem\n  * @example\n  const item = scene.newItem(\"item1\")\n  */\n  public setItem(name: number | string, item: Scene | SceneItem) {\n    item.setId(name);\n    this.items[name] = item;\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n   * executes a provided function once for each scene item.\n   * @param - Function to execute for each element, taking three arguments\n   * @return {Scene} An instance itself\n   */\n  public forEach(func: (item?: Scene | SceneItem, name?: string, items?: ObjectInterface<Scene | SceneItem>) => void) {\n    const items = this.items;\n\n    eachObjectF(func, items);\n    return this;\n  }\n  public toCSS(duration: number = this.getDuration(), parentState?: StateInterface) {\n    const items = this.items;\n    let totalDuration = parentState ? this.getDuration() : duration;\n\n    if (!totalDuration || !isFinite(totalDuration)) {\n      totalDuration = 0;\n    }\n    const styles: string[] = [];\n    const state = {\n      ...this.state,\n    };\n\n    if (parentState) {\n      const stateIterations = state[ITERATION_COUNT];\n      const parentIterations = parentState[ITERATION_COUNT];\n\n      if (parentIterations === \"infinite\") {\n        state[ITERATION_COUNT] = \"infinite\";\n      } else if (stateIterations !== \"infinite\") {\n        state[ITERATION_COUNT] = stateIterations * parentIterations;\n      }\n      if (!state[EASING]) {\n        state[EASING] = parentState[EASING];\n        state[EASING_NAME] = parentState[EASING_NAME];\n      }\n    }\n    for (const id in items) {\n      styles.push(items[id].toCSS(totalDuration, state));\n    }\n    return styles.join(\"\");\n  }\n  /**\n   * Export the CSS of the items to the style.\n   * @return {Scene} An instance itself\n   */\n  public exportCSS(duration?: number, parentState?: StateInterface) {\n    const css = this.toCSS(duration, parentState);\n\n    !parentState && exportCSS(getRealId(this), css);\n    return css;\n  }\n  public append(item: SceneItem | Scene) {\n    item.setDelay(item.getDelay() + this.getDuration());\n    this.setItem(getRealId(item), item);\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].pauseCSS();\n    }\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public endCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].endCSS();\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const items = this.items;\n    let animtionElement: HTMLElement;\n\n    for (const id in items) {\n      const el = items[id].addPlayClass(isPaused, properties);\n\n      !animtionElement && (animtionElement = el);\n    }\n    return animtionElement;\n  }\n  /**\n  * Play using the css animation and keyframes.\n  * @param {boolean} [exportCSS=true] Check if you want to export css.\n  * @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n  * @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n  * @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n  * @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n  * @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n  * @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n  * @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n  * @return {Scene} An instance itself\n  * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n  * @example\n  scene.playCSS();\n  scene.playCSS(false, {\n  direction: \"reverse\",\n  fillMode: \"forwards\",\n  });\n  */\n  public playCSS(isExportCSS = true, properties = {}) {\n    playCSS(this, isExportCSS, properties);\n    return this;\n  }\n  public set(properties: any = {}, ...args: any[]) {\n    this.load(properties);\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (!properties) {\n      return this;\n    }\n    const isSelector = options && options.selector || this.options.selector;\n\n    for (const name in properties) {\n      if (name === \"options\") {\n        continue;\n      }\n      const object = properties[name];\n      let item;\n\n      if (object instanceof Scene || object instanceof SceneItem) {\n        this.setItem(name, object);\n        item = object;\n      } else if (isFunction(object) && isSelector) {\n        const elements = IS_WINDOW ? document.querySelectorAll(name) : ([] as Element[]);\n        const length = elements.length;\n        const scene = new Scene();\n\n        for (let i = 0; i < length; ++i) {\n          const id = makeId();\n\n          scene.newItem(`${i}`, {\n            id,\n            selector: `[data-scene-id=\"${id}\"]`,\n            elements: elements[i],\n          }).load(object(i));\n        }\n        this.setItem(name, scene);\n        continue;\n      } else {\n        item = this.newItem(name);\n        item.load(object);\n      }\n      isSelector && item.setSelector(name);\n    }\n    this.setOptions(options);\n  }\n  public setSelector(_: string | boolean) {\n    const isSelector = this.options.selector;\n\n    this.forEach((item, name) => {\n      item.setSelector(isSelector ? name : false);\n    });\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const items = this.items;\n    const easing = this.getEasing() || parentEasing;\n    const frames: ObjectInterface<ObjectInterface<any> | Frame> = {};\n\n    for (const id in items) {\n      const item = items[id];\n\n      frames[id] = item.animate(Math.max(iterationTime * item.getPlaySpeed() - item.getDelay(), 0), easing);\n    }\n    /**\n     * This event is fired when timeupdate and animate.\n     * @param {Number} param.currentTime The total time that the animator is running.\n     * @param {Number} param.time The iteration time during duration that the animator is running.\n     * @param {Frame} param.frames frame of that time.\n     */\n    this.trigger(ANIMATE, {\n      currentTime: this.getTime(),\n      time: iterationTime,\n      frames,\n    });\n    return frames;\n  }\n}\n\nexport default Scene;\n","\nimport { StateInterface } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface } from \"@daybrush/utils\";\n\n/**\n * @namespace presets\n */\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @param - property to set effect\n * @param - values of 100%\n * @example\n// import {set, blink} from \"scenejs\";\n// set(\"opacity\", [0, 1, 0], {duration: 2});\nScene.set(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\nScene.blink({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function set(property: string | string[], values: any[], options: StateInterface) {\n  const item = new SceneItem({}, options);\n  const length = values.length;\n\n  for (let i = 0; i < length; ++i) {\n    item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n  }\n  return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {set, zoomIn} from \"scenejs\";\n// zoomIn({duration: 2});\nScene.zoomIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {zoomOut} from \"scenejs\";\n// zoomOut({duration: 2});\nScene.zoomOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeIn} from \"scenejs\";\n// wipeIn({property: \"left\", duration: 2});\nScene.wipeIn({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeOut} from \"scenejs\";\n// wipeOut({property: \"left\", duration: 2});\nScene.wipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @param {Scene.SceneItem} item1 - Item that end effect\n * @param {Scene.SceneItem} item2 - Item that start effect\n * @param {AnimatorOptions} options\n * @param {object} options.from The starting properties of item1 and end properties of item2\n * @param {object} options.to The starting properties of item2 and end properties of item1\n * @param {number} options.duration animation's duration\n * @param {number} [options.time] start time of item1 <br/> <strong>default: item1.getDuration() - duration</strong>\n * @example\n// import {transition} from \"scenejs\";\ntransition(item1, item2, {\n\tfrom: {\n\t\topacity: 1,\n\t},\n\tto: {\n\t\topacity: 0,\n\t},\n\tduration: 0.1,\n});\n\n// Same\nitem1.set({\n\t[item1.getDuration() - 0.1]: {\n\t\topacity: 1,\n\t},\n\t[item1.getDuration()]: {\n\t\topacity: 0,\n\t}\n});\nitem2.set({\n\t0: {\n\t\topacity: 0,\n\t},\n\t0.1: {\n\t\topacity: 1,\n\t}\n});\n */\nexport function transition(item1: SceneItem, item2: SceneItem, {\n  from,\n  to,\n  duration = item1.getDuration(),\n  time = Math.max(item1.getDuration() - duration, 0),\n}: { from: ObjectInterface<any>, to: ObjectInterface<any>, duration?: number, time: number }) {\n  item1.set({\n    [time]: from,\n    [time + duration]: to,\n  });\n  item2.set({\n    0: to,\n    [duration]: from,\n  });\n}\n\n/**\n * Make a fade in effect.\n * @memberof presets\n * @param {StateInterface} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeIn} from \"scenejs\";\n// fadeIn({duration: 2});\nScene.fadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof presets\n * @param {StateInterface} options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeOut} from \"scenejs\";\n// fadeOut({duration: 2});\nScene.fadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof presets\n * @param {StateInterface} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {blink} from \"scenejs\";\n// blink({duration: 2});\nScene.blink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to, from], arguments[0]);\n}\n","import Scene, * as others from \"./index\";\n\nfor (const name in others) {\n  (Scene as any)[name] = (others as any)[name];\n}\n\nexport default Scene;\n"],"names":["PREFIX","TIMING_FUNCTION","ROLES","transform","filter","attribute","ALIAS","easing","FIXED","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","OPTIONS","EVENTS","RGB","RGBA","HSL","HSLA","COLOR_MODELS","FUNCTION","PROPERTY","ARRAY","OBJECT","STRING","NUMBER","UNDEFINED","IS_WINDOW","window","prefixes","getCrossBrowserProperty","property","document","styles","body","documentElement","style","length","i","name","TRANSFORM","FILTER","ANIMATION","KEYFRAMES","replace","isUndefined","value","isObject","isArray","Array","isString","isFunction","splitComma","text","matches","match","map","str","trim","splitBracket","exec","prefix","suffix","splitUnit","unit","NaN","parseFloat","camelize","all","letter","toUpperCase","decamelize","separator","letter2","toLowerCase","now","Date","getTime","requestAnimationFrame","firstTime","raf","webkitRequestAnimationFrame","mozRequestAnimationFrame","bind","callback","currTime","setTimeout","hexToRGBA","hex","h","r","parseInt","substring","g","b","a","isNaN","stringToRGBA","color","charAt","join","indexOf","_a","arr","colorArr","hsl","s","l","Math","floor","abs","rgb","c","x","m","round","hslToRGBA","addClass","element","className","classList","add","removeClass","remove","reg","RegExp","eachArrayF","f","iterator","forEach","eachObjectF","key","events","once","this","_this","_on","func","push","callback2","_i","args","off","callbacks","index","splice","data","event","target","type","currentTarget","apply","cubic","y1","y2","t","t2","bezier","x1","x2","dx","solveFromX","max","min","easingName","steps","count","position","time","level","STEP_START","STEP_END","LINEAR","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","options","model","setOptions","init","newOptions","PropertyObject","v","clone","toValue","split","isPropertyObject","getType","toFixed","num","isInProperties","roles","isCheckTrue","role","isRole","exportCSS","id","css","styleId","toId","styleElement","querySelector","innerText","insertAdjacentHTML","makeId","selector","random","getRealId","item","state","setId","getId","playCSS","isExportCSS","properties","getPlayState","addPlayClass","isEnded","setTime","el","peusdo","duration","getDuration","isZeroDuration","isFinite","animationend","setState","finish","on","removeEventListener","animationiteration","elapsedTime","currentTime","iterationCount","setCurrentIterationCount","addEventListener","addAnimationEvent","setPlayState","trigger","isDirectionReverse","currentIterationCount","iteraiontCount","direction","setters","getters","_super","delay","fillMode","playSpeed","iterationTime","tickTime","prevTime","playState","tslib_1","getter","setter","parent","curveArray","setDuration","setEasing","Infinity","getActiveDuration","animator","play","setTickTime","tick","end","pause","isTick","activeDuration","getUnitTime","calculateIterationTime","isDelay","getIterationTime","getIterationCount","object","passIterationCount","currentIterationTime","setIterationTime","isReverse","isFiniteDuration","Animator","constructor","prototype","EventTrigger","arrayToColorObject","arrayToPropertyObject","toPropertyObject","result","values","afterModel","obj","getOption","stringToBracketObject","toInnerProperties","arrObj","merge","to","from","getValue","slice","getPropertyName","names","set","raw","params","_set","toObject","size","get","Frame","stylesLength","frame","frameProperties","cssObject","toCSSObject","cssArray","times","items","getNames","stack","concat","pop","updateFrame","originalDuration","ratio","time2","addTime","removeTime","pushIndex","dotArray","a1","a2","b1","b2","v1","dot","dotObject","a1Type","color1","color2","value1","value2","model1","colorModel","dotColor","type1","type2","isFunction1","isFunction2","r1","r2","v2","makeAnimationProperties","keyframes","Keyframes","elements","load","sceneId","setAttribute","SceneItem","getDelay","realTime_1","keys","values_1","frames_1","getEasingName","getEasing","newFrame","getFrame","update","unshiftTime","firstFrame","unshift","prepend","setElement","querySelectorAll","Element","getComputedStyle","fromCSS","parentEasing","_animate","isNumber","setFrame","has","fromTime","toTime","copyFrame","mergeFrame","left","right","realEasing","_getEasing","_getNowValue","realTime","setSelector","isStartZero","frames","isShuffle","totalDuration","start","j","threshold","keyvalue","keytime","isTransform","isFilter","nowFrame","getNowFrame","parentDuration","isInfinite","isParent","cssText","timingFunction","_toKeyframes","toCSS","isPausedCSS","pauseCSS","isPaused","endCSS","contains","hasName","nowEasing","lastTime","lastCSS","delayCSS","keyTime","usePrevValue","nextTime","prevFrame","nextFrame","prevValue","nextValue","dotValue","attributes","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","getItem","setItem","parentState","stateIterations","parentIterations","animtionElement","isSelector","Scene","scene","newItem","_","animate","item1","item2","_b","_c","_d","isProperty","isFixedProperty","fixed","alias","others"],"mappings":"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"}