{"version":3,"file":"scene.common.js","sources":["../src/consts.ts","../src/EventTrigger.ts","../src/easing.ts","../src/PropertyObject.ts","../src/utils.ts","../src/Animator.ts","../src/utils/color.ts","../src/utils/property.ts","../src/Frame.ts","../src/Keyframes.ts","../src/utils/dot.ts","../src/utils/css.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts","../src/index.ts"],"sourcesContent":["export type Role = true | RoleInterface;\nexport interface RoleInterface {\n  [role: string]: Role;\n}\nexport interface ObjectInterface<T> {\n  [name: string]: T;\n}\nexport type NameType = string | number;\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const timingFunction = \"animation-timing-function\";\nexport const ROLES: RoleInterface = { transform: {}, filter: {}, attribute: {} };\nexport const ALIAS: ObjectInterface<string[]> = { easing: [\"animation-timing-function\"] };\nexport const FIXED = { \"animation-timing-function\": true, \"contents\": true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\ntype OptionType = [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"];\ntype EventType = [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const RGBA = \"rgba\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n\nconst prefixes: string[] = [\"webkit\", \"ms\", \"moz\", \"o\"];\nconst checkProperties = (property: string) => {\n  const styles = (document.body || document.documentElement).style as any;\n  const length = prefixes.length;\n\n  if (typeof styles[property] !== \"undefined\") {\n    return property;\n  }\n  for (let i = 0; i < length; ++i) {\n    const name = `-${prefixes[i]}-${property}`;\n\n    if (typeof styles[name] !== \"undefined\") {\n      return name;\n    }\n  }\n  return \"\";\n};\n\nexport const TRANSFORM = /*#__PURE__*/checkProperties(\"transform\");\nexport const FILTER = /*#__PURE__*/checkProperties(\"filter\");\nexport const ANIMATION = /*#__PURE__*/checkProperties(\"animation\");\nexport const KEYFRAMES = /*#__PURE__*/ANIMATION.replace(\"animation\", \"keyframes\");\n","type CallbackType = (...args: any[]) => any;\ninterface EventParamterType {\n  [name: string]: CallbackType | CallbackType[];\n}\n/**\n* attach and trigger event handlers.\n* @memberof Scene\n*/\nclass EventTrigger {\n  private events: { [name: string]: CallbackType[] };\n  /**\n\t* @example\nconst et = new Scene.EventTrigger();\nconst scene = new Scene();\n\nscene.on(\"call\", e => {\n\tconsole.log(e.param);\n});\net.on(\"call\", e => {\n\tconsole.log(e.param);\n});\nscene.trigger(\"call\", {param: 1});\net.trigger(\"call\", {param: 1});\n\t */\n  constructor() {\n    this.events = {};\n  }\n  /**\n\t* Attach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function() {\n\tconsole.log(\"animate\");\n});\n\ntarget.trigger(\"animate\");\n\n\t*/\n  public on(name: string | EventParamterType, callback?: CallbackType | CallbackType[]) {\n    const events = this.events;\n\n    if (typeof name === \"object\") {\n      for (const i in name) {\n        this.on(i, name[i]);\n      }\n      return this;\n    }\n    if (!(name in events)) {\n      events[name] = [];\n    }\n    if (!callback) {\n      return this;\n    }\n    if (typeof callback === \"object\") {\n      callback.forEach(func => this.on(name, func));\n      return this;\n    }\n    const event = events[name];\n\n    event.push(callback);\n    return this;\n  }\n  /**\n\t* Dettach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\nconst callback = function() {\n\tconsole.log(\"animate\");\n};\ntarget.on(\"animate\", callback);\n\ntarget.off(\"animate\", callback);\ntarget.off(\"animate\");\n\n\t*/\n  public off(name?: string, callback?: CallbackType) {\n    if (!name) {\n      this.events = {};\n    } else if (!callback) {\n      this.events[name] = [];\n    } else {\n      const callbacks = this.events[name];\n\n      if (!callbacks) {\n        return this;\n      }\n      const index = callbacks.indexOf(callback);\n\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n  /**\n\t* execute event handler\n\t* @param {String} name - event's name\n\t* @param {Function} [...data] - event handler's additional parameter\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function(a1, a2) {\n\tconsole.log(\"animate\", a1, a2);\n});\n\ntarget.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n\t*/\n  public trigger(name: string, ...data: any[]) {\n    const events = this.events;\n\n    if (!(name in events)) {\n      return this;\n    }\n\n    const event = events[name];\n\n    if (data.length) {\n      const target = data[0];\n\n      target.type = name;\n      target.currentTarget = this;\n      !target.target && (target.target = this);\n    }\n    event.forEach(callback => {\n      callback.apply(this, data);\n    });\n\n    return this;\n  }\n}\nexport default EventTrigger;\n","export interface EasingFunctionInterface extends Function {\n  easingName?: string;\n}\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunctionInterface = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunctionInterface = (time: number) => {\n    const level = 1 / count;\n\n    return (position === \"end\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","interface PropertyObjectInterface {\n  prefix?: string;\n  suffix?: string;\n  model?: string;\n  type?: string;\n  separator?: string;\n  [key: string]: any;\n}\n/**\n* Make string, array to PropertyObject for the dot product\n* @memberof Scene\n*/\nclass PropertyObject {\n  public value: any[];\n  public options: PropertyObjectInterface;\n\n  /**\n\t* @param {String|Array} value - This value is in the array format ..\n\t* @param {String} separator - Array separator.\n\t* @example\nvar obj1 = new PropertyObject(\"1,2,3\", \",\");\nvar obj2 = new PropertyObject([1,2,3], \" \");\nvar obj3 = new PropertyObject(\"1$2$3\", \"$\");\n\n// rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\t */\n  constructor(value: string | any[], options: PropertyObjectInterface = {}) {\n    this.options = {\n      prefix: \"\",\n      suffix: \"\",\n      model: \"\",\n      type: \"\",\n      separator: \",\",\n    };\n    this.setOptions(options);\n    this.init(value);\n  }\n  public setOptions(options: PropertyObjectInterface) {\n    (Object as any).assign(this.options, options);\n    return this;\n  }\n  public getOption(name: string) {\n    return this.options[name];\n  }\n  /**\n\t* the number of values.\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.length);\n// 3\n\t */\n  public size() {\n    return this.value.length;\n  }\n  /**\n\t* retrieve one of values at the index\n\t* @param {Number} index - index\n\t* @return {Object} one of values at the index\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.get(0));\n// 1\n\t */\n  public get(index: number) {\n    return this.value[index];\n  }\n  /**\n\t* Set the value at that index\n\t* @param {Number} index - index\n\t* @param {Object} value - text, a number, object to set\n\t* @return {PropertyObject} An instance itself\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nobj1.set(0, 2);\nconsole.log(obj1.toValue());\n// 2,2,3\n\t */\n  public set(index: number, value: any) {\n    this.value[index] = value;\n    return this;\n  }\n  /**\n\t* create a copy of an instance itself.\n\t* @return {PropertyObject} clone\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nconst obj2 = obj1.clone();\n\t */\n  public clone(): PropertyObject {\n    const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n\n    return new PropertyObject(arr, {\n      separator: this.options.separator,\n      prefix: this.options.prefix,\n      suffix: this.options.suffix,\n      model: this.options.model,\n      type: this.options.type,\n    });\n  }\n  /**\n\t* Make Property Object to String\n\t* @return {String} Make Property Object to String\n\t* @example\n//rgba(100, 100, 100, 0.5)\nconst obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\",\n});\nconsole.log(obj4.toValue());\n// \"rgba(100,100,100,0.5)\"\n\t*/\n  public toValue(): string {\n    return this.options.prefix + this.join() + this.options.suffix;\n  }\n  /**\n\t* Make Property Object's array to String\n\t* @return {String} Join the elements of an array into a string\n\t* @example\n\t//rgba(100, 100, 100, 0.5)\n\tvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\t\"separator\" : \",\",\n\t\t\"prefix\" : \"rgba(\",\n\t\t\"suffix\" : \")\"\n\t});\n\tobj4.join();  // =>   \"100,100,100,0.5\"\n\t */\n  public join() {\n    return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.options.separator);\n  }\n  /**\n\t* executes a provided function once per array element.\n\t* @param {Function} callback - Function to execute for each element, taking three arguments\n\t* @param {All} [callback.currentValue] The current element being processed in the array.\n\t* @param {Number} [callback.index] The index of the current element being processed in the array.\n\t* @param {Array} [callback.array] the array.\n\t* @return {PropertyObject} An instance itself\n\t* @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n\t* @example\n//rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\nobj4.forEach(t => {\n\tconsole.log(t);\n});  // =>   \"100,100,100,0.5\"\n\t*/\n  public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n    this.value.forEach(func);\n    return this;\n  }\n  private init(value: string | any[]) {\n    const type = typeof value;\n\n    if (type === \"string\") {\n      this.value = (value as string).split(this.options.separator);\n    } else if (type === \"object\") {\n      this.value = (value as any[]);\n    } else {\n      this.value = [value];\n    }\n    return this;\n  }\n}\nexport default PropertyObject;\n","import { ROLES, ObjectInterface, MAXIMUM, FIXED, ALIAS } from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\n\nexport function setAlias(name: string, alias: string[]) {\n  ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n  const length = names.length;\n  let roles: any = ROLES;\n  let fixed: any = FIXED;\n\n  for (let i = 0; i < length - 1; ++i) {\n    !roles[names[i]] && (roles[names[i]] = {});\n    roles = roles[names[i]];\n    if (isFixedProperty) {\n      !fixed[names[i]] && (fixed[names[i]] = {});\n      fixed = fixed[names[i]];\n    }\n  }\n  isFixedProperty && (fixed[names[length - 1]] = true);\n  roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n  const type = typeof value;\n\n  if (type === \"object\") {\n    if (isArray(value)) {\n      return \"array\";\n    } else if (value instanceof PropertyObject) {\n      return \"property\";\n    }\n  } else if (type === \"string\" || type === \"number\") {\n    return \"value\";\n  }\n  return type;\n}\nexport function toFixed(num: number) {\n  return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function isInProperties(roles: ObjectInterface<any>, args: any[], isCheckTrue?: boolean) {\n  const length = args.length;\n  let role: any = roles;\n\n  if (length === 0) {\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    if (role === true) {\n      return false;\n    }\n    role = role[args[i]];\n    if (!role || (!isCheckTrue && role === true)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isRole(args: any[], isCheckTrue?: boolean) {\n  return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: any[]) {\n  return isInProperties(FIXED, args, true);\n}\nexport function isUndefined(value: any): value is undefined {\n  return (typeof value === \"undefined\");\n}\nexport function isObject(value: any): value is ObjectInterface<any> {\n  return value && (typeof value === \"object\");\n}\nexport function isArray(value: any): value is any[] {\n  return Array.isArray(value);\n}\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\nexport function has(object: object, name: string) {\n  return Object.prototype.hasOwnProperty.call(object, name);\n}\nexport function splitUnit(text: string) {\n  const matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return { prefix: \"\", unit: \"\", value: NaN };\n  }\n  const prefix = matches[1];\n  const value = matches[2];\n  const unit = matches[3];\n\n  return { prefix, unit, value: parseFloat(value) };\n}\n// export function camelize(str: string) {\n// \treturn str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n// }\nexport function decamelize(str: string) {\n  return str.replace(/([a-z])([A-Z])/g, (all, letter, letter2) => `${letter}-${letter2.toLowerCase()}`);\n}\n","import {\n  ObjectInterface, THRESHOLD,\n  ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n  ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n  DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED, RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE } from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, EasingFunctionInterface } from \"./easing\";\nimport { toFixed, isString, splitUnit } from \"./utils\";\n\nlet lastTime = 0;\nfunction camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\nfunction GetterSetter<T extends { new(...args: any[]): {} }>(\n  getter: string[], setter: string[], parent: string) {\n  return (constructor: T) => {\n    const prototype = constructor.prototype;\n\n    getter.forEach(name => {\n      prototype[camelize(`get ${name}`)] = function() {\n        return this[parent][name];\n      };\n    });\n    setter.forEach(name => {\n      prototype[camelize(`set ${name}`)] = function(value: any) {\n        this[parent][name] = value;\n        return this;\n      };\n    });\n  };\n}\nconst requestAnimFrame = /*#__PURE__*/(() => {\n  return (window as any).requestAnimationFrame ||\n    (window as any).webkitRequestAnimationFrame ||\n    (window as any).mozRequestAnimationFrame ||\n    ((callback: (time: number) => void) => {\n      const currTime = Date.now();\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      const id = window.setTimeout(() => {\n        callback(currTime + timeToCall);\n      }, 1000 / 60);\n      lastTime = currTime + timeToCall;\n      return id;\n    });\n})();\n\nexport type FillModeType = \"forwards\" | \"backwards\" | \"both\";\nexport type IterationCountType = number | \"infinite\";\nexport type EasingType = 0 | EasingFunctionInterface;\nexport type DirectionType = \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\";\nexport type PlayStateType = \"paused\" | \"running\";\n\nexport interface StateInterface {\n  id?: string;\n  easing?: EasingType;\n  easingName?: string;\n  iterationCount?: IterationCountType;\n  delay?: number;\n  fillMode?: FillModeType;\n  direction?: DirectionType;\n  playSpeed?: number;\n  iterationTime?: number;\n  currentTime?: number;\n  tickTime?: number;\n  currentIterationCount?: number;\n  prevTime?: number;\n  playState?: PlayStateType;\n  duration?: number;\n  [key: string]: any;\n}\nexport function isDirectionReverse(iterationCount: number, direction: DirectionType) {\n  return direction === REVERSE ||\n    direction === (iterationCount % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorOptions The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n/**\n* play video, animation, the others\n* @memberof Scene\n* @class Animator\n* @extends Scene.EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n* @param {AnimatorOptions} [options] - animator's options\n* @example\nconst animator = new Animator({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n*/\n\nconst setters = [ITERATION_COUNT, DELAY, FILL_MODE,\n  DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n@GetterSetter(getters, setters, \"state\")\nclass Animator extends EventTrigger {\n  public state: StateInterface;\n  public options: ObjectInterface<any>;\n\n  constructor(options?: StateInterface) {\n    super();\n    this.options = {};\n    this.state = {\n      id: \"\",\n      easing: 0,\n      easingName: \"linear\",\n      iterationCount: 1,\n      delay: 0,\n      fillMode: \"forwards\",\n      direction: NORMAL,\n      playSpeed: 1,\n      currentTime: 0,\n      iterationTime: -1,\n      currentIterationCount: 0,\n      tickTime: 0,\n      prevTime: 0,\n      playState: PAUSED,\n      duration: 0,\n    };\n    this.setOptions(options);\n  }\n  /**\n\t* set animator's easing.\n\t* @method Scene.Animator#setEasing\n\t* @param {array| function} curverArray - The speed curve of an animation.\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n\t*/\n  public setEasing(curveArray: [number, number, number, number] | EasingFunctionInterface): this {\n    const easing = Array.isArray(curveArray) ?\n      bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]) : curveArray;\n    const easingName = easing[EASING_NAME] || \"linear\";\n\n    this.setState({ easing, easingName });\n    return this;\n  }\n  /**\n\t* set animator's options.\n\t* @method Scene.Animator#setOptions\n\t* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n\t* @param {Object} [AnimatorOptions] - animator's options\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n\t*/\n  public setOptions(options: StateInterface = {}): this {\n    for (const name in options) {\n      const value = options[name];\n\n      if (name === EASING) {\n        this.setEasing(value);\n        continue;\n      } else if (name === DURATION) {\n        value && this.setDuration(value);\n        continue;\n      }\n      ((name in this.state ? this.state : this.options) as StateInterface)[name] = value;\n    }\n\n    return this;\n  }\n  /**\n\t* Get the animator's total duration including delay\n\t* @method Scene.Animator#getTotalDuration\n\t* @return {number} Total duration\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getTotalDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.state[DELAY] + this.getActiveDuration();\n  }\n  /**\n\t* Get the animator's total duration excluding delay\n\t* @method Scene.Animator#getActiveDuration\n\t* @return {number} Total duration excluding delay\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getActiveDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.getDuration() * (this.state[ITERATION_COUNT] as number);\n  }\n  /**\n\t* Check if the animator has reached the end.\n\t* @method Scene.Animator#isEnded\n\t* @return {boolean} ended\n\t* @example\nanimator.isEnded(); // true or false\n\t*/\n  public isEnded(): boolean {\n    if (this.state.tickTime === 0 && this.state[PLAY_STATE] === PAUSED) {\n      return true;\n    } else if (this.getTime() < this.getActiveDuration()) {\n      return false;\n    }\n    return true;\n  }\n  /**\n\t*Check if the animator is paused:\n\t* @method Scene.Animator#isPaused\n\t* @return {boolean} paused\n\t* @example\nanimator.isPaused(); // true or false\n\t*/\n  public isPaused(): boolean {\n    return this.state[PLAY_STATE] === PAUSED;\n  }\n  public setNext(animator: Animator): this {\n    this.on(ENDED, () => {\n      animator.play();\n    });\n    return this;\n  }\n  /**\n\t* play animator\n\t* @method Scene.Animator#play\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public play() {\n    this.state[PLAY_STATE] = RUNNING;\n    if (this.isEnded()) {\n      this.setTickTime(0);\n    }\n    this.state.tickTime = this.getTime();\n\n    requestAnimFrame((time: number) => {\n      this.state.prevTime = time;\n      this.tick(time);\n    });\n    /**\n\t\t * This event is fired when play animator.\n\t\t * @event Scene.Animator#play\n\t\t */\n    this.trigger(PLAY);\n\n    return this;\n  }\n  /**\n\t* pause animator\n\t* @method Scene.Animator#pause\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public pause(): this {\n    this.state[PLAY_STATE] = PAUSED;\n    /**\n\t\t * This event is fired when animator is paused.\n\t\t * @event Scene.Animator#paused\n\t\t */\n    this.trigger(PAUSED);\n    return this;\n  }\n  /**\n\t * end animator\n\t * @method Scene.Animator#end\n\t * @return {Scene.Animator} An instance itself.\n\t*/\n  public end(): this {\n    this.pause();\n    /**\n\t\t * This event is fired when animator is ended.\n\t\t * @event Scene.Animator#ended\n\t\t */\n    this.trigger(ENDED);\n    return this;\n  }\n  /**\n\t* reset animator\n\t* @method Scene.Animator#reset\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public reset() {\n    this.state.tickTime = 0;\n    this.setTime(0);\n    this.pause();\n    return this;\n  }\n  /**\n\t* set currentTime\n\t* @method Scene.Animator#setTime\n\t* @param {Number|String} time - currentTime\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\n\nanimator.setTime(\"from\"); // 0\nanimator.setTime(\"to\"); // 100%\nanimator.setTime(\"50%\");\nanimator.setTime(10);\nanimator.getTime() // 10\n\t*/\n  public setTime(time: number | string, isTick?: boolean) {\n    const activeDuration = this.getActiveDuration();\n    let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n    this.state.tickTime = this.state.delay + currentTime;\n    if (currentTime < 0) {\n      currentTime = 0;\n    } else if (currentTime > activeDuration) {\n      currentTime = activeDuration;\n    }\n    this.state.currentTime = currentTime;\n    this.calculateIterationTime();\n\n    if (this.isDelay()) {\n      return this;\n    }\n    /**\n\t\t * This event is fired when the animator updates the time.\n\t\t * @event Scene.Animator#timeupdate\n\t\t * @param {Object} param The object of data to be sent to an event.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t */\n    this.trigger(TIMEUPDATE, {\n      currentTime,\n      time: this.getIterationTime(),\n      iterationCount: this.getIterationCount(),\n    });\n\n    return this;\n  }\n  public getState(name: string): any {\n    return this.state[name];\n  }\n  public setState(object: StateInterface) {\n    for (const name in object) {\n      this.state[name] = object[name];\n    }\n    return this;\n  }\n  /**\n\t* Get the animator's current time\n\t* @method Scene.Animator#getTime\n\t* @return {number} current time\n\t* @example\nanimator.getTime();\n\t*/\n  public getTime(): number {\n    return this.state.currentTime;\n  }\n  public getUnitTime(time: string | number) {\n    if (isString(time)) {\n      const duration = this.getDuration() || 100;\n\n      if (time === \"from\") {\n        return 0;\n      } else if (time === \"to\") {\n        return duration;\n      }\n      const { unit, value } = splitUnit(time);\n\n      if (unit === \"%\") {\n        !this.getDuration() && (this.state.duration = duration);\n        return parseFloat(time) / 100 * duration;\n      } else if (unit === \">\") {\n        return value + THRESHOLD;\n      } else {\n        return value;\n      }\n    } else {\n      return toFixed(time);\n    }\n  }\n  /**\n\t * Check if the current state of animator is delayed.\n\t * @method Scene.Animator#isDelay\n\t * @return {boolean} check delay state\n\t */\n  public isDelay() {\n    const { delay, tickTime } = this.state;\n\n    return delay > 0 && (tickTime < delay);\n  }\n  protected setCurrentIterationCount(iterationCount: number): this {\n    const state = this.state;\n    const passIterationCount = Math.floor(iterationCount);\n\n    if (state.currentIterationCount < passIterationCount) {\n      /**\n\t\t\t* The event is fired when an iteration of an animation ends.\n\t\t\t* @event Scene.Animator#iteration\n\t\t\t* @param {Object} param The object of data to be sent to an event.\n\t\t\t* @param {Number} param.currentTime The total time that the animator is running.\n\t\t\t* @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t\t*/\n      this.trigger(\"iteration\", {\n        currentTime: state.currentTime,\n        iterationCount: passIterationCount,\n      });\n    }\n    state.currentIterationCount = iterationCount;\n    return this;\n  }\n  protected calculateIterationTime() {\n    const { iterationCount, fillMode, direction } = this.state;\n    const duration = this.getDuration();\n    const time = this.getTime();\n    const currentIterationCount = duration === 0 ? 0 : time / duration;\n    let currentIterationTime = duration ? time % duration : 0;\n\n    if (!duration) {\n      this.setIterationTime(0);\n      return this;\n    }\n    this.setCurrentIterationCount(currentIterationCount);\n\n    // direction : normal, reverse, alternate, alternate-reverse\n    // fillMode : forwards, backwards, both, none\n    const isReverse = isDirectionReverse(currentIterationCount, direction);\n\n    if (isReverse) {\n      currentIterationTime = duration - currentIterationTime;\n    }\n    if (iterationCount !== INFINITE) {\n      const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n      // fill forwards\n      if (currentIterationCount >= iterationCount) {\n        currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n        isReverse && (currentIterationTime = duration - currentIterationTime);\n      }\n    }\n    this.setIterationTime(currentIterationTime);\n    return this;\n  }\n  protected tick(now: number) {\n    const state = this.state;\n    const { playSpeed, prevTime } = state;\n    const currentTime = this.state.tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n    state.prevTime = now;\n    this.setTickTime(currentTime);\n    if (this.isEnded()) {\n      this.end();\n      return;\n    }\n    if (state[PLAY_STATE] === PAUSED) {\n      return;\n    }\n\n    requestAnimFrame((time: number) => {\n      this.tick(time);\n    });\n  }\n  private setTickTime(time: number) {\n    this.setTime(time - this.state.delay, true);\n  }\n}\n\n/**\n * Get a delay for the start of an animation.\n * @method Scene.Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Scene.Animator#setDelay\n * @param {number} delay - delay\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#getFillMode\n * @return {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#setFillMode\n * @param {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode - fillMode\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Scene.Animator#getIterationCount\n * @return {\"inifnite\"|number} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Scene.Animator#setIterationCount\n * @param {\"inifnite\"|number} iterationCount - iterationCount\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#getDirection\n * @return {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#setDirection\n * @param {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction - direction\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Scene.Animator#getPlayState\n * @return {\"paused\"|\"running\"} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Scene.Animator#setPlayState\n * @param {\"paused\"|\"running\"} playState - playState\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Scene.Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Scene.Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Scene.Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Scene.Animator#setDuration\n * @param {number} duration - duration\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Scene.Animator#getEasing\n * @return {0|function} easing\n */\n/**\n * Get the speed curve's name\n * @method Scene.Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Scene.Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\ninterface Animator {\n  getIterationTime(): number;\n  setIterationTime(time: number): this;\n  setDelay(delay: number): this;\n  getDelay(): number;\n  setFillMode(fillMode: FillModeType): this;\n  getFillMode(): FillModeType;\n  setIterationCount(iterationCount: IterationCountType): this;\n  getIterationCount(): IterationCountType;\n  setDirection(direction: IterationCountType): this;\n  getDirection(): IterationCountType;\n  setPlayState(playState: PlayStateType): this;\n  getPlayState(): PlayStateType;\n  setPlaySpeed(playSpeed: number): this;\n  getPlaySpeed(): number;\n  setDuration(duration: number): this;\n  getDuration(): number;\n  getEasing(): EasingType;\n  getEasingName(): string;\n}\nexport default Animator;\n","import { RGBA } from \"../consts\";\n\n/**\n* @namespace\n* @name Color\n*/\nexport const COLOR_MODELS = [\"rgb\", RGBA, \"hsl\", \"hsla\"];\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {String} hex color\n* @example\nconsole.log(cutHex(\"#000000\"))\n// \"000000\"\n*/\nexport function cutHex(hex: string) {\n  return (hex.charAt(0) === \"#\") ? hex.substring(1) : hex;\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {Array} rgb color\n* @example\nconsole.log(hexToRGB(\"#000000\"));\n// [0, 0, 0]\nconsole.log(hexToRGB(\"#201045\"));\n// [32, 16, 69]\n*/\nexport function hexToRGB(hex: string) {\n  const h = cutHex(hex);\n  const r = parseInt(h.substring(0, 2), 16);\n  const g = parseInt(h.substring(2, 4), 16);\n  const b = parseInt(h.substring(4, 6), 16);\n  let a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n  return [r, g, b, a];\n}\n\n/**\n* convert 3-digit hex color to 6-digit hex color.\n* @memberof Color\n* @param {String} hex - 3-digit hex color\n* @return {String} 6-digit hex color\n* @example\nconsole.log(hex3to6(\"#123\"));\n// \"#112233\"\n*/\nexport function hex3to6(h: string) {\n  const r = h.charAt(1);\n  const g = h.charAt(2);\n  const b = h.charAt(3);\n  const arr = [\"#\", r, r, g, g, b, b];\n\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgb color.\n* @memberof Color\n* @param {Array} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1)\n* @return {Array} rgb color\n* @example\nconsole.log(hslToRGB([150, 0.5, 0.4]));\n// [51, 153, 102]\n*/\nexport function hslToRGB(hsl: number[]) {\n  let h = hsl[0];\n  const s = hsl[1];\n  const l = hsl[2];\n\n  if (h < 0) {\n    h +=  Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n  h %= 360;\n\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n  const m = l - c / 2;\n  let rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n  const result = [\n    Math.round((rgb[0] + m) * 255),\n    Math.round((rgb[1] + m) * 255),\n    Math.round((rgb[2] + m) * 255),\n  ];\n\n  if (hsl.length > 3) {\n    result[3] = hsl[3];\n  }\n  return result;\n}\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {COLOR_MODELS, hexToRGB, hex3to6, hslToRGB} from \"./color\";\nimport {isString, isArray} from \"../utils\";\nimport { ObjectInterface, RGBA } from \"../consts\";\n\n/**\n* divide text by space.\n* @memberof Property\n* @function splitSpace\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitSpace(text: string) {\n  // divide comma(,)\n  const matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Property\n* @function splitComma\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitComma(text: string) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  const matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n\n  return matches ? matches.map(str => str.trim()) : [];\n}\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const length = properties.length;\n  const obj = [];\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      continue;\n    }\n    obj.push({[matches[1].trim()]: toPropertyObject(matches[2].trim())});\n  }\n  return obj;\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n\t* convert text with parentheses to PropertyObject[type=color].\n\t* If the values are not RGBA model, change them RGBA mdoel.\n\t* @memberof Property\n\t* @function toColorObject\n\t* @param {String|PropertyObject} value - color value \"rgba(0,0,0,1)\"\n\t* @return {PropertyObject} PropertyObject[type=color]\n\t* @example\ntoColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function toColorObject(value: PropertyObject | number[] | string) {\n  let colorObject;\n\n  if (value instanceof PropertyObject) {\n    colorObject = value;\n  } else if (isArray(value)) {\n    colorObject = arrayToColorObject(value);\n  } else if (isString(value)) {\n    return stringToColorObject(value);\n  }\n  let colorArray = colorObject.value;\n  const length = colorArray.length;\n\n  if (length === 4) {\n    colorArray[3] = parseFloat(colorArray[3]);\n  } else if (length === 3) {\n    colorArray[3] = 1;\n  }\n  colorObject.setOptions({type: \"color\"});\n  const colorModel = colorObject.getOption(\"model\").toLowerCase();\n\n  // rgb hsl model to CHANGE rgba hsla\n  // string -> number\n  if (colorModel === \"rgb\") {\n    colorObject.setOptions({\n      type: \"color\",\n      model: RGBA,\n      prefix: `${RGBA}(`,\n      suffix: \")\",\n    });\n  }\n  switch (colorModel) {\n    case \"rgb\":\n    case RGBA:\n      for (let i = 0; i < 3; ++i) {\n        colorArray[i] = parseInt(colorArray[i], 10);\n      }\n      break;\n    case \"hsl\":\n    case \"hsla\":\n      for (let i = 1; i < 3; ++i) {\n        if (colorArray[i].indexOf(\"%\") !== -1) {\n          colorArray[i] = parseFloat(colorArray[i]) / 100;\n        }\n      }\n      // hsl, hsla to rgba\n      colorArray = hslToRGB(colorArray);\n      return arrayToColorObject(colorArray);\n    default:\n  }\n  return colorObject;\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(value: string) {\n  // [prefix, value, other]\n  const matches = (/([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g).exec(value);\n\n  if (!matches || matches.length < 4) {\n    return value;\n  }\n  const model = matches[1] || \"\";\n  const text = matches[2];\n  let prefix = `${model}(`;\n  let suffix = `)${matches[3]}`;\n  let separator = \",\";\n  let values;\n  // divide comma(,)\n  const obj = toPropertyObject(text);\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.getOption(\"separator\");\n    values = obj.value;\n    prefix += obj.getOption(\"prefix\");\n    suffix = obj.getOption(\"suffix\") + suffix;\n  } else {\n    values = [text];\n  }\n  const result = new PropertyObject(values, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n\n  if (COLOR_MODELS.indexOf(model) !== -1) {\n    return toColorObject(result);\n  } else {\n    return result;\n  }\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  let colorArray: number[];\n\n  if (value.charAt(0) === \"#\") {\n    if (value.length === 4) {\n      colorArray = hexToRGB(hex3to6(value));\n    } else {\n      colorArray = hexToRGB(value);\n    }\n    return arrayToColorObject(colorArray);\n  } else if (value.indexOf(\"(\") !== -1) {\n    // in bracket.\n    return stringToBracketObject(value);\n  } else {\n    throw new Error(`Invalid Format : Not a Color - ${value}`);\n  }\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: string | ObjectInterface<any> | any[]): any {\n  if (!isString(value)) {\n    if (Array.isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: ObjectInterface<any> = {}) {\n  const model = object.getOption(\"model\");\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => toObject(obj, result));\n  }\n  return result;\n}\n","import {TRANSFORM, FILTER, ObjectInterface, NameType, ANIMATION, timingFunction, ALIAS} from \"./consts\";\nimport {isObject, isString, isArray, isRole, getType} from \"./utils\";\nimport {toPropertyObject, splitStyle, toObject} from \"./utils/property\";\nimport PropertyObject from \"./PropertyObject\";\n\nfunction toInnerProperties(obj: ObjectInterface<string>) {\n  if (!obj) {\n    return \"\";\n  }\n  const arrObj = [];\n\n  for (const name in obj) {\n    arrObj.push(`${name}(${obj[name]})`);\n  }\n  return arrObj.join(\" \");\n}\nfunction isPropertyObject(value: any): value is PropertyObject {\n  return value instanceof PropertyObject;\n}\n/* eslint-disable */\nfunction clone(target: ObjectInterface<any>, toValue = false) {\n  return merge({}, target, toValue);\n}\nfunction merge(to: ObjectInterface<any>, from: ObjectInterface<any>, toValue = false) {\n  for (const name in from) {\n    const value = from[name];\n    const type = getType(value);\n\n    if (type === \"property\") {\n      to[name] = toValue ? value.toValue() : value.clone();\n    } else if (type === \"array\") {\n      to[name] = value.slice();\n    } else if (type === \"object\") {\n      if (isObject(to[name]) && !(to[name] instanceof PropertyObject)) {\n        merge(to[name], value, toValue);\n      } else {\n        to[name] = clone(value, toValue);\n      }\n    } else {\n      to[name] = from[name];\n    }\n  }\n  return to;\n}\n/* eslint-enable */\n/**\n* Animation's Frame\n* @class Scene.Frame\n* @param {Object} properties - properties\n* @example\nconst frame = new Scene.Frame({\n\tdisplay: \"none\"\n\ttransform: {\n\t\ttranslate: \"50px\",\n\t\tscale: \"5, 5\",\n\t}\n});\n */\nclass Frame {\n  public properties: ObjectInterface<any>;\n  constructor(properties: ObjectInterface<any> = {}) {\n    this.properties = {};\n    this.set(properties);\n  }\n  /**\n\t* get property value\n\t* @method Scene.Frame#get\n\t* @param {...Number|String|Scene.PropertyObject} args - property name or value\n\t* @example\n\tframe.get(\"display\") // => \"none\", \"block\", ....\n\tframe.get(\"transform\", \"translate\") // => \"10px,10px\"\n\t*/\n  public get(...args: NameType[]) {\n    const value = this.raw(...args);\n    const type = getType(value);\n\n    if (type === \"property\") {\n      return value.toValue();\n    } else if (type === \"object\") {\n      return clone(value, true);\n    } else {\n      return value;\n    }\n  }\n\n  public raw(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties)) {\n        return undefined;\n      }\n      properties = properties[params[i]];\n    }\n    return properties;\n  }\n  /**\n\t* remove property value\n\t* @method Scene.Frame#remove\n\t* @param {...String} args - property name\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.remove(\"display\")\n\t*/\n  public remove(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length - 1; ++i) {\n      if (!isObject(properties)) {\n        return this;\n      }\n      properties = properties[params[i]];\n    }\n    delete properties[params[length - 1]];\n    return this;\n  }\n  /**\n\t* set property\n\t* @method Scene.Frame#set\n\t* @param {...Number|String|Scene.PropertyObject} args - property names or values\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n// one parameter\nframe.set({\n\tdisplay: \"none\",\n\ttransform: {\n\t\ttranslate: \"10px, 10px\",\n\t\tscale: \"1\",\n\t},\n\tfilter: {\n\t\tbrightness: \"50%\",\n\t\tgrayscale: \"100%\"\n\t}\n});\n\n// two parameters\nframe.set(\"transform\", {\n\ttranslate: \"10px, 10px\",\n\tscale: \"1\",\n});\n\n// three parameters\nframe.set(\"transform\", \"translate\", \"50px\");\n\t*/\n  public set(...args: any[]) {\n    const length = args.length;\n    const params = args.slice(0, -1);\n    const value = args[length - 1];\n\n    if (params[0] in ALIAS) {\n      this._set(ALIAS[params[0]], value);\n    } else if (length === 2 && isArray(params[0])) {\n      this._set(params[0], value);\n    } else if (isObject(value)) {\n      if (isArray(value)) {\n        this._set(params, value);\n      } else if (isPropertyObject(value)) {\n        if (isRole(params)) {\n          this.set(...params, toObject(value));\n        } else {\n          this._set(params, value);\n        }\n      } else if (value instanceof Frame) {\n        this.merge(value);\n      } else {\n        for (const name in value) {\n          this.set(...params, name, value[name]);\n        }\n      }\n    } else if (isString(value)) {\n      if (isRole(params)) {\n        const obj = toPropertyObject(value);\n\n        if (isObject(obj)) {\n          this.set(...params, obj);\n        }\n        return this;\n      } else {\n        const styles = splitStyle(value);\n\n        styles.forEach(style => {\n          this.set(...params, style);\n        });\n        if (styles.length) {\n          return this;\n        }\n      }\n      this._set(params, value);\n    } else {\n      this._set(params, value);\n    }\n    return this;\n  }\n  /**\n\t* check that has property.\n\t* @method Scene.Frame#has\n\t* @param {...String} args - property name\n\t* @example\n\tframe.has(\"property\", \"display\") // => true or false\n\t*/\n  public has(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    if (!length) {\n      return false;\n    }\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties) || !(params[i] in properties)) {\n        return false;\n      }\n      properties = properties[params[i]];\n    }\n    return true;\n  }\n  /**\n\t* clone frame.\n\t* @method Scene.Frame#clone\n\t* @return {Scene.Frame} An instance of clone\n\t* @example\n\tframe.clone();\n\t*/\n  public clone() {\n    const frame = new Frame();\n\n    frame.merge(this);\n    return frame;\n  }\n  /**\n\t* merge one frame to other frame.\n\t* @method Scene.Frame#merge\n\t* @param {Scene.Frame} frame - target frame.\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.merge(frame2);\n\t*/\n  public merge(frame: Frame) {\n    const properties = this.properties;\n    const frameProperties = frame.properties;\n\n    if (!frameProperties) {\n      return this;\n    }\n    merge(properties, frameProperties);\n\n    return this;\n  }\n  public toObject() {\n    return clone(this.properties, true);\n  }\n  /**\n\t* Specifies an css object that coverted the frame.\n\t* @method Scene.Frame#toCSSObject\n\t* @return {object} cssObject\n\t*/\n  public toCSSObject() {\n    const properties = this.toObject();\n    const cssObject: ObjectInterface<string> = {};\n\n    for (const name in properties) {\n      if (isRole([name], true)) {\n        continue;\n      }\n      const value = properties[name];\n\n      if (name === timingFunction) {\n        cssObject[timingFunction.replace(\"animation\", ANIMATION)] =\n          (isString(value) ? value : value.easingName) || \"initial\";\n        continue;\n      }\n      cssObject[name] = value;\n    }\n    const transform = toInnerProperties(properties.transform);\n    const filter = toInnerProperties(properties.filter);\n\n    TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n    FILTER && filter && (cssObject[FILTER] = filter);\n    return cssObject;\n  }\n  /**\n\t* Specifies an css text that coverted the frame.\n\t* @method Scene.Frame#toCSS\n\t* @return {string} cssText\n\t*/\n  public toCSS() {\n    const cssObject = this.toCSSObject();\n    const cssArray = [];\n\n    for (const name in cssObject) {\n      cssArray.push(`${name}:${cssObject[name]};`);\n    }\n    return cssArray.join(\"\");\n  }\n  private _set(args: NameType[], value: any) {\n    let properties = this.properties;\n    const length = args.length;\n\n    for (let i = 0; i < length - 1; ++i) {\n      const name = args[i];\n\n      !(name in properties) && (properties[name] = {});\n      properties = properties[name];\n    }\n    if (!length) {\n      return;\n    }\n    properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n  }\n}\nexport default Frame;\n","import { ObjectInterface, RoleInterface } from \"./consts\";\nimport { isObject, isArray, isInProperties, toFixed } from \"./utils\";\nimport PropertyObject from \"./PropertyObject\";\nimport Frame from \"./Frame\";\n\nfunction getNames(names: ObjectInterface<any>, stack: string[]) {\n  let arr: string[][] = [];\n\n  for (const name in names) {\n    stack.push(name);\n\n    if (isObject(names[name])) {\n      arr = arr.concat(getNames(names[name], stack));\n    } else {\n      arr.push(stack.slice());\n    }\n    stack.pop();\n  }\n  return arr;\n}\nfunction updateFrame(names: ObjectInterface<any>, properties: ObjectInterface<any>) {\n  for (const name in properties) {\n    const value = properties[name];\n\n    if (!isObject(value) || isArray(value) || value instanceof PropertyObject) {\n      names[name] = true;\n      continue;\n    }\n    if (!isObject(names[name])) {\n      names[name] = {};\n    }\n    updateFrame(names[name], properties[name]);\n  }\n}\n/**\n* a list of objects in chronological order.\n* @memberof Scene\n*/\nclass Keyframes {\n  public times: number[];\n  public items: ObjectInterface<any>;\n  public names: RoleInterface;\n  /**\n\t */\n  constructor() {\n    this.times = [];\n    this.items = {};\n    this.names = {};\n  }\n  /**\n\t* A list of names\n\t* @return {string[][]} names\n\t* @example\nkeyframes.getNames(); // [[\"a\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n\t*/\n  public getNames() {\n    const names = this.names;\n\n    return getNames(names, []);\n  }\n  /**\n\t* Check if keyframes has propery's name\n\t* @param {...string[]} name - property's time\n\t* @return {Boolean} true: if has property, false: not\n\t* @example\nkeyframes.hasName(\"transform\", \"translate\"); // true or not\n\t*/\n  public hasName(...args: string[]) {\n    return isInProperties(this.names, args, true);\n  }\n  /**\n\t * update property names used in frames.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public update() {\n    const items = this.items;\n\n    for (const time in items) {\n      this.updateFrame(items[time]);\n    }\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} callback Function to execute for each element, taking three arguments\n\t * @param {Scene.Frame} [callback.item] The value of the item being processed in the keyframes.\n\t * @param {string} [callback.time] The time of the item being processed in the keyframes.\n\t * @param {object} [callback.items] The object that forEach() is being applied to.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public forEach(callback: (item: any, time: number, items: ObjectInterface<any>) => void) {\n    const times = this.times;\n    const items = this.items;\n\n    times.forEach(time => {\n      callback(items[time], time, items);\n    });\n  }\n  /**\n\t* update property names used in frame.\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.Keyframes} An instance itself\n\t* @example\nkeyframes.updateFrame(frame);\n\t*/\n  public updateFrame(frame: Frame) {\n    if (!frame) {\n      return this;\n    }\n    const properties = frame.properties;\n    const names = this.names;\n\n    updateFrame(names, properties);\n    return this;\n  }\n  /**\n\t * Get how long an animation should take to complete one cycle.\n\t * @return {number} duration\n\t */\n  public getDuration() {\n    const times = this.times;\n\n    return times.length === 0 ? 0 : times[times.length - 1];\n  }\n  /**\n\t * Set how long an animation should take to complete one cycle.\n\t * @param {number} duration - duration\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public setDuration(duration: number, originalDuration: number = this.getDuration()) {\n    const ratio = duration / originalDuration;\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(time => {\n      const time2 = toFixed(time * ratio);\n\n      obj[time2] = items[time];\n\n      return time2;\n    });\n    this.items = obj;\n  }\n  /**\n\t * Set how much time you want to push ahead.\n\t * @param {number} time - time\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public unshift(time: number) {\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(t => {\n      const time2 = toFixed(time + t);\n\n      obj[time2] = items[t];\n      return time2;\n    });\n    this.items = obj;\n    return this;\n  }\n  /**\n\t* get size of list\n\t* @return {Number} length of list\n\t*/\n  public size() {\n    return this.times.length;\n  }\n  /**\n\t* add object in list\n\t* @param {Number} time - frame's time\n\t* @param {Object} object - target\n\t* @return {Scene.Keyframes} An instance itself\n\t*/\n  public add(time: number, object: any) {\n    this.items[time] = object;\n    this.addTime(time);\n    return this;\n  }\n  /**\n\t* Check if keyframes has object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Boolean} true: if has time, false: not\n\t*/\n  public has(time: number) {\n    return time in this.items;\n  }\n  /**\n\t* get object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Object} object at that time\n\t*/\n  public get(time: number) {\n    return this.items[time];\n  }\n  /**\n\t* remove object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Keyframes} An instance itself\n\t*/\n  public remove(time: number) {\n    const items = this.items;\n\n    delete items[time];\n    this.removeTime(time);\n    return this;\n  }\n  private addTime(time: number) {\n    const times = this.times;\n    const length = times.length;\n    let pushIndex = length;\n\n    for (let i = 0; i < length; ++i) {\n      // if time is smaller than times[i], add time to index\n      if (time === times[i]) {\n        return this;\n      } else if (time < times[i]) {\n        pushIndex = i;\n        break;\n      }\n    }\n    this.times.splice(pushIndex, 0, time);\n    return this;\n  }\n  private removeTime(time: number) {\n    const index = this.times.indexOf(time);\n\n    if (index > -1) {\n      this.times.splice(index, 1);\n    }\n    return this;\n  }\n}\nexport default Keyframes;\n","/**\n* @namespace\n* @name Dot\n*/\n\nimport { isArray, splitUnit } from \"../utils\";\nimport PropertyObject from \"../PropertyObject\";\nimport { EasingType } from \"../Animator\";\nimport { getType } from \"../utils\";\n\n/**\n* The dot product of Arrays\n* @memberof Dot\n* @function dotArray\n* @param {Array} a1 value1\n* @param {Array} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {Array|Object} Array.\n* @example\ndotArray([0, 0, 0, 1],[50, 50, 50, 1],0.5, 0.5);\n// => [25, 25, 25, 1]\n*/\nexport function dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  }\n  if (!isArray(a2)) {\n    return a1;\n  }\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\n/**\n* The dot product of PropertyObject(type=color)\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Dot\n* @function dotColor\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} PropertyObject(type=color).\n* @example\nvar colorObject = ......; //PropertyObject(type=color, model=\"rgba\", value=[254, 254, 254, 1]);\ndotColor(\"#000\",  colorObject, 0.5, 0.5);\n// \"#000\" => PropertyObject(type=color, model=\"rgba\", value=[0, 0, 0, 1]);\n// return => PropertyObject(type=color, model=\"rgba\", value=[127, 127, 127, 1]);\n*/\nexport function dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  if (b2 === 0) {\n    return color2;\n  }\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.getOption(\"model\");\n  const model2 = color2.getOption(\"model\");\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n/**\n* The dot product of Objects\n* @memberof Dot\n* @function dotObject\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} Array with Separator.\n* @example\ndotObject(PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)]),\nPropertyObject([\"9px\", \"solid\", rgba(50, 50, 50, 1)]),\n0.5, 0.5);\n// => PropertyObject([\"5px\", \"solid\", rgba(25, 25, 25, 1)])\n*/\nexport function dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.getOption(\"type\");\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.getOption(\"separator\") || a2.getOption(\"separator\"),\n    prefix: a1.getOption(\"prefix\") || a2.getOption(\"prefix\"),\n    suffix: a1.getOption(\"suffix\") || a2.getOption(\"suffix\"),\n    model: a1.getOption(\"model\") || a2.getOption(\"model\"),\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n\n  if (type1 === type2) {\n    if (type1 === \"property\") {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === \"array\") {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  // split number and unit of the value.\n  const r1 = b1 / (b1 + b2);\n  const r2 = 1 - r1;\n\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = v1.value * r2 + v2.value * r1;\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import { ObjectInterface } from \"../consts\";\n\nexport function hasClass(element: HTMLElement, className: string) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n  return !!element.className.match(new RegExp(`(\\\\s|^)${className}(\\\\s|$)`));\n}\n\nexport function addClass(element: HTMLElement, className: string) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += ` ${className}`;\n  }\n}\n\nexport function removeClass(element: HTMLElement, className: string) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    const reg = new RegExp(`(\\\\s|^)${className}(\\\\s|$)`);\n\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n\nexport function fromCSS(elements: HTMLElement | HTMLElement[] | NodeListOf<HTMLElement>, properties: string[]) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n  let element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n  const cssObject: ObjectInterface<any> = {};\n  const styles = window.getComputedStyle(element) as any;\n  const length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n  return cssObject;\n}\n","import Animator, { StateInterface, EasingType, isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n  isUndefined,\n  isObject,\n  isArray,\n  decamelize,\n  toFixed,\n  isFixed,\n} from \"./utils\";\nimport Keyframes from \"./Keyframes\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n  KEYFRAMES, ANIMATION, START_ANIMATION,\n  PREFIX, THRESHOLD, ObjectInterface, NameType,\n  timingFunction, ALTERNATE, ALTERNATE_REVERSE, NORMAL, INFINITE,\n  REVERSE, EASING, RUNNING, PLAY, FILL_MODE, DIRECTION, ITERATION_COUNT, EASING_NAME, DELAY, PLAY_SPEED, DURATION\n} from \"./consts\";\nimport { addClass, removeClass, hasClass, fromCSS } from \"./utils/css\";\n\nfunction toId(text: string) {\n  return text.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nfunction makeId(selector?: boolean) {\n  for (; ;) {\n    const id = `${Math.floor(Math.random() * 100000)}`;\n\n    if (!selector) {\n      return id;\n    }\n    const checkElement = document.querySelector(`[data-scene-id=\"${id}\"]`);\n\n    if (!checkElement) {\n      return id;\n    }\n  }\n}\nfunction makeAnimationProperties(properties: ObjectInterface<string | number>) {\n  const cssArray = [];\n\n  for (const name in properties) {\n    cssArray.push(`${ANIMATION}-${decamelize(name)} : ${properties[name]};`);\n  }\n  return cssArray.join(\"\");\n}\n\ntype ElementsType = HTMLElement[] | NodeListOf<HTMLElement>;\n/**\n* manage Frame Keyframes and play keyframes.\n* @memberof Scene\n* @extends Scene.Animator\n* @example\nconst item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator {\n  public keyframes: Keyframes;\n  private elements: ElementsType;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst item = new Scene.SceneItem({\n\t\t0: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\t1: {\n\t\t\tdisplay: \"block\",\n\t\t\topacity: 0,\n\t\t},\n\t\t2: {\n\t\t\topacity: 1,\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.keyframes = new Keyframes();\n    this.elements = [];\n    this.load(properties, options);\n  }\n  public getDuration() {\n    return Math.max(this.state[DURATION], this.keyframes.getDuration());\n  }\n  public setDuration(duration: number) {\n    if (duration === 0) {\n      return this;\n    }\n    const originalDuration = this.getDuration();\n\n    if (originalDuration > 0) {\n      this.keyframes.setDuration(duration, originalDuration);\n    }\n    super.setDuration(toFixed(duration));\n    return this;\n  }\n  /**\n\t* set the unique indicator of the item.\n\t* @method Scene.SceneItem#setId\n\t* @param {String} [id] - the indicator of the item.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nconst item = new SceneItem();\n\nitem.setId(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public setId(id?: string) {\n    const elements = this.elements;\n    const length = elements.length;\n\n    this.setState({ id: id || makeId(!!length) });\n    const sceneId = toId(this.getId());\n\n    this.options.selector || (this.options.selector = `[data-scene-id=\"${sceneId}\"]`);\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      elements[i].setAttribute(\"data-scene-id\", sceneId);\n    }\n    return this;\n  }\n  /**\n\t* Specifies the unique indicator of the item.\n\t* @method Scene.SceneItem#getId\n\t* @return {String} the indicator of the item.\n\t* @example\nconst item = scene.newItem(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public getId() {\n    return this.state.id;\n  }\n  /**\n\t* Set properties to the sceneItem at that time\n\t* @method Scene.SceneItem#set\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\nconsole.log(item.get(0, \"a\")); // \"b\"\n\t*/\n  public set(time: any[] | number | string | ObjectInterface<any>, ...args: any[]) {\n    if (isObject(time)) {\n      this.load(time);\n      return this;\n    } else if (args[0]) {\n      if (args[0] instanceof SceneItem) {\n        const item: SceneItem = args[0];\n        const delay = item.getDelay();\n        const realTime = this.getUnitTime(time) + delay;\n        const { keys, values, frames } = item.getAllTimes(!!delay || !this.hasFrame(time));\n        const easing = this.getEasingName() !== item.getEasingName() ? item.getEasing() : 0;\n\n        keys.forEach(t => {\n          this.set(realTime + t, frames[values[t]]);\n        });\n        if (easing) {\n          this.set(realTime + keys[0], EASING, easing);\n          this.set(realTime + keys[keys.length - 1], EASING, \"initial\");\n        }\n        return this;\n      } else if (args.length === 1 && isArray(args[0])) {\n        args[0].forEach((item: any) => {\n          this.set(time, item);\n        });\n        return this;\n      }\n    }\n    const frame = this.newFrame(time);\n\n    frame.set(...args);\n    this.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Get properties of the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} args property's name or properties\n\t* @return {Number|String|Scene.PropertyObejct} property value\n\t* @example\nitem.get(0, \"a\"); // item.getFrame(0).get(\"a\");\nitem.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n\t*/\n  public get(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    return frame && frame.get(...args);\n  }\n  /**\n\t* remove properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.remove(0, \"a\");\n\t*/\n  public remove(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    frame && frame.remove(...args);\n    this.update();\n    return this;\n  }\n  /**\n\t* Append the item or object at the last time.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.append(new SceneItem({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n}));\nitem.append({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\nitem.set(item.getDuration(), {\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\n\t*/\n  public append(item: SceneItem | object) {\n    this.set(this.getDuration(), item);\n    return this;\n  }\n  /**\n\t* Push the front frames for the time and prepend the scene item or item object.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t*/\n  public prepend(item: SceneItem | object) {\n    if (item instanceof SceneItem) {\n      const delay = item.getDelay();\n      const duration = item.getIterationCount() === INFINITE ? item.getDuration() : item.getActiveDuration();\n      const unshiftTime = duration + delay;\n      const firstFrame = this.keyframes.get(0);\n\n      if (firstFrame) {\n        this.keyframes.remove(0);\n      }\n      this.keyframes.unshift(unshiftTime);\n      this.set(0, item);\n      this.set(unshiftTime + THRESHOLD, firstFrame);\n    } else {\n      this.prepend(new SceneItem(item));\n    }\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize items' keyframes.\n\t* @method Scene.SceneItem#setSelector\n\t* @param {string} selectors - Selectors to find elements in items.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setSelector(\"#id.class\");\n\t*/\n  public setSelector(selector: boolean | string) {\n    this.options.selector = selector === true ? this.state.id :\n      (selector || `[data-scene-id=\"${this.state.id}\"]`);\n    this.setElement(document.querySelectorAll(this.options.selector));\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize item's keyframes.\n\t* @method Scene.SceneItem#setElement\n\t* @param {Element|Array|string} elements - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n\t*/\n  public setElement(elements: HTMLElement | ElementsType) {\n    if (!elements) {\n      return this;\n    }\n    this.elements = (elements instanceof Element) ? [elements] : elements;\n    this.setId();\n    return this;\n  }\n  /**\n\t* add css styles of items's element to the frame at that time.\n\t* @method Scene.SceneItem#setCSS\n\t* @param {Array} properties - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public setCSS(time: number, properties: string[]) {\n    this.set(time, fromCSS(this.elements, properties));\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t* update property names used in frames.\n\t* @method Scene.SceneItem#update\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.update();\n\t*/\n  public update() {\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* update property names used in frame.\n\t* @method Scene.SceneItem#updateFrame\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.updateFrame(time, this.get(time));\n\t*/\n  public updateFrame(frame: Frame) {\n    this.keyframes.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Create and add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#newFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} Created frame.\n\t* @example\nitem.newFrame(time);\n\t*/\n  public newFrame(time: string | number) {\n    let frame = this.getFrame(time);\n\n    if (frame) {\n      return frame;\n    }\n    frame = new Frame();\n    this.setFrame(time, frame);\n    return frame;\n  }\n  /**\n\t* Add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#setFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setFrame(time, frame);\n\t*/\n  public setFrame(time: string | number, frame: Frame) {\n    this.keyframes.add(this.getUnitTime(time), frame);\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* get sceneItem's frame at that time\n\t* @method Scene.SceneItem#getFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} sceneItem's frame at that time\n\t* @example\nconst frame = item.getFrame(time);\n\t*/\n  public getFrame(time: number | string) {\n    return this.keyframes.get(this.getUnitTime(time));\n  }\n  /**\n\t* check if the item has a frame at that time\n\t* @method Scene.SceneItem#hasFrame\n\t* @param {Number} time - frame's time\n\t* @return {Boolean} true: the item has a frame // false: not\n\t* @example\nif (item.hasFrame(10)) {\n\t// has\n} else {\n\t// not\n}\n\t*/\n  public hasFrame(time: number | string) {\n    return this.keyframes.has(this.getUnitTime(time));\n  }\n  /**\n\t* remove sceneItem's frame at that time\n\t* @method Scene.SceneItem#removeFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.removeFrame(time);\n\t*/\n  public removeFrame(time: number) {\n    const keyframes = this.keyframes;\n\n    keyframes.remove(time);\n    keyframes.update();\n\n    return this;\n  }\n  /**\n\t* Copy frame of the previous time at the next time.\n\t* @method Scene.SceneItem#copyFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(0) equal getFrame(1)\nitem.copyFrame(0, 1);\n\t*/\n  public copyFrame(fromTime: ObjectInterface<number> | number | string, toTime: number) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.copyFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const copyFrame = frame.clone();\n\n    this.setFrame(toTime, copyFrame);\n    return this;\n  }\n  /**\n\t* merge frame of the previous time at the next time.\n\t* @method Scene.SceneItem#mergeFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number|string} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(1) contains getFrame(0)\nitem.merge(0, 1);\n\t*/\n  public mergeFrame(fromTime: ObjectInterface<number> | number | string, toTime: number | string) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.mergeFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const toFrame = this.newFrame(toTime);\n\n    toFrame.merge(frame);\n    return this;\n  }\n  /**\n\t* Get frame of the current time\n\t* @method Scene.SceneItem#getNowFrame\n\t* @param {Number} time - the current time\n\t* @param {function} easing - the speed curve of an animation\n\t* @return {Scene.Frame} frame of the current time\n\t* @example\nlet item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n// opacity: 0.7; display:\"block\";\nconst frame = item.getNowFrame(1.7);\n\t*/\n  public getNowFrame(time: number, easing?: EasingType) {\n    const frame = new Frame();\n    const names = this.keyframes.getNames();\n    const { left, right } = this._getNearTimeIndex(time);\n    const realEasing = this._getEasing(time, left, right, this.getEasing() || easing);\n\n    names.forEach(properties => {\n      const value = this._getNowValue(time, left, right, properties, realEasing);\n\n      if (isUndefined(value)) {\n        return;\n      }\n      frame.set(properties, value);\n    });\n    return frame;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (isArray(properties)) {\n      const length = properties.length;\n\n      for (let i = 0; i < length; ++i) {\n        const time = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n        this.set(time, properties[i]);\n      }\n    } else if (properties.keyframes) {\n      this.set(properties.keyframes);\n    } else {\n      for (const time in properties) {\n        if (time === \"options\" || time === \"keyframes\") {\n          continue;\n        }\n        const value = properties[time];\n        const realTime = this.getUnitTime(time);\n\n        if (typeof value === \"number\") {\n          this.mergeFrame(value, realTime);\n          continue;\n        }\n        this.set(realTime, value);\n      }\n    }\n    options && this.setOptions(options);\n    return this;\n  }\n  /**\n\t * clone SceneItem.\n\t * @method Scene.SceneItem#clone\n\t * @param {AnimatorOptions} [options] animator options\n\t * @return {Scene.SceneItem} An instance of clone\n\t * @example\n\t * item.clone();\n\t */\n  public clone(options = {}) {\n    const item = new SceneItem();\n\n    item.setOptions(this.state);\n    item.setOptions(options);\n    this.keyframes.forEach((frame: Frame, time: number) => item.setFrame(time, frame.clone()));\n    return item;\n  }\n  public setOptions(options: StateInterface = {}) {\n    super.setOptions(options);\n    const { id, selector, duration, elements } = options;\n\n    duration && this.setDuration(duration);\n    id && this.setId(id);\n    if (elements) {\n      this.setElement(elements);\n    } else if (selector) {\n      this.setSelector(selector === true ? this.state.id : selector);\n    }\n    return this;\n  }\n  public getAllTimes(isStartZero = true, options: StateInterface = {}) {\n    const times = this.keyframes.times.slice();\n    let length = times.length;\n    const keys: number[] = [];\n    const values: ObjectInterface<number> = {};\n\n    if (!length) {\n      return { keys: [], values: {}, frames: {} };\n    }\n    const frames: ObjectInterface<Frame> = {};\n    const duration = this.getDuration();\n    const direction = options[DIRECTION] || this.state[DIRECTION];\n    const isShuffle = direction === ALTERNATE || direction === ALTERNATE_REVERSE;\n    (!this.getFrame(0)) && times.unshift(0);\n    (!this.getFrame(duration)) && times.push(duration);\n    length = times.length;\n    let iterationCount = options[ITERATION_COUNT] || this.state[ITERATION_COUNT];\n\n    iterationCount = iterationCount !== INFINITE ? iterationCount : 1;\n    const totalDuration = iterationCount * duration;\n\n    for (let i = 0; i < iterationCount; ++i) {\n      const isReverse = isDirectionReverse(i, direction);\n      const start = i * duration;\n\n      for (let j = 0; j < length; ++j) {\n        if (isShuffle && i !== 0 && j === 0) {\n          // pass duplicate\n          continue;\n        }\n        // isStartZero is keytimes[0] is 0 (i === 0 & j === 0)\n        const threshold = j === 0 && (i === 0 ? !isStartZero : !isShuffle) ? THRESHOLD : 0;\n        const keyvalue = toFixed(isReverse ? times[length - 1 - j] : times[j]);\n        const time = toFixed(isReverse ? duration - keyvalue : keyvalue);\n        const keytime = toFixed(start + time + threshold);\n\n        if (totalDuration < keytime) {\n          break;\n        }\n        keys.push(keytime);\n        values[keytime] = keyvalue;\n\n        if (!frames[keyvalue]) {\n          const frame = this.getFrame(keyvalue);\n\n          if (!frame) {\n            frames[keyvalue] = this.getNowFrame(keyvalue);\n            continue;\n          }\n          if (j === 0 || j === length - 1 || frame.has(\"transform\") || frame.has(\"filter\")) {\n            frames[keyvalue] = this.getNowFrame(keyvalue);\n          } else {\n            frames[keyvalue] = frame;\n          }\n        }\n      }\n    }\n    if (keys[keys.length - 1] < totalDuration) {\n      // last time === totalDuration\n      const isReverse = isDirectionReverse(iterationCount, direction);\n      const keyvalue = toFixed(duration * (isReverse ? 1 - iterationCount % 1 : iterationCount % 1));\n\n      keys.push(totalDuration);\n      values[totalDuration] = keyvalue;\n      !frames[keyvalue] && (frames[keyvalue] = this.getNowFrame(keyvalue));\n    }\n    return { keys, values, frames };\n  }\n  /**\n\t* Specifies an css text that coverted the keyframes of the item.\n\t* @param {Array} [duration=this.getDuration()] - elements to synchronize item's keyframes.\n\t* @param {Array} [options={}] - parent options to unify options of items.\n\t* @example\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public toCSS(duration = this.getDuration(), options: StateInterface = {}) {\n    const state = this.state;\n    const selector = state.selector || this.options.selector;\n\n    if (!selector) {\n      return \"\";\n    }\n    const id = this._getId();\n    // infinity or zero\n    const isParent = typeof options[ITERATION_COUNT] === \"undefined\";\n    const isZeroDuration = duration === 0;\n    const playSpeed = (options[PLAY_SPEED] || 1);\n    const delay = ((isParent ? state[DELAY] : options[DELAY]) || 0) / playSpeed;\n    const easingName = (!isZeroDuration && options[EASING] && options[EASING_NAME]) || state[EASING_NAME];\n    const iterationCount = (!isZeroDuration && options[ITERATION_COUNT]) || state[ITERATION_COUNT];\n    const fillMode = (options[FILL_MODE] !== \"forwards\" && options[FILL_MODE]) || state[FILL_MODE];\n    const direction = (options[DIRECTION] !== NORMAL && options[DIRECTION]) || state[DIRECTION];\n    const cssText = makeAnimationProperties({\n      fillMode,\n      direction,\n      iterationCount,\n      delay: `${delay}s`,\n      name: `${PREFIX}KEYFRAMES_${toId(id)}`,\n      duration: `${duration / playSpeed}s`,\n      timingFunction: easingName,\n    });\n\n    const css = `${selector}.${START_ANIMATION} {\n\t\t\t${cssText}\n\t\t}\n\t\t${this._toKeyframes(duration, isParent)}`;\n\n    return css;\n  }\n  public exportCSS(duration = this.getDuration(), options: StateInterface = {}) {\n    if (!this.elements.length) {\n      return;\n    }\n    const id = this._getId();\n    const styleElement: HTMLElement = document.querySelector(`#${PREFIX}${id}`);\n    const css = this.toCSS(duration, options);\n\n    if (styleElement) {\n      styleElement.innerText = css;\n    } else {\n      document.body.insertAdjacentHTML(\"beforeend\",\n        `<style id=\"${PREFIX}STYLE_${id}\">${css}</style>`);\n    }\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nitem.playCSS();\nitem.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(exportCSS = true, properties = {}) {\n    if (!ANIMATION || this.getPlayState() === RUNNING) {\n      return this;\n    }\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    if (this.isEnded()) {\n      this.setTime(0);\n    }\n    exportCSS && this.exportCSS();\n\n    const cssText = makeAnimationProperties(properties);\n\n    for (let i = 0; i < length; ++i) {\n      const element = elements[i];\n\n      element.style.cssText += cssText;\n      if (hasClass(element, START_ANIMATION)) {\n        removeClass(element, START_ANIMATION);\n        (el => {\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              addClass(el, START_ANIMATION);\n            });\n          });\n        })(element);\n      } else {\n        addClass(element, START_ANIMATION);\n      }\n    }\n\n    this.setState({ playCSS: true });\n    this.setPlayState(RUNNING);\n    this.trigger(PLAY);\n\n    const duration = this.getDuration();\n    const animatedElement = elements[0];\n    const animationend = () => {\n      this.end();\n\n      if (!animatedElement) {\n        return;\n      }\n      animatedElement.removeEventListener(\"animationend\", animationend);\n      animatedElement.removeEventListener(\"animationiteration\", animationiteration);\n    };\n    const animationiteration = ({ elapsedTime }: any) => {\n      const currentTime = elapsedTime;\n      const iterationCount = currentTime / duration;\n\n      this.state.currentTime = currentTime;\n      this.setCurrentIterationCount(iterationCount);\n    };\n    animatedElement.addEventListener(\"animationend\", animationend);\n    animatedElement.addEventListener(\"animationiteration\", animationiteration);\n    return this;\n  }\n  private _getId() {\n    return this.state.id || this.setId().getId();\n  }\n  private _getEasing(time: number, left: number, right: number, easing: EasingType) {\n    if (this.keyframes.hasName(timingFunction)) {\n      const nowEasing = this._getNowValue(time, left, right, [timingFunction], 0, true);\n\n      return typeof nowEasing === \"function\" ? nowEasing : easing;\n    }\n    return easing;\n  }\n  private _toKeyframes(duration = this.getDuration(), isParent: boolean) {\n    const id = this._getId();\n    const state = this.state;\n    const playSpeed = state[PLAY_SPEED];\n    const iterationCount = state[ITERATION_COUNT];\n    const delay = isParent ? state[DELAY] : 0;\n    const direction = isParent ? state[DIRECTION] : NORMAL;\n    const { keys, values, frames } = this.getAllTimes(true, {\n      duration,\n      delay,\n      direction,\n      iterationCount: isParent && iterationCount !== INFINITE ? iterationCount : 1,\n      isCSS: true,\n    });\n    const length = keys.length;\n    const css: ObjectInterface<string> = {};\n    const keyframes: string[] = [];\n\n    for (const time in frames) {\n      css[time] = frames[time].toCSS();\n    }\n    if (!keys.length) {\n      return \"\";\n    }\n    if (delay) {\n      keyframes.push(`0%{${frames[0]}}`);\n      if (direction === REVERSE || direction === ALTERNATE_REVERSE) {\n        keyframes.push(`${delay / playSpeed / duration * 100 - 0.00001}%{${css[0]}}`);\n      }\n    }\n    keys.forEach(time => {\n      keyframes.push(`${(delay + time) / playSpeed / duration * 100}%{${css[values[time]]}}`);\n    });\n    const lastTime = keys[length - 1];\n\n    if ((delay + lastTime) / playSpeed < duration) {\n      // not 100%\n      keyframes.push(`100%{${css[values[lastTime]]}`);\n    }\n    return `@${KEYFRAMES} ${PREFIX}KEYFRAMES_${toId(id)}{\n\t\t\t${keyframes.join(\"\\n\")}\n\t\t}`;\n  }\n  private _getNowValue(\n    time: number,\n    left: number,\n    right: number,\n    properties: string[],\n    easing: EasingType = this.getEasing(),\n    usePrevValue: boolean = isFixed(properties),\n  ) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    let prevTime;\n    let nextTime;\n    let prevFrame;\n    let nextFrame;\n\n    for (let i = left; i >= 0; --i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        prevTime = times[i];\n        prevFrame = frame;\n        break;\n      }\n    }\n    const prevValue = prevFrame && prevFrame.raw(...properties);\n\n    if (usePrevValue) {\n      return prevValue;\n    }\n    for (let i = right; i < length; ++i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        nextTime = times[i];\n        nextFrame = frame;\n        break;\n      }\n    }\n    const nextValue = nextFrame && nextFrame.raw(...properties);\n\n    if (!prevFrame || isUndefined(prevValue)) {\n      return nextValue;\n    }\n    if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n      return prevValue;\n    }\n    if (prevTime < 0) {\n      prevTime = 0;\n    }\n    return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n  }\n  private _getNearTimeIndex(time: number) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (times[i] === time) {\n        return { left: i, right: i };\n      } else if (times[i] > time) {\n        return { left: i === 0 ? 0 : i - 1, right: i };\n      }\n    }\n    return { left: length - 1, right: length - 1 };\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const easing = this.getEasing() || parentEasing;\n    const frame = this.getNowFrame(iterationTime, easing);\n    const currentTime = this.getTime();\n\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @event Scene.SceneItem#animate\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Scene.Frame} param.frame frame of that time.\n\t\t */\n    this.trigger(\"animate\", {\n      frame,\n      currentTime,\n      time: iterationTime,\n    });\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return frame;\n    }\n    const attributes = frame.get(\"attribute\");\n\n    if (attributes) {\n      for (const name in (attributes as any)) {\n        for (let i = 0; i < length; ++i) {\n          elements[i].setAttribute(name, attributes[name]);\n        }\n      }\n    }\n    const cssText = frame.toCSS();\n\n    if (this.state.cssText !== cssText) {\n      this.state.cssText = cssText;\n\n      for (let i = 0; i < length; ++i) {\n        elements[i].style.cssText += cssText;\n      }\n      return frame;\n    }\n  }\n}\n\nexport default SceneItem;\n","import Animator, { StateInterface, EasingType } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ANIMATION, ObjectInterface, RUNNING, ENDED, PLAY, ITERATION, ANIMATE } from \"./consts\";\nimport { has } from \"./utils\";\nimport Frame from \"./Frame\";\n\n/**\n* manage sceneItems and play Scene.\n* @extends Scene.Animator\n*/\nclass Scene extends Animator {\n\n  public items: ObjectInterface<Scene | SceneItem>;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst scene = new Scene({\n\t\titem1: {\n\t\t\t0: {\n\t\t\t\tdisplay: \"none\",\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tdisplay: \"block\",\n\t\t\t\topacity: 0,\n\t\t\t},\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t},\n\t\titem2: {\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.items = {};\n    this.load(properties, options);\n  }\n  public setId(id: string = `scene${Math.floor(Math.random() * 100000)}`) {\n    this.state.id = id;\n    return this;\n  }\n  public getId() {\n    return this.state.id;\n  }\n  public getDuration() {\n    const items = this.items;\n    let time = 0;\n\n    for (const id in items) {\n      const item = items[id];\n\n      time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n    }\n    return time;\n  }\n  public setDuration(duration: number) {\n    const items = this.items;\n    const sceneDuration = this.getDuration();\n\n    if (duration === 0 || !isFinite(sceneDuration)) {\n      return this;\n    }\n    if (sceneDuration === 0) {\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDuration(duration);\n      }\n    } else {\n      const ratio = duration / sceneDuration;\n\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDelay(item.getDelay() * ratio);\n        item.setDuration(item.getDuration() * ratio);\n      }\n    }\n    return this;\n  }\n  /**\n\t* get item in scene by name\n\t* @method Scene#getItem\n\t* @param {string} name - item's name\n\t* @return {Scene.SceneItem} item\n\t* @example\nconst item = scene.getItem(\"item1\")\n\t*/\n  public getItem(name: string) {\n    return this.items[name];\n  }\n  /**\n\t* create item in scene\n\t* @method Scene#newItem\n\t* @param {String} name - name of item to create\n\t* @param {StateOptions} options - The option object of SceneItem\n\t* @return {Sceme.SceneItem} Newly created item\n\t* @example\nconst item = scene.newItem(\"item1\")\n\t*/\n  public newItem(name: string, options = {}) {\n    if (has(this.items, name)) {\n      return this.items[name];\n    }\n    const item = new SceneItem();\n\n    this.setItem(name, item);\n    item.setOptions(options);\n\n    return item;\n  }\n  /**\n\t* add a sceneItem to the scene\n\t* @param {String} name - name of item to create\n\t* @param {Scene.SceneItem} item - sceneItem\n\t* @example\nconst item = scene.newItem(\"item1\")\n\t*/\n  public setItem(name: string, item?: Scene | SceneItem) {\n    if (item instanceof Animator) {\n      item.setId(name);\n    }\n    this.items[name] = item;\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} func Function to execute for each element, taking three arguments\n\t * @param {Scene | Scene.SceneItem} [func.item] The value of the item being processed in the scene.\n\t * @param {string} [func.name] The name of the item being processed in the scene.\n\t * @param {object} [func.items] The object that forEach() is being applied to.\n\t * @return {Scene} An instance itself\n\t */\n  public forEach(func: (item?: Scene | SceneItem, name?: string, items?: ObjectInterface<Scene | SceneItem>) => void) {\n    const items = this.items;\n\n    for (const name in items) {\n      func(items[name], name, items);\n    }\n    return this;\n  }\n  /**\n\t * Export the CSS of the items to the style.\n\t * @return {Scene} An instance itself\n\t */\n  public exportCSS(duration: number = this.getDuration(), state?: StateInterface) {\n    const items = this.items;\n    let totalDuration = duration;\n\n    if (!totalDuration || !isFinite(totalDuration)) {\n      totalDuration = 0;\n    }\n    for (const id in items) {\n      const item = items[id];\n\n      item.exportCSS(totalDuration, this.state);\n    }\n    return this;\n  }\n  public append(item: SceneItem | Scene) {\n    item.setDelay(item.getDelay() + this.getDuration());\n    this.setItem(item.getId() || item.setId().getId(), item);\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @return {Scene} An instance itself\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nscene.playCSS();\nscene.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(exportCSS = true, properties = {}) {\n    if (!ANIMATION || this.getPlayState() === RUNNING) {\n      return this;\n    }\n    exportCSS && this.exportCSS();\n\n    const items = this.items;\n    let animationItem: Scene | SceneItem;\n\n    for (const id in items) {\n      const item = items[id];\n\n      item.playCSS(false, properties);\n      if (item.getState(\"playCSS\")) {\n        animationItem = item;\n      }\n    }\n    if (!animationItem) {\n      return this;\n    }\n    const animationiteration = ({ currentTime, iterationCount }: { currentTime: number, iterationCount: number }) => {\n      this.state.currentTime = currentTime;\n      this.setCurrentIterationCount(iterationCount);\n    };\n    const animationend = () => {\n      this.end();\n      this.setState({ playCSS: false });\n      animationItem.off(ENDED, animationend);\n      animationItem.off(ITERATION, animationiteration);\n    };\n    animationItem.on(ENDED, animationend);\n    animationItem.on(ITERATION, animationiteration);\n    this.setState({ playCSS: true });\n    this.setPlayState(RUNNING);\n    this.trigger(PLAY);\n    return this;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (!properties) {\n      return this;\n    }\n    const isSelector = options && options.selector;\n\n    for (const name in properties) {\n      if (name === \"options\") {\n        continue;\n      }\n      const object = properties[name];\n      let item;\n\n      if (object instanceof Scene || object instanceof SceneItem) {\n        this.setItem(name, object);\n        item = object;\n      } else {\n        item = this.newItem(name);\n        item.load(object);\n      }\n      isSelector && item.setSelector(name);\n    }\n    this.setOptions(options);\n  }\n  public setSelector(_: string | boolean) {\n    const isSelector = this.options.selector;\n\n    this.forEach((item, name) => {\n      item.setSelector(isSelector ? name : false);\n    });\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const items = this.items;\n    const easing = this.getEasing() || parentEasing;\n    const frames: ObjectInterface<ObjectInterface<any> | Frame> = {};\n\n    for (const id in items) {\n      const item = items[id];\n\n      frames[id] = item.animate(Math.max(iterationTime * item.getPlaySpeed() - item.getDelay(), 0), easing);\n    }\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Frame} param.frames frame of that time.\n\t\t */\n    this.trigger(ANIMATE, {\n      currentTime: this.getTime(),\n      time: iterationTime,\n      frames,\n    });\n    return frames;\n  }\n}\n\nexport default Scene;\n","\nimport { StateInterface } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface } from \"./consts\";\n\n/**\n * @namespace presets\n */\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func set\n * @param {string | string[]} property - property to set effect\n * @param {any[]} values - values of 100%\n * @param {AnimatorOptions} [options]\n * @example\n// import {set, blink} from \"scenejs\";\n// set(\"opacity\", [0, 1, 0], {duration: 2});\nScene.set(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\nScene.blink({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function set(property: string | string[], values: any[], options: StateInterface) {\n  const item = new SceneItem({}, options);\n  const length = values.length;\n\n  for (let i = 0; i < length; ++i) {\n    item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n  }\n  return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof presets\n * @func zoomIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {set, zoomIn} from \"scenejs\";\n// zoomIn({duration: 2});\nScene.zoomIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof presets\n * @func zoomOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {zoomOut} from \"scenejs\";\n// zoomOut({duration: 2});\nScene.zoomOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof presets\n * @func wipeIn\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeIn} from \"scenejs\";\n// wipeIn({property: \"left\", duration: 2});\nScene.wipeIn({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof presets\n * @func wipeOut\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeOut} from \"scenejs\";\n// wipeOut({property: \"left\", duration: 2});\nScene.wipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func transition\n * @param {Scene.SceneItem} item1 - Item that end effect\n * @param {Scene.SceneItem} item2 - Item that start effect\n * @param {AnimatorOptions} options\n * @param {object} options.from The starting properties of item1 and end properties of item2\n * @param {object} options.to The starting properties of item2 and end properties of item1\n * @param {number} options.duration animation's duration\n * @param {number} [options.time] start time of item1 <br/> <strong>default: item1.getDuration() - duration</strong>\n * @example\n// import {transition} from \"scenejs\";\ntransition(item1, item2, {\n\tfrom: {\n\t\topacity: 1,\n\t},\n\tto: {\n\t\topacity: 0,\n\t},\n\tduration: 0.1,\n});\n\n// Same\nitem1.set({\n\t[item1.getDuration() - 0.1]: {\n\t\topacity: 1,\n\t},\n\t[item1.getDuration()]: {\n\t\topacity: 0,\n\t}\n});\nitem2.set({\n\t0: {\n\t\topacity: 0,\n\t},\n\t0.1: {\n\t\topacity: 1,\n\t}\n});\n */\nexport function transition(item1: SceneItem, item2: SceneItem, {\n  from,\n  to,\n  duration = item1.getDuration(),\n  time = Math.max(item1.getDuration() - duration, 0),\n}: { from: ObjectInterface<any>, to: ObjectInterface<any>, duration?: number, time: number }) {\n  item1.set({\n    [time]: from,\n    [time + duration]: to,\n  });\n  item2.set({\n    0: to,\n    [duration]: from,\n  });\n}\n\n/**\n * Make a fade in effect.\n * @memberof presets\n * @func fadeIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeIn} from \"scenejs\";\n// fadeIn({duration: 2});\nScene.fadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof presets\n * @func fadeOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeOut} from \"scenejs\";\n// fadeOut({duration: 2});\nScene.fadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof presets\n * @func blink\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {blink} from \"scenejs\";\n// blink({duration: 2});\nScene.blink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to, from], arguments[0]);\n}\n","import Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport Frame from \"./Frame\";\nimport Keyframes from \"./Keyframes\";\nimport PropertyObject from \"./PropertyObject\";\nimport Animator from \"./Animator\";\nimport * as _presets from \"./presets\";\n\n/**\n* version info\n* @name Scene.VERSION\n* @memberof Scene\n* @static\n* @type {string}\n* @example\n* Scene.VERSION // #__VERSION__#\n*/\nexport const VERSION = \"#__VERSION__#\";\nexport { SceneItem, Frame, Animator, Keyframes, PropertyObject };\nexport { bezier, EASE_IN_OUT, EASE_IN, EASE_OUT, EASE, LINEAR, steps, STEP_START, STEP_END } from \"./easing\";\nexport { set, transition, wipeIn, wipeOut, fadeIn, fadeOut, blink, zoomIn, zoomOut} from \"./presets\";\nexport { OPTIONS, EVENTS } from \"./consts\";\nexport { setRole, setAlias } from \"./utils\";\nexport { Scene as default };\n"],"names":["tslib_1.__extends"],"mappings":"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"}