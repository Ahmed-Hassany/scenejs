{"version":3,"file":"scene.common.js","sources":["../src/consts.ts","../src/EventTrigger.ts","../src/easing.ts","../src/PropertyObject.ts","../src/utils.ts","../src/Animator.ts","../src/utils/property.ts","../src/Frame.ts","../src/utils/dot.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts"],"sourcesContent":["import { IObject } from \"@daybrush/utils\";\nimport { RoleObject, OptionType, EventType } from \"./types\";\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const DATA_SCENE_ID = \"data-scene-id\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleObject = { transform: {}, filter: {}, attribute: {} };\nexport const ALIAS: IObject<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { [TIMING_FUNCTION]: true, contents: true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const PLAY_CSS = \"playCSS\";\nexport const PREV_TIME = \"prevTime\";\nexport const TICK_TIME = \"tickTime\";\nexport const CURRENT_TIME = \"currentTime\";\nexport const SELECTOR = \"selector\";\nexport const TRANSFORM_NAME = \"transform\";\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {$ts:OptionType}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {$ts:EventType}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n","import { isObject, isArray } from \"@daybrush/utils\";\nimport { CallbackType, EventParameter } from \"./types\";\n\n/**\n* attach and trigger event handlers.\n*/\nclass EventTrigger {\n  public events: { [name: string]: CallbackType[] };\n  /**\n\t* @example\nconst et = new Scene.EventTrigger();\nconst scene = new Scene();\n\nscene.on(\"call\", e => {\n\tconsole.log(e.param);\n});\net.on(\"call\", e => {\n\tconsole.log(e.param);\n});\nscene.trigger(\"call\", {param: 1});\net.trigger(\"call\", {param: 1});\n\t */\n  constructor() {\n    this.events = {};\n  }\n  public _on(name: string | EventParameter, callback?: CallbackType | CallbackType[], once?: boolean) {\n    const events = this.events;\n\n    if (isObject(name)) {\n      for (const n in name) {\n        this._on(n, name[n], once);\n      }\n      return;\n    }\n    if (!(name in events)) {\n      events[name] = [];\n    }\n    if (!callback) {\n      return;\n    }\n    if (isArray(callback)) {\n      callback.forEach(func => this._on(name, func, once));\n      return;\n    }\n    const event = events[name];\n    event.push(once ? function callback2(...args) {\n      callback(...args);\n      this.off(name, callback2);\n    } : callback);\n  }\n  /**\n\t* Attach an event handler function for one or more events to target\n\t* @param - event's name\n\t* @param - function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function() {\n\tconsole.log(\"animate\");\n});\n\ntarget.trigger(\"animate\");\n\n  */\n  public on(name: string | EventParameter, callback?: CallbackType | CallbackType[]) {\n    this._on(name, callback);\n    return this;\n  }\n  /**\n\t* Dettach an event handler function for one or more events to target\n\t* @param - event's name\n\t* @param -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\nconst callback = function() {\n\tconsole.log(\"animate\");\n};\ntarget.on(\"animate\", callback);\n\ntarget.off(\"animate\", callback);\ntarget.off(\"animate\");\n\n\t*/\n  public off(name?: string, callback?: CallbackType) {\n    if (!name) {\n      this.events = {};\n    } else if (!callback) {\n      this.events[name] = [];\n    } else {\n      const callbacks = this.events[name];\n\n      if (!callbacks) {\n        return this;\n      }\n      const index = callbacks.indexOf(callback);\n\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n  /**\n\t* execute event handler\n\t* @param - event's name\n\t* @param - event handler's additional parameter\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function(a1, a2) {\n\tconsole.log(\"animate\", a1, a2);\n});\n\ntarget.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n\t*/\n  public trigger(name: string, ...data: any[]) {\n    const events = this.events;\n\n    if (!(name in events)) {\n      return this;\n    }\n\n    const args = data || [];\n\n    !args[0] && (args[0] = {});\n    const event = events[name];\n    const target = args[0];\n\n    target.type = name;\n    target.currentTarget = this;\n    !target.target && (target.target = this);\n    event.forEach(callback => {\n      callback.apply(this, data);\n    });\n\n    return this;\n  }\n  public once(name: string | EventParameter, callback?: CallbackType | CallbackType[]) {\n    this._on(name, callback, true);\n    return this;\n  }\n}\nexport default EventTrigger;\n","/**\n * @typedef\n */\nexport interface IEasingFunction extends Function {\n  easingName?: string;\n}\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: IEasingFunction = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: IEasingFunction = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import { isString } from \"@daybrush/utils\";\n\n/**\n * @typedef\n */\nexport interface IPropertyObject {\n  prefix: string;\n  suffix: string;\n  model: string;\n  type: string;\n  separator: string;\n}\n/**\n* Make string, array to PropertyObject for the dot product\n*/\nclass PropertyObject implements IPropertyObject {\n  public value: any[];\n  public prefix: string  = \"\";\n  public suffix: string = \"\";\n  public model: string = \"\";\n  public type: string = \"\";\n  public separator: string = \",\";\n\n  /**\n\t* @param - This value is in the array format.\n\t* @param - options\n\t* @example\nvar obj = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\t */\n  constructor(value: string | any[], options?: Partial<IPropertyObject>) {\n    options && this.setOptions(options);\n    this.value = isString(value) ? value.split(this.separator) : value;\n  }\n  public setOptions(newOptions: Partial<IPropertyObject>) {\n    for (const name in newOptions) {\n      this[name as keyof IPropertyObject] = newOptions[name as keyof IPropertyObject];\n    }\n    return this;\n  }\n  /**\n\t* the number of values.\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.length);\n// 3\n\t */\n  public size() {\n    return this.value.length;\n  }\n  /**\n\t* retrieve one of values at the index\n\t* @param {Number} index - index\n\t* @return {Object} one of values at the index\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.get(0));\n// 1\n\t */\n  public get(index: number) {\n    return this.value[index];\n  }\n  /**\n\t* Set the value at that index\n\t* @param {Number} index - index\n\t* @param {Object} value - text, a number, object to set\n\t* @return {PropertyObject} An instance itself\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nobj1.set(0, 2);\nconsole.log(obj1.toValue());\n// 2,2,3\n\t */\n  public set(index: number, value: any) {\n    this.value[index] = value;\n    return this;\n  }\n  /**\n\t* create a copy of an instance itself.\n\t* @return {PropertyObject} clone\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nconst obj2 = obj1.clone();\n\t */\n  public clone(): PropertyObject {\n    const {\n      separator,\n      prefix,\n      suffix,\n      model,\n      type,\n    } = this;\n    const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n    return new PropertyObject(arr, {\n      separator,\n      prefix,\n      suffix,\n      model,\n      type,\n    });\n  }\n  /**\n\t* Make Property Object to String\n\t* @return {String} Make Property Object to String\n\t* @example\n//rgba(100, 100, 100, 0.5)\nconst obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\",\n});\nconsole.log(obj4.toValue());\n// \"rgba(100,100,100,0.5)\"\n\t*/\n  public toValue(): string {\n    return this.prefix + this.join() + this.suffix;\n  }\n  /**\n\t* Make Property Object's array to String\n\t* @return {String} Join the elements of an array into a string\n\t* @example\n\t//rgba(100, 100, 100, 0.5)\n\tvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\t\"separator\" : \",\",\n\t\t\"prefix\" : \"rgba(\",\n\t\t\"suffix\" : \")\"\n\t});\n\tobj4.join();  // =>   \"100,100,100,0.5\"\n\t */\n  public join() {\n    return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.separator);\n  }\n  /**\n\t* executes a provided function once per array element.\n\t* @param {Function} callback - Function to execute for each element, taking three arguments\n\t* @param {All} [callback.currentValue] The current element being processed in the array.\n\t* @param {Number} [callback.index] The index of the current element being processed in the array.\n\t* @param {Array} [callback.array] the array.\n\t* @return {PropertyObject} An instance itself\n\t* @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n\t* @example\n//rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\nobj4.forEach(t => {\n\tconsole.log(t);\n});  // =>   \"100,100,100,0.5\"\n\t*/\n  public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n    this.value.forEach(func);\n    return this;\n  }\n}\nexport default PropertyObject;\n","import { ROLES, MAXIMUM, FIXED, ALIAS,\n  PAUSED, RUNNING, PLAY, ENDED, PREFIX, PLAY_CSS, CURRENT_TIME } from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport {\n  isArray, ANIMATION, ARRAY, OBJECT,\n  PROPERTY, STRING, NUMBER, IS_WINDOW, IObject, $, document, isObject, addEvent, removeEvent,\n} from \"@daybrush/utils\";\n\nexport function isPropertyObject(value: any): value is PropertyObject {\n  return value instanceof PropertyObject;\n}\nexport function setAlias(name: string, alias: string[]) {\n  ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n  const length = names.length;\n  let roles: any = ROLES;\n  let fixed: any = FIXED;\n\n  for (let i = 0; i < length - 1; ++i) {\n    !roles[names[i]] && (roles[names[i]] = {});\n    roles = roles[names[i]];\n    if (isFixedProperty) {\n      !fixed[names[i]] && (fixed[names[i]] = {});\n      fixed = fixed[names[i]];\n    }\n  }\n  isFixedProperty && (fixed[names[length - 1]] = true);\n  roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n  const type = typeof value;\n\n  if (type === OBJECT) {\n    if (isArray(value)) {\n      return ARRAY;\n    } else if (isPropertyObject(value)) {\n      return PROPERTY;\n    }\n  } else if (type === STRING || type === NUMBER) {\n    return \"value\";\n  }\n  return type;\n}\nexport function toFixed(num: number) {\n  return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function getValueByNames(names: Array<string | number>,\n                                properties: IObject<any>, length: number = names.length) {\n  let value = properties;\n\n  for (let i = 0; i < length; ++i) {\n    if (!isObject(value)) {\n      return undefined;\n    }\n    value = value[names[i]];\n  }\n  return value;\n}\nexport function isInProperties(roles: IObject<any>, args: string[], isCheckTrue?: boolean) {\n  const length = args.length;\n  let role: any = roles;\n\n  if (length === 0) {\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    if (role === true) {\n      return false;\n    }\n    role = role[args[i]];\n    if (!role || (!isCheckTrue && role === true)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isRole(args: string[], isCheckTrue?: boolean) {\n  return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: string[]) {\n  return isInProperties(FIXED, args, true);\n}\n\nexport interface IterationInterface {\n  currentTime: number;\n  iterationCount: number;\n  elapsedTime: number;\n}\nexport function setPlayCSS(item: Scene | SceneItem, isActivate: boolean) {\n  item.state[PLAY_CSS] = isActivate;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n  return item.state[PLAY_CSS] && item.isPaused();\n}\nexport function isEndedCSS(item: Scene | SceneItem) {\n  return !item.isEnded() && item.state[PLAY_CSS];\n}\n\nexport function exportCSS(id: number | string, css: string) {\n  const styleId = `${PREFIX}STYLE_${toId(id)}`;\n  const styleElement: HTMLElement = $(`#${styleId}`);\n\n  if (styleElement) {\n    styleElement.innerText = css;\n  } else {\n    document.body.insertAdjacentHTML(\"beforeend\",\n      `<style id=\"${styleId}\">${css}</style>`);\n  }\n}\nexport function makeId(selector?: boolean) {\n  for (; ;) {\n    const id = `${Math.floor(Math.random() * 10000000)}`;\n\n    if (!IS_WINDOW || !selector) {\n      return id;\n    }\n    const checkElement = $(`[data-scene-id=\"${id}\"]`);\n\n    if (!checkElement) {\n      return id;\n    }\n  }\n}\nexport function getRealId(item: Scene | SceneItem) {\n  return item.getId() || item.setId(makeId(false)).getId();\n}\nexport function toId(text: number | string) {\n  return `${text}`.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nexport function playCSS(item: Scene | SceneItem, isExportCSS: boolean, properties = {}) {\n  if (!ANIMATION || item.getPlayState() === RUNNING) {\n    return;\n  }\n  if (isPausedCSS(item)) {\n    item.addPlayClass(true, properties);\n  } else {\n    if (item.isEnded()) {\n      item.setTime(0);\n    }\n    isExportCSS && item.exportCSS();\n    const el = item.addPlayClass(false, properties);\n\n    if (!el) {\n      return;\n    }\n    addAnimationEvent(item, el);\n    setPlayCSS(item, true);\n  }\n  item.setPlayState(RUNNING);\n}\nexport function findIndex<T>(arr: T[], callback: (element: T) => any, defaultIndex: number = -1): number {\n  const length = arr.length;\n\n  for (let i = 0; i < length; ++i) {\n    if (callback(arr[i])) {\n      return i;\n    }\n  }\n  return defaultIndex;\n}\nexport function find<T>(arr: T[], callback: (element: T) => any, defalutValue?: T): T | undefined {\n  const index = findIndex(arr, callback);\n\n  return index > - 1 ? arr[index] : defalutValue;\n}\nexport function addAnimationEvent(item: Scene | SceneItem, el: Element) {\n  const duration = item.getDuration();\n  const isZeroDuration = !duration || !isFinite(duration);\n  const state = item.state;\n  const animationend = () => {\n    if (!isZeroDuration) {\n      setPlayCSS(item, false);\n      item.finish();\n    }\n  };\n  const animationstart = () => {\n    item.trigger(PLAY);\n  };\n  item.on(ENDED, () => {\n    removeEvent(el, \"animationend\", animationend);\n    removeEvent(el, \"animationiteration\", animationiteration);\n    removeEvent(el, \"animationstart\", animationstart);\n  });\n  const animationiteration = ({elapsedTime}: any) => {\n    const currentTime = elapsedTime;\n    const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n    state[CURRENT_TIME] = currentTime;\n    item.setIteration(iterationCount);\n  };\n  addEvent(el, \"animationend\", animationend);\n  addEvent(el, \"animationiteration\", animationiteration);\n  addEvent(el, \"animationstart\", animationstart);\n}\n","import {\n  THRESHOLD,\n  ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n  ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n  DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED,\n  RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE, PREV_TIME, TICK_TIME, CURRENT_TIME, ITERATION, OPTIONS\n} from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, IEasingFunction } from \"./easing\";\nimport { toFixed, makeId } from \"./utils\";\nimport { splitUnit, isString, camelize, requestAnimationFrame, isArray } from \"@daybrush/utils\";\n\nfunction GetterSetter<T extends { new(...args: any[]): {} }>(\n  getter: string[], setter: string[], parent: string) {\n  return (constructor: T) => {\n    const prototype = constructor.prototype;\n\n    getter.forEach(name => {\n      prototype[camelize(`get ${name}`)] = function() {\n        return this[parent][name];\n      };\n    });\n    setter.forEach(name => {\n      prototype[camelize(`set ${name}`)] = function(value: any) {\n        this[parent][name] = value;\n        return this;\n      };\n    });\n  };\n}\nfunction tick(animator: Animator, now: number, to?: number) {\n  if (animator.isPaused()) {\n    return;\n  }\n  const state = animator.state;\n  const playSpeed = state[PLAY_SPEED];\n  const prevTime = state[PREV_TIME];\n  const delay = state[DELAY];\n  const tickTime = state[TICK_TIME];\n  const currentTime = tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n  state[PREV_TIME] = now;\n  animator.setTime(currentTime - delay, true);\n  if (to && to * 1000 < now) {\n    animator.pause();\n  }\n  if (state[PLAY_STATE] === PAUSED) {\n    return;\n  }\n\n  requestAnimationFrame((time: number) => {\n    tick(animator, time, to);\n  });\n}\n\n/**\n * @typedef\n */\nexport type FillModeType = \"forwards\" | \"backwards\" | \"both\";\n/**\n * @typedef\n */\nexport type IterationCountType = number | \"infinite\";\n/**\n * @typedef\n */\nexport type EasingType = 0 | IEasingFunction;\n/**\n * @typedef\n */\nexport type DirectionType = \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\";\n/**\n * @typedef\n */\nexport type PlayStateType = \"paused\" | \"running\";\n\nexport interface AnimatorState {\n  id: number | string;\n  easing: EasingType;\n  easingName: string;\n  iterationCount: IterationCountType;\n  delay: number;\n  fillMode: FillModeType;\n  direction: DirectionType;\n  playSpeed: number;\n  iterationTime: number;\n  currentTime: number;\n  tickTime: number;\n  iteration: number;\n  prevTime: number;\n  playState: PlayStateType;\n  duration: number;\n}\nexport function isDirectionReverse(iteration: number,\n                                   iteraiontCount: IterationCountType, direction: DirectionType) {\n  if (direction === REVERSE) {\n    return true;\n  } else if (iteraiontCount !== INFINITE && iteration === iteraiontCount && iteraiontCount % 1 === 0) {\n    return  direction === (iteration % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n  }\n  return  direction === (iteration % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorState The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n\nconst setters = [\"id\", ITERATION_COUNT, DELAY, FILL_MODE,\n  DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n/**\n* play video, animation, the others\n* @extends EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n*/\n@GetterSetter(getters, setters, \"state\")\nclass Animator<T extends AnimatorState = AnimatorState> extends EventTrigger {\n  public state: T;\n\n  /**\n   * @param - animator's options\n   * @example\nconst animator = new Animator({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n   */\n  constructor(options?: Partial<T>) {\n    super();\n    this.state = {\n      id: \"\",\n      easing: 0,\n      easingName: \"linear\",\n      iterationCount: 1,\n      delay: 0,\n      fillMode: \"forwards\",\n      direction: NORMAL,\n      playSpeed: 1,\n      currentTime: 0,\n      iterationTime: -1,\n      iteration: 0,\n      tickTime: 0,\n      prevTime: 0,\n      playState: PAUSED,\n      duration: 0,\n    } as T;\n    this.setOptions(options);\n  }\n  /**\n\t* set animator's easing.\n\t* @param curverArray - The speed curve of an animation.\n\t* @return {Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n\t*/\n  public setEasing(curveArray: [number, number, number, number] | IEasingFunction): this {\n    const easing = isArray(curveArray) ?\n      bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]) : curveArray;\n    const easingName = easing[EASING_NAME] || \"linear\";\n\n    const state = this.state;\n\n    state[EASING] = easing;\n    state[EASING_NAME] = easingName;\n    return this;\n  }\n  /**\n\t* set animator's options.\n\t* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n\t* @param - animator's options\n\t* @return {Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n\t*/\n  public setOptions(options: Partial<AnimatorState> = {}): this {\n    for (const name in options) {\n      const value = options[name];\n\n      if (name === EASING) {\n        this.setEasing(value);\n        continue;\n      } else if (name === DURATION) {\n        value && this.setDuration(value);\n        continue;\n      }\n      if (OPTIONS.indexOf(name as any) > -1) {\n        this.state[name] = value;\n      }\n    }\n\n    return this;\n  }\n  /**\n\t* Get the animator's total duration including delay\n\t* @return {number} Total duration\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getTotalDuration(): number {\n    return this.getActiveDuration(true);\n  }\n  /**\n\t* Get the animator's total duration excluding delay\n\t* @return {number} Total duration excluding delay\n\t* @example\nanimator.getActiveDuration();\n\t*/\n  public getActiveDuration(delay?: boolean): number {\n    const state = this.state;\n    const count = state[ITERATION_COUNT];\n    if (count === INFINITE) {\n      return Infinity;\n    }\n    return (delay ? state[DELAY] : 0) + this.getDuration() * count;\n  }\n  /**\n\t* Check if the animator has reached the end.\n\t* @return {boolean} ended\n\t* @example\nanimator.isEnded(); // true or false\n\t*/\n  public isEnded(): boolean {\n    if (this.state[TICK_TIME] === 0 && this.state[PLAY_STATE] === PAUSED) {\n      return true;\n    } else if (this.getTime() < this.getActiveDuration()) {\n      return false;\n    }\n    return true;\n  }\n  /**\n\t*Check if the animator is paused:\n\t* @return {boolean} paused\n\t* @example\nanimator.isPaused(); // true or false\n\t*/\n  public isPaused(): boolean {\n    return this.state[PLAY_STATE] === PAUSED;\n  }\n  public start(delay: number = this.state[DELAY]): void {\n    const state = this.state;\n\n    state[PLAY_STATE] = RUNNING;\n    if (state[TICK_TIME] >= delay) {\n      /**\n       * This event is fired when play animator.\n       * @event Animator#play\n       */\n      this.trigger(PLAY);\n    }\n  }\n  /**\n\t* play animator\n\t* @return {Animator} An instance itself.\n\t*/\n  public play(toTime?: number) {\n    const state = this.state;\n    const delay = state[DELAY];\n    const currentTime = this.getTime();\n\n    state[PLAY_STATE] = RUNNING;\n\n    if (this.isEnded() && (currentTime === 0 || currentTime >= this.getActiveDuration())) {\n      this.setTime(-delay, true);\n    }\n    state[TICK_TIME] = this.getTime();\n\n    requestAnimationFrame((time: number) => {\n      state[PREV_TIME] = time;\n      tick(this, time, toTime);\n    });\n    this.start();\n    return this;\n  }\n  /**\n\t* pause animator\n\t* @return {Animator} An instance itself.\n\t*/\n  public pause(): this {\n    const state = this.state;\n\n    if (state[PLAY_STATE] !== PAUSED) {\n      state[PLAY_STATE] = PAUSED;\n      /**\n       * This event is fired when animator is paused.\n       * @event Animator#paused\n       */\n      this.trigger(PAUSED);\n    }\n    return this;\n  }\n  /**\n\t * end animator\n\t * @return {Animator} An instance itself.\n\t*/\n  public finish() {\n    this.setTime(0);\n    this.state[TICK_TIME] = 0;\n    this.end();\n    return this;\n  }\n  /**\n\t * end animator\n\t * @return {Animator} An instance itself.\n\t*/\n  public end() {\n    this.pause();\n    /**\n\t\t * This event is fired when animator is ended.\n\t\t * @event Animator#ended\n\t\t */\n    this.trigger(ENDED);\n    return this;\n  }\n  /**\n\t* set currentTime\n\t* @param {Number|String} time - currentTime\n\t* @return {Animator} An instance itself.\n\t* @example\n\nanimator.setTime(\"from\"); // 0\nanimator.setTime(\"to\"); // 100%\nanimator.setTime(\"50%\");\nanimator.setTime(10);\nanimator.getTime() // 10\n\t*/\n  public setTime(time: number | string, isTick?: boolean) {\n    const activeDuration = this.getActiveDuration();\n    const state = this.state;\n    const prevTime = state[TICK_TIME];\n    const delay = state[DELAY];\n    let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n    state[TICK_TIME] = delay + currentTime;\n    if (currentTime < 0) {\n      currentTime = 0;\n    } else if (currentTime > activeDuration) {\n      currentTime = activeDuration;\n    }\n    state[CURRENT_TIME] = currentTime;\n    this.calculate();\n\n    if (isTick) {\n      const tickTime = state[TICK_TIME];\n\n      if (prevTime < delay && time >= 0 ||\n          state[PLAY_STATE] !== RUNNING && tickTime >= delay && !this.isEnded()) {\n        this.start(0);\n      }\n      if (tickTime < prevTime || this.isEnded()) {\n        this.end();\n        return;\n      }\n    }\n    if (this.isDelay()) {\n      return this;\n    }\n    /**\n\t\t * This event is fired when the animator updates the time.\n\t\t * @event Animator#timeupdate\n\t\t * @param {Object} param The object of data to be sent to an event.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t */\n    this.trigger(TIMEUPDATE, {\n      currentTime,\n      time: this.getIterationTime(),\n      iterationCount: state[ITERATION],\n    });\n\n    return this;\n  }\n  /**\n\t* Get the animator's current time\n\t* @return {number} current time\n\t* @example\nanimator.getTime();\n\t*/\n  public getTime(): number {\n    return this.state[CURRENT_TIME];\n  }\n  public getUnitTime(time: string | number) {\n    if (isString(time)) {\n      const duration = this.getDuration() || 100;\n\n      if (time === \"from\") {\n        return 0;\n      } else if (time === \"to\") {\n        return duration;\n      }\n      const { unit, value } = splitUnit(time);\n\n      if (unit === \"%\") {\n        !this.getDuration() && (this.state[DURATION] = duration);\n        return toFixed(parseFloat(time) / 100 * duration);\n      } else if (unit === \">\") {\n        return value + THRESHOLD;\n      } else {\n        return value;\n      }\n    } else {\n      return toFixed(time);\n    }\n  }\n  /**\n\t * Check if the current state of animator is delayed.\n\t * @return {boolean} check delay state\n\t */\n  public isDelay() {\n    const state = this.state;\n    const delay = state[DELAY];\n    const tickTime = state[TICK_TIME];\n\n    return delay > 0 && (tickTime < delay);\n  }\n  public setIteration(iterationCount: number): this {\n    const state = this.state;\n    const passIterationCount = Math.floor(iterationCount);\n    const maxIterationCount = state[ITERATION_COUNT] === INFINITE ? Infinity : state[ITERATION_COUNT];\n\n    if (state[ITERATION] < passIterationCount && passIterationCount < maxIterationCount) {\n      /**\n\t\t\t* The event is fired when an iteration of an animation ends.\n\t\t\t* @event Animator#iteration\n\t\t\t* @param {Object} param The object of data to be sent to an event.\n\t\t\t* @param {Number} param.currentTime The total time that the animator is running.\n\t\t\t* @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t\t*/\n      this.trigger(\"iteration\", {\n        currentTime: state[CURRENT_TIME],\n        iterationCount: passIterationCount,\n      });\n    }\n    state[ITERATION] = iterationCount;\n    return this;\n  }\n  protected calculate() {\n    const state = this.state;\n    const iterationCount = state[ITERATION_COUNT];\n    const fillMode = state[FILL_MODE];\n    const direction = state[DIRECTION];\n    const duration = this.getDuration();\n    const time = this.getTime();\n    const iteration = duration === 0 ? 0 : time / duration;\n    let currentIterationTime = duration ? time % duration : 0;\n\n    if (!duration) {\n      this.setIterationTime(0);\n      return this;\n    }\n    this.setIteration(iteration);\n\n    // direction : normal, reverse, alternate, alternate-reverse\n    // fillMode : forwards, backwards, both, none\n    const isReverse = isDirectionReverse(iteration, iterationCount, direction);\n\n    const isFiniteDuration = isFinite(duration);\n    if (isFiniteDuration && isReverse) {\n      currentIterationTime = duration - currentIterationTime;\n    }\n    if (isFiniteDuration && iterationCount !== INFINITE) {\n      const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n      // fill forwards\n      if (iteration >= iterationCount) {\n        currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n        isReverse && (currentIterationTime = duration - currentIterationTime);\n      }\n    }\n    this.setIterationTime(currentIterationTime);\n    return this;\n  }\n}\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#setId\n * @param {number | string} - String or number of id to be set in the animator\n * @return {Animator} An instance itself.\n */\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#getId\n * @return {number | string} the indicator of the item.\n */\n/**\n * Get a delay for the start of an animation.\n * @method Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Animator#setDelay\n * @param {number} delay - delay\n * @return {Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#getFillMode\n * @return {FillModeType} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#setFillMode\n * @param {FillModeType} fillMode - fillMode\n * @return {Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Animator#getIterationCount\n * @return {IterationCountType} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Animator#setIterationCount\n * @param {IterationCountType} iterationCount - iterationCount\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#getDirection\n * @return {DirectionType} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#setDirection\n * @param {DirectionType} direction - direction\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Animator#getPlayState\n * @return {PlayStateType} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Animator#setPlayState\n * @param {PlayStateType} playState - playState\n * @return {Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Animator#setDuration\n * @param {number} duration - duration\n * @return {Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Animator#getEasing\n * @return {EasingType} easing\n */\n/**\n * Get the speed curve's name\n * @method Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\n// tslint:disable-next-line:interface-name\ninterface Animator<T extends AnimatorState> {\n  setId(id: number | string): this;\n  getId(): number | string;\n  getIterationTime(): number;\n  setIterationTime(time: number): this;\n  setDelay(delay: number): this;\n  getDelay(): number;\n  setFillMode(fillMode: FillModeType): this;\n  getFillMode(): FillModeType;\n  setIterationCount(iterationCount: IterationCountType): this;\n  getIterationCount(): IterationCountType;\n  setDirection(direction: DirectionType): this;\n  getDirection(): DirectionType;\n  setPlayState(playState: PlayStateType): this;\n  getPlayState(): PlayStateType;\n  setPlaySpeed(playSpeed: number): this;\n  getPlaySpeed(): number;\n  setDuration(duration: number): this;\n  getDuration(): number;\n  getEasing(): EasingType;\n  getEasingName(): string;\n}\nexport default Animator;\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {\n  COLOR_MODELS, isString,\n  splitComma, splitSpace, stringToRGBA,\n  RGBA, splitBracket, IObject, isArray\n} from \"@daybrush/utils\";\n\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const obj: IObject<string | PropertyObject> = {};\n  let length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      --length;\n      continue;\n    }\n    obj[matches[1].trim()] = toPropertyObject(matches[2].trim());\n  }\n  return {styles: obj, length};\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(text: string) {\n  // [prefix, value, other]\n  const { prefix: model, value, suffix: afterModel } = splitBracket(text);\n\n  if (typeof value === \"undefined\") {\n    return text;\n  }\n  if (COLOR_MODELS.indexOf(model) !== -1) {\n    return arrayToColorObject(stringToRGBA(text));\n  }\n  // divide comma(,)\n  const obj = toPropertyObject(value);\n\n  let arr = [value];\n  let separator = \",\";\n  let prefix = `${model}(`;\n  let suffix = `)${afterModel}`;\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.separator;\n    arr = obj.value;\n    prefix += obj.prefix;\n    suffix = obj.suffix + suffix;\n  }\n  return new PropertyObject(arr, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  const result = stringToRGBA(value);\n\n  return result ? arrayToColorObject(result) : value;\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: any[]): PropertyObject;\nexport function toPropertyObject(value: IObject<any>): IObject<any>;\nexport function toPropertyObject(value: string): PropertyObject | string;\nexport function toPropertyObject(value: string | IObject<any> | any[]) {\n  if (!isString(value)) {\n    if (isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: IObject<any> = {}) {\n  const model = object.model;\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => {\n      toObject(obj, result);\n    });\n  }\n  return result;\n}\n","import {\n  ALIAS, TIMING_FUNCTION, TRANSFORM_NAME, EASING_NAME\n} from \"./consts\";\nimport { isRole, getType, isPropertyObject, getValueByNames } from \"./utils\";\nimport { toPropertyObject, splitStyle, toObject } from \"./utils/property\";\nimport { isObject, isArray, isString,\n  ANIMATION, TRANSFORM, FILTER, PROPERTY, FUNCTION, ARRAY, OBJECT, IObject, isUndefined } from \"@daybrush/utils\";\nimport { NameType } from \"./types\";\n\nfunction toInnerProperties(obj: IObject<string>) {\n  if (!obj) {\n    return \"\";\n  }\n  const arrObj = [];\n\n  for (const name in obj) {\n    arrObj.push(`${name.replace(/\\d/g, \"\")}(${obj[name]})`);\n  }\n  return arrObj.join(\" \");\n}\n\n/* eslint-disable */\nfunction clone(target: IObject<any>, toValue = false) {\n  return merge({}, target, toValue);\n}\nfunction merge(to: IObject<any>, from: IObject<any>, toValue = false) {\n  for (const name in from) {\n    const value = from[name];\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n      to[name] = toValue ? value.toValue() : value.clone();\n    } else if (type === FUNCTION) {\n      to[name] = toValue ? getValue([name], value) : value;\n    } else if (type === ARRAY) {\n      to[name] = value.slice();\n    } else if (type === OBJECT) {\n      if (isObject(to[name]) && !isPropertyObject(to[name])) {\n        merge(to[name], value, toValue);\n      } else {\n        to[name] = clone(value, toValue);\n      }\n    } else {\n      to[name] = from[name];\n    }\n  }\n  return to;\n}\n/* eslint-enable */\n\nfunction getPropertyName(args: NameType[]) {\n  return args[0] in ALIAS ? ALIAS[args[0]] : args;\n}\nfunction getValue(names: NameType[], value: any): any {\n  const type = getType(value);\n\n  if (type === PROPERTY) {\n    return value.toValue();\n  } else if (type === FUNCTION) {\n    if (names[0] !== TIMING_FUNCTION) {\n      return getValue(names, value());\n    }\n  } else if (type === OBJECT) {\n    return clone(value, true);\n  }\n  return value;\n}\n/**\n* Animation's Frame\n*/\nclass Frame {\n  public properties: IObject<any>;\n  /**\n   * @param - properties\n   * @example\nconst frame = new Scene.Frame({\n\tdisplay: \"none\"\n\ttransform: {\n\t\ttranslate: \"50px\",\n\t\tscale: \"5, 5\",\n\t}\n});\n   */\n  constructor(properties: IObject<any> = {}) {\n    this.properties = {};\n    this.set(properties);\n  }\n  /**\n\t* get property value\n\t* @param {...Number|String|PropertyObject} args - property name or value\n\t* @example\n\tframe.get(\"display\") // => \"none\", \"block\", ....\n\tframe.get(\"transform\", \"translate\") // => \"10px,10px\"\n\t*/\n  public get(...args: NameType[]) {\n    const value = this.raw(...args);\n\n    return getValue(getPropertyName(args), value);\n  }\n\n  public raw(...args: NameType[]) {\n    return getValueByNames(getPropertyName(args), this.properties);\n  }\n  /**\n\t* remove property value\n\t* @param {...String} args - property name\n\t* @return {Frame} An instance itself\n\t* @example\n\tframe.remove(\"display\")\n\t*/\n  public remove(...args: NameType[]) {\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    if (!length) {\n      return this;\n    }\n    const value = getValueByNames(params, this.properties, length - 1);\n\n    if (isObject(value)) {\n      delete value[params[length - 1]];\n    }\n    return this;\n  }\n  /**\n\t* set property\n\t* @param {...Number|String|PropertyObject} args - property names or values\n\t* @return {Frame} An instance itself\n\t* @example\n// one parameter\nframe.set({\n\tdisplay: \"none\",\n\ttransform: {\n\t\ttranslate: \"10px, 10px\",\n\t\tscale: \"1\",\n\t},\n\tfilter: {\n\t\tbrightness: \"50%\",\n\t\tgrayscale: \"100%\"\n\t}\n});\n\n// two parameters\nframe.set(\"transform\", {\n\ttranslate: \"10px, 10px\",\n\tscale: \"1\",\n});\n\n// three parameters\nframe.set(\"transform\", \"translate\", \"50px\");\n  */\n  public set(...args: any[]) {\n    const self = this;\n    const length = args.length;\n    const params = args.slice(0, -1);\n    const value = args[length - 1];\n\n    if (params[0] in ALIAS) {\n      self._set(ALIAS[params[0]], value);\n    } else if (length === 2 && isArray(params[0])) {\n      self._set(params[0], value);\n    } else if (isArray(value)) {\n      self._set(params, value);\n    } else if (isPropertyObject(value)) {\n      if (isRole(params)) {\n        self.set(...params, toObject(value));\n      } else {\n        self._set(params, value);\n      }\n    } else if (isObject(value)) {\n      for (const name in value) {\n        self.set(...params, name, value[name]);\n      }\n    } else if (isString(value)) {\n      if (isRole(params)) {\n        const obj = toPropertyObject(value);\n\n        if (isObject(obj)) {\n          self.set(...params, obj);\n        }\n        return this;\n      } else {\n        const {styles, length: stylesLength} = splitStyle(value);\n\n        for (const name in styles) {\n          self.set(...params, name, styles[name]);\n        }\n        if (stylesLength) {\n          return this;\n        }\n      }\n      self._set(params, value);\n    } else {\n      self._set(params, value);\n    }\n    return self;\n  }\n  /**\n\t* check that has property.\n\t* @param {...String} args - property name\n\t* @example\n\tframe.has(\"property\", \"display\") // => true or false\n\t*/\n  public has(...args: NameType[]) {\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    if (!length) {\n      return false;\n    }\n    return !isUndefined(getValueByNames(params, this.properties, length));\n  }\n  /**\n\t* clone frame.\n\t* @return {Frame} An instance of clone\n\t* @example\n\tframe.clone();\n\t*/\n  public clone() {\n    const frame = new Frame();\n\n    return frame.merge(this);\n  }\n  /**\n\t* merge one frame to other frame.\n\t* @param - target frame.\n\t* @return {Frame} An instance itself\n\t* @example\n\tframe.merge(frame2);\n\t*/\n  public merge(frame: Frame) {\n    const properties = this.properties;\n    const frameProperties = frame.properties;\n\n    if (!frameProperties) {\n      return this;\n    }\n    merge(properties, frameProperties);\n\n    return this;\n  }\n  /**\n\t* Specifies an css object that coverted the frame.\n\t* @return {object} cssObject\n\t*/\n  public toCSSObject() {\n    const properties = this.get();\n    const cssObject: IObject<string> = {};\n\n    for (const name in properties) {\n      if (isRole([name], true)) {\n        continue;\n      }\n      const value = properties[name];\n\n      if (name === TIMING_FUNCTION) {\n        cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n          (isString(value) ? value : value[EASING_NAME]) || \"initial\";\n        continue;\n      }\n      cssObject[name] = value;\n    }\n    const transform = toInnerProperties(properties[TRANSFORM_NAME]);\n    const filter = toInnerProperties(properties.filter);\n\n    TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n    FILTER && filter && (cssObject[FILTER] = filter);\n    return cssObject;\n  }\n  /**\n\t* Specifies an css text that coverted the frame.\n\t* @return {string} cssText\n\t*/\n  public toCSS() {\n    const cssObject = this.toCSSObject();\n    const cssArray = [];\n\n    for (const name in cssObject) {\n      cssArray.push(`${name}:${cssObject[name]};`);\n    }\n    return cssArray.join(\"\");\n  }\n  private _set(args: NameType[], value: any) {\n    let properties = this.properties;\n    const length = args.length;\n\n    for (let i = 0; i < length - 1; ++i) {\n      const name = args[i];\n\n      !(name in properties) && (properties[name] = {});\n      properties = properties[name];\n    }\n    if (!length) {\n      return;\n    }\n    properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n  }\n}\nexport default Frame;\n","\nimport PropertyObject from \"../PropertyObject\";\nimport { EasingType } from \"../Animator\";\nimport { getType } from \"../utils\";\nimport { toPropertyObject } from \"./property\";\nimport { splitUnit, PROPERTY, FUNCTION, ARRAY } from \"@daybrush/utils\";\n\nfunction dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\nfunction dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.model;\n  const model2 = color2.model;\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n\nfunction dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.type;\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.separator || a2.separator,\n    prefix: a1.prefix || a2.prefix,\n    suffix: a1.suffix || a2.suffix,\n    model: a1.model || a2.model,\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === ARRAY) {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = dotNumber(v1.value, v2.value, b1, b2);\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\nexport function dotNumber(a1: number, a2: number, b1: number, b2: number) {\n  return (a1 * b2 + a2 * b1) / (b1 + b2);\n}\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import Animator, { AnimatorState, EasingType, isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n  toFixed,\n  isFixed,\n  playCSS,\n  toId,\n  exportCSS,\n  getRealId,\n  makeId,\n  isPausedCSS,\n  isRole,\n  isInProperties,\n  getValueByNames,\n  isEndedCSS,\n  setPlayCSS,\n  find,\n  findIndex,\n} from \"./utils\";\nimport { dotValue, dotNumber } from \"./utils/dot\";\nimport {\n  START_ANIMATION,\n  PREFIX, THRESHOLD,\n  TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, NORMAL, INFINITE,\n  REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n  EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION, DATA_SCENE_ID, PLAY_CSS, SELECTOR, ROLES, CURRENT_TIME\n} from \"./consts\";\nimport { isObject, isArray, isUndefined, decamelize,\n  ANIMATION, fromCSS, addClass, removeClass, hasClass,\n  KEYFRAMES, requestAnimationFrame, isFunction,\n  IObject, $, splitComma, toArray, isString, IArrayFormat, TRANSFORM } from \"@daybrush/utils\";\nimport { NameType, RoleObject, AnimateElement } from \"./types\";\n\nexport interface SceneItemState extends AnimatorState {\n  playCSS: boolean;\n  cssText: string;\n  selector: string;\n}\nexport interface SceneItemOptions extends AnimatorState {\n  selector: boolean | string;\n  elements: IArrayFormat<AnimateElement> | AnimateElement;\n  element: IArrayFormat<AnimateElement> | AnimateElement;\n  target: any;\n}\nfunction getNearTimeIndex(times: number[], time: number) {\n  const length = times.length;\n\n  for (let i = 0; i < length; ++i) {\n    if (times[i] === time) {\n      return [i, i];\n    } else if (times[i] > time) {\n      return [i > 0 ? i - 1 : 0, i];\n    }\n  }\n  return [length - 1, length - 1];\n}\nfunction makeAnimationProperties(properties: IObject<string | number>) {\n  const cssArray = [];\n\n  for (const name in properties) {\n    cssArray.push(`${ANIMATION}-${decamelize(name)}:${properties[name]};`);\n  }\n  return cssArray.join(\"\");\n}\nfunction isPureObject(obj: any): obj is object  {\n  return isObject(obj) && obj.constructor === Object;\n}\nfunction getNames(names: IObject<any>, stack: string[]) {\n  let arr: string[][] = [];\n\n  if (isPureObject(names)) {\n    for (const name in names) {\n      stack.push(name);\n      arr = arr.concat(getNames(names[name], stack));\n      stack.pop();\n    }\n  } else {\n    arr.push(stack.slice());\n  }\n  return arr;\n}\nfunction updateFrame(names: IObject<any>, properties: IObject<any>) {\n  for (const name in properties) {\n    const value = properties[name];\n\n    if (!isPureObject(value)) {\n      names[name] = true;\n      continue;\n    }\n    if (!isObject(names[name])) {\n      names[name] = {};\n    }\n    updateFrame(names[name], properties[name]);\n  }\n  return names;\n}\nfunction addTime(times: number[], time: number) {\n  const length = times.length;\n  for (let i = 0; i < length; ++i) {\n    if (time < times[i]) {\n      times.splice(i, 0, time);\n      return;\n    }\n  }\n  times[length] = time;\n}\nfunction addEntry(entries: number[][], time: number, keytime: number) {\n  const prevEntry = entries[entries.length - 1];\n\n  (!prevEntry || prevEntry[0] !== time || prevEntry[1] !== keytime) && entries.push([toFixed(time), toFixed(keytime)]);\n}\nexport function getEntries(times: number[], states: AnimatorState[]) {\n  let entries = times.map(time => ([time, time]));\n  let nextEntries = [];\n\n  states.forEach(state => {\n    const iterationCount = state[ITERATION_COUNT] as number;\n    const delay = state[DELAY];\n    const playSpeed = state[PLAY_SPEED];\n    const direction = state[DIRECTION];\n    const intCount = Math.ceil(iterationCount);\n    const currentDuration = entries[entries.length - 1][0];\n    const length = entries.length;\n    const lastTime = currentDuration * iterationCount;\n\n    for (let i = 0; i < intCount; ++i) {\n      const isReverse =\n        direction === REVERSE || direction === ALTERNATE && i % 2 || direction === ALTERNATE_REVERSE && !(i % 2);\n\n      for (let j = 0; j < length; ++j) {\n        const entry = entries[isReverse ? length - j - 1 : j];\n        const time = entry[1];\n        const currentTime = currentDuration * i + (isReverse ? currentDuration - entry[0] : entry[0]);\n        const prevEntry = entries[isReverse ? length - j : j - 1];\n\n        if (currentTime > lastTime) {\n          if (j !== 0) {\n            const prevTime = currentDuration * i + (isReverse ? currentDuration - prevEntry[0] : prevEntry[0]);\n            const divideTime = dotNumber(prevEntry[1], time, lastTime - prevTime, currentTime - lastTime);\n\n            addEntry(nextEntries, (delay + currentDuration * iterationCount) / playSpeed, divideTime);\n          }\n          break;\n        } else if (currentTime === lastTime && nextEntries[nextEntries.length - 1][0] === lastTime + delay) {\n          break;\n        }\n        addEntry(nextEntries, (delay + currentTime) / playSpeed, time);\n      }\n    }\n    // delay time\n    delay && nextEntries.unshift([0, nextEntries[0][1]]);\n\n    entries = nextEntries;\n    nextEntries = [];\n  });\n\n  return entries;\n}\n/**\n* manage Frame Keyframes and play keyframes.\n* @extends Animator\n* @example\nconst item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator<SceneItemState> {\n  public times: number[] = [];\n  public items: IObject<Frame> = {};\n  public names: RoleObject = {};\n  public elements: AnimateElement[] = [];\n  private needUpdate: boolean = false;\n  private target: any;\n  private targetFunc: (frame: Frame) => void;\n\n  /**\n\t* @param - properties\n\t* @param - options\n\t* @example\n\tconst item = new SceneItem({\n\t\t0: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\t1: {\n\t\t\tdisplay: \"block\",\n\t\t\topacity: 0,\n\t\t},\n\t\t2: {\n\t\t\topacity: 1,\n\t\t}\n\t});\n\t */\n  constructor(properties?: IObject<any>, options?: Partial<SceneItemOptions>) {\n    super();\n    this.load(properties, options);\n  }\n  public getDuration() {\n    const times = this.times;\n    const length = times.length;\n\n    return Math.max(this.state[DURATION], length === 0 ? 0 : times[length - 1]);\n  }\n  /**\n\t* get size of list\n\t* @return {Number} length of list\n\t*/\n  public size() {\n    return this.times.length;\n  }\n  public setDuration(duration: number) {\n    if (!duration) {\n      return this;\n    }\n    const originalDuration = this.getDuration();\n\n    if (originalDuration > 0) {\n      const ratio = duration / originalDuration;\n      const { times, items } = this;\n      const obj: IObject<Frame> = {};\n\n      this.times = times.map(time => {\n        const time2 = toFixed(time * ratio);\n\n        obj[time2] = items[time];\n\n        return time2;\n      });\n      this.items = obj;\n    }\n    super.setDuration(toFixed(duration));\n    return this;\n  }\n  public setId(id?: number | string) {\n    const state = this.state;\n\n    state.id = id || makeId(!!length);\n    const elements = this.elements;\n\n    if (elements.length && !state[SELECTOR]) {\n      const sceneId = toId(this.getId());\n\n      state[SELECTOR] = `[${DATA_SCENE_ID}=\"${sceneId}\"]`;\n      elements.forEach(element => {\n        element.setAttribute(DATA_SCENE_ID, sceneId);\n      });\n    }\n    return this;\n  }\n\n  /**\n\t* Set properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\nconsole.log(item.get(0, \"a\")); // \"b\"\n\t*/\n  public set(time: any, ...args: any[]) {\n    if (isArray(time)) {\n      const length = time.length;\n\n      for (let i = 0; i < length; ++i) {\n        const t = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n        this.set(t, time[i]);\n      }\n    } else if (isObject(time)) {\n      for (const t in time) {\n        const value = time[t];\n        const realTime = this.getUnitTime(t);\n\n        if (isNaN(realTime)) {\n          getNames(value, [t]).forEach(names => {\n            const innerValue = getValueByNames(names.slice(1), value);\n            const arr = isArray(innerValue) ? innerValue : [getValueByNames(names, this.target), innerValue];\n            const length = arr.length;\n\n            for (let i = 0; i < length; ++i) {\n              this.newFrame(`${i / (length - 1) * 100}%`).set(names, arr[i]);\n            }\n          });\n        } else {\n          this.set(realTime, value);\n        }\n      }\n    } else {\n      const value = args[0];\n\n      if (value instanceof Frame) {\n        this.setFrame(time, value);\n      } else if (value instanceof SceneItem) {\n        const delay = value.getDelay();\n        const realTime = this.getUnitTime(time);\n        const frames = value.toObject(!this.hasFrame(realTime + delay), realTime);\n\n        for (const frameTime in frames) {\n          this.set(frameTime, frames[frameTime]);\n        }\n      } else if (args.length === 1 && isArray(value)) {\n        value.forEach((item: any) => {\n          this.set(time, item);\n        });\n      } else {\n        const frame = this.newFrame(time);\n\n        frame.set(...args);\n      }\n    }\n    this.needUpdate = true;\n    return this;\n  }\n  /**\n\t* Get properties of the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} args property's name or properties\n\t* @return {Number|String|PropertyObejct} property value\n\t* @example\nitem.get(0, \"a\"); // item.getFrame(0).get(\"a\");\nitem.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n\t*/\n  public get(time: string | number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    return frame && frame.get(...args);\n  }\n  /**\n\t* remove properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.remove(0, \"a\");\n\t*/\n  public remove(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    frame && frame.remove(...args);\n    this.needUpdate = true;\n    return this;\n  }\n  /**\n\t* Append the item or object at the last time.\n\t* @param - the scene item or item object\n\t* @return An instance itself\n\t* @example\nitem.append(new SceneItem({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n}));\nitem.append({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\nitem.set(item.getDuration(), {\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\n\t*/\n  public append(item: SceneItem | IObject<any>) {\n    this.set(this.getDuration(), item);\n    return this;\n  }\n  /**\n\t* Push the front frames for the time and prepend the scene item or item object.\n\t* @param - the scene item or item object\n\t* @return An instance itself\n\t*/\n  public prepend(item: SceneItem | IObject<any>) {\n    if (item instanceof SceneItem) {\n      const unshiftTime = item.getDuration() + item.getDelay();\n      const firstFrame = this.getFrame(0);\n      // remove first frame\n      this.removeFrame(0);\n      this.unshift(unshiftTime);\n      this.set(0, item);\n      this.set(unshiftTime + THRESHOLD, firstFrame);\n    } else {\n      this.prepend(new SceneItem(item));\n    }\n    return this;\n  }\n   /**\n  * Push out the amount of time.\n  * @param - time to push\n\t* @return {}\n\t* @example\n  item.get(0); // frame 0\n  item.unshift(3);\n  item.get(3) // frame 0\n\t*/\n  public unshift(time: number) {\n    const { times, items } = this;\n    const obj: IObject<Frame> = {};\n\n    this.times = times.map(t => {\n      const time2 = toFixed(time + t);\n\n      obj[time2] = items[t];\n      return time2;\n    });\n    this.items = obj;\n  }\n   /**\n\t* Get the frames in the item in object form.\n\t* @return {}\n\t* @example\nitem.toObject();\n// {0: {display: \"none\"}, 1: {display: \"block\"}}\n\t*/\n  public toObject(isStartZero = true, startTime = 0): IObject<Frame> {\n    const obj: IObject<Frame> = {};\n    const delay = this.getDelay();\n\n    this.forEach((frame: Frame, time: number) => {\n      obj[(!time && !isStartZero ? THRESHOLD : 0) + delay + startTime + time] = frame.clone();\n    });\n    return obj;\n  }\n   /**\n\t* Specifies an element to synchronize items' keyframes.\n\t* @param {string} selectors - Selectors to find elements in items.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setSelector(\"#id.class\");\n\t*/\n  public setSelector(target: string | boolean) {\n    this.setElement(target);\n  }\n  /**\n\t* Specifies an element to synchronize item's keyframes.\n  * @param - elements to synchronize item's keyframes.\n  * @param - Make sure that you have peusdo.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n\t*/\n  public setElement(target: boolean | string | AnimateElement | IArrayFormat<AnimateElement>) {\n    const state = this.state;\n    let elements: AnimateElement[] = [];\n\n    if (!target) {\n      return this;\n    } else if (target === true || isString(target)) {\n      const selector = target === true ? `${state.id}` : target;\n      const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(selector);\n\n      elements = toArray($(matches ? matches[1] : selector, true));\n      state[SELECTOR] = selector;\n    } else {\n      elements = (target instanceof Element) ? [target] : toArray(target);\n    }\n    if (!elements.length) {\n      return this;\n    }\n    this.elements = elements;\n    this.setId(this.getId());\n    this.target = elements[0].style;\n    this.targetFunc = (frame: Frame) => {\n      const attributes = frame.get(\"attribute\");\n\n      if (attributes) {\n        for (const name in attributes) {\n          elements.forEach(el => {\n            el.setAttribute(name, attributes[name]);\n          });\n        }\n      }\n      const cssText = frame.toCSS();\n\n      if (state.cssText !== cssText) {\n        state.cssText = cssText;\n\n        elements.forEach(el => {\n          el.style.cssText += cssText;\n        });\n        return frame;\n      }\n    };\n    return this;\n  }\n  public setTarget(target: any): this {\n    this.target = target;\n    this.targetFunc = (frame: Frame) => {\n      const obj = frame.get();\n\n      for (const name in obj) {\n        target[name] = obj[name];\n      }\n    };\n    return this;\n  }\n  /**\n\t* add css styles of items's element to the frame at that time.\n\t* @param {Array} properties - elements to synchronize item's keyframes.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public setCSS(time: number, properties: string[]) {\n    this.set(time, fromCSS(this.elements, properties));\n    return this;\n  }\n  public setTime(time: number | string, isTick?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isTick);\n\n    const iterationTime = this.getIterationTime();\n    const easing = this.getEasing() || parentEasing;\n    const frame = this.getNowFrame(iterationTime, easing);\n    const currentTime = this.getTime();\n\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @event SceneItem#animate\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Frame} param.frame frame of that time.\n\t\t */\n    this.trigger(\"animate\", {\n      frame,\n      currentTime,\n      time: iterationTime,\n    });\n    this.targetFunc && this.targetFunc(frame);\n    return this;\n  }\n  /**\n\t* update property names used in frames.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.update();\n\t*/\n  public update() {\n    const names = this.names;\n    this.forEach(frame => {\n      updateFrame(names, frame.properties);\n    });\n    this.needUpdate = false;\n    return this;\n  }\n  /**\n\t* Create and add a frame to the sceneItem at that time\n\t* @param {Number} time - frame's time\n\t* @return {Frame} Created frame.\n\t* @example\nitem.newFrame(time);\n\t*/\n  public newFrame(time: string | number) {\n    let frame = this.getFrame(time);\n\n    if (frame) {\n      return frame;\n    }\n    frame = new Frame();\n    this.setFrame(time, frame);\n    return frame;\n  }\n  /**\n\t* Add a frame to the sceneItem at that time\n\t* @param {Number} time - frame's time\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setFrame(time, frame);\n\t*/\n  public setFrame(time: string | number, frame: Frame) {\n    const realTime = this.getUnitTime(time);\n\n    this.items[realTime] = frame;\n    addTime(this.times, realTime);\n    this.needUpdate = true;\n    return this;\n  }\n  /**\n\t* get sceneItem's frame at that time\n\t* @param {Number} time - frame's time\n\t* @return {Frame} sceneItem's frame at that time\n\t* @example\nconst frame = item.getFrame(time);\n\t*/\n  public getFrame(time: number | string) {\n    return this.items[this.getUnitTime(time)];\n  }\n  /**\n\t* check if the item has a frame at that time\n\t* @param {Number} time - frame's time\n\t* @return {Boolean} true: the item has a frame // false: not\n\t* @example\nif (item.hasFrame(10)) {\n\t// has\n} else {\n\t// not\n}\n\t*/\n  public hasFrame(time: number | string) {\n    return this.getUnitTime(time) in this.items;\n  }\n  /**\n\t* Check if keyframes has propery's name\n\t* @param - property's time\n\t* @return {boolean} true: if has property, false: not\n\t* @example\n  item.hasName([\"transform\", \"translate\"]); // true or not\n\t*/\n  public hasName(args: string[]) {\n    this.needUpdate && this.update();\n    return isInProperties(this.names, args, true);\n  }\n  /**\n\t* remove sceneItem's frame at that time\n\t* @param {Number} time - frame's time\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.removeFrame(time);\n\t*/\n  public removeFrame(time: number) {\n    const items = this.items;\n    const index = this.times.indexOf(time);\n\n    delete items[time];\n\n    // remove time\n    if (index > -1) {\n      this.times.splice(index, 1);\n    }\n    return this;\n  }\n  /**\n\t* merge frame of the previous time at the next time.\n  * @param - The time of the frame to merge\n  * @param - The target frame\n\t* @return {SceneItem} An instance itself\n\t* @example\n// getFrame(1) contains getFrame(0)\nitem.merge(0, 1);\n\t*/\n  public mergeFrame(time: number | string, frame: Frame) {\n    if (frame) {\n      const toFrame = this.newFrame(time);\n\n      toFrame.merge(frame);\n    }\n    return this;\n  }\n  /**\n\t* Get frame of the current time\n\t* @param {Number} time - the current time\n\t* @param {function} easing - the speed curve of an animation\n\t* @return {Frame} frame of the current time\n\t* @example\nlet item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n// opacity: 0.7; display:\"block\";\nconst frame = item.getNowFrame(1.7);\n\t*/\n  public getNowFrame(time: number, easing?: EasingType, isAccurate?: boolean) {\n    this.needUpdate && this.update();\n    const frame = new Frame();\n    const [left, right] = getNearTimeIndex(this.times, time);\n    let realEasing = this.getEasing() || easing;\n    let nameObject = this.names;\n\n    if (this.hasName([TIMING_FUNCTION])) {\n      const nowEasing = this._getNowValue(time, [TIMING_FUNCTION], left, right, false, 0, true);\n\n      isFunction(nowEasing) && (realEasing = nowEasing);\n    }\n    if (isAccurate) {\n      const prevFrame = this.getFrame(time);\n      const prevNames = updateFrame({}, prevFrame.properties);\n\n      for (const name in ROLES) {\n        if (name in prevNames) {\n          prevNames[name] = nameObject[name];\n        }\n      }\n      nameObject = prevNames;\n    }\n    const names = getNames(nameObject, []);\n\n    names.forEach(properties => {\n      const value = this._getNowValue(time, properties, left, right, isAccurate, realEasing, isFixed(properties));\n\n      if (isUndefined(value)) {\n        return;\n      }\n      frame.set(properties, value);\n    });\n    return frame;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    options && this.setOptions(options);\n    if (isArray(properties)) {\n      this.set(properties);\n    } else if (properties.keyframes) {\n      this.set(properties.keyframes);\n    } else {\n      for (const time in properties) {\n        if (time === \"options\") {\n          continue;\n        }\n        this.set({\n          [time]: properties[time],\n        });\n      }\n    }\n    if (options && options[DURATION]) {\n      this.setDuration(options[DURATION]);\n    }\n    return this;\n  }\n  /**\n\t * clone SceneItem.\n\t * @return {SceneItem} An instance of clone\n\t * @example\n\t * item.clone();\n\t */\n  public clone() {\n    const item = new SceneItem();\n\n    item.setOptions(this.state);\n    this.forEach((frame: Frame, time: number) => {\n      item.setFrame(time, frame.clone());\n    });\n    return item;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param - Function to execute for each element, taking three arguments\n\t * @return {Keyframes} An instance itself\n\t */\n  public forEach(callback: (item: Frame, time: number, items: IObject<Frame>) => void) {\n    const times = this.times;\n    const items = this.items;\n\n    times.forEach(time => {\n      callback(items[time], time, items);\n    });\n    return this;\n  }\n  public setOptions(options: Partial<SceneItemOptions> = {}) {\n    super.setOptions(options);\n    const { id, selector, elements, element, target } = options;\n\n    id && this.setId(id);\n    if (target) {\n      this.setTarget(target);\n    } else if (elements || element || selector) {\n      this.setElement(elements || element || selector);\n    }\n    return this;\n  }\n  /**\n\t* Specifies an css text that coverted the keyframes of the item.\n\t* @param {Array} [duration=this.getDuration()] - elements to synchronize item's keyframes.\n\t* @param {Array} [options={}] - parent options to unify options of items.\n\t* @example\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public toCSS(parentDuration = this.getDuration(), states: AnimatorState[] = []) {\n    const itemState = this.state;\n    const selector = itemState[SELECTOR];\n\n    if (!selector) {\n      return \"\";\n    }\n    const originalDuration = this.getDuration();\n    itemState[DURATION] = originalDuration;\n    states.push(itemState);\n\n    const reversedStates = toArray(states).reverse();\n    const id = toId(getRealId(this));\n    const superParent = states[0];\n    const infiniteIndex = findIndex(reversedStates, state => {\n      return state[ITERATION_COUNT] === INFINITE || !isFinite(state[DURATION]);\n    }, states.length - 1);\n    const finiteStates = reversedStates.slice(0, infiniteIndex);\n    const duration = parentDuration || finiteStates.reduce((prev, cur) => {\n      return (cur[DELAY] + prev * (cur[ITERATION_COUNT] as number)) / cur[PLAY_SPEED];\n    }, originalDuration);\n    const delay = reversedStates.slice(infiniteIndex).reduce((prev, cur) => {\n      return (prev + cur[DELAY]) / cur[PLAY_SPEED];\n    }, 0);\n    const easingName = find(reversedStates, state => (state[EASING] && state[EASING_NAME]), itemState)[EASING_NAME];\n    const iterationCount = reversedStates[infiniteIndex][ITERATION_COUNT];\n    const fillMode = superParent[FILL_MODE];\n    const direction = reversedStates[infiniteIndex][DIRECTION];\n    const cssText = makeAnimationProperties({\n      fillMode,\n      direction,\n      iterationCount,\n      delay: `${delay}s`,\n      name: `${PREFIX}KEYFRAMES_${id}`,\n      duration: `${duration / superParent[PLAY_SPEED]}s`,\n      timingFunction: easingName,\n    });\n    const selectors = splitComma(selector).map(sel => {\n      const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(sel);\n\n      if (matches) {\n        return [matches[0], matches[1]];\n      } else {\n        return [sel, \"\"];\n      }\n    });\n\n    return `${selectors.map(([sel, peusdo]) => `${sel}.${START_ANIMATION}${peusdo}`)} {\n\t\t\t${cssText}\n\t\t}${selectors.map(([sel, peusdo]) => `${sel}.${PAUSE_ANIMATION}${peusdo}`)} {\n      ${ANIMATION}-play-state: paused;\n    }\n    @${KEYFRAMES} ${PREFIX}KEYFRAMES_${id}{\n\t\t\t${this._toKeyframes(duration, finiteStates)}\n\t\t}`;\n  }\n  public exportCSS(duration?: number, options?: AnimatorState[]) {\n    if (!this.elements.length) {\n      return \"\";\n    }\n    const css = this.toCSS(duration, options);\n    const isParent = options && !isUndefined(options[ITERATION_COUNT]);\n\n    !isParent && exportCSS(getRealId(this), css);\n    return css;\n  }\n  public pause() {\n    super.pause();\n    isPausedCSS(this) && this.pauseCSS();\n    return this;\n  }\n  public pauseCSS() {\n    this.elements.forEach(element => {\n      addClass(element, PAUSE_ANIMATION);\n    });\n    return this;\n  }\n  public endCSS() {\n    this.elements.forEach(element => {\n      removeClass(element, PAUSE_ANIMATION);\n      removeClass(element, START_ANIMATION);\n    });\n    setPlayCSS(this, false);\n    return this;\n  }\n  public end() {\n    isEndedCSS(this) && this.endCSS();\n    super.end();\n    return this;\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nitem[PLAY_CSS]();\nitem[PLAY_CSS](false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(isExportCSS = true, properties = {}) {\n    playCSS(this, isExportCSS, properties);\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const elements = this.elements;\n    const length = elements.length;\n    const cssText = makeAnimationProperties(properties);\n\n    if (!length) {\n      return;\n    }\n    if (isPaused) {\n      elements.forEach(element => {\n        removeClass(element, PAUSE_ANIMATION);\n      });\n    } else {\n      elements.forEach(element => {\n        element.style.cssText += cssText;\n        if (hasClass(element, START_ANIMATION)) {\n          removeClass(element, START_ANIMATION);\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              addClass(element, START_ANIMATION);\n            });\n          });\n        } else {\n          addClass(element, START_ANIMATION);\n        }\n      });\n    }\n    return elements[0];\n  }\n  private _toKeyframes(duration: number, states: AnimatorState[]) {\n    const frames: IObject<string> = {};\n    const times = this.times.slice();\n\n    if (!times.length) {\n      return \"\";\n    }\n    const originalDuration = this.getDuration();\n    (!this.getFrame(0)) && times.unshift(0);\n    (!this.getFrame(originalDuration)) && times.push(originalDuration);\n    const entries = getEntries(times, states);\n    const lastEntry = entries[entries.length - 1];\n\n    // end delay time\n    lastEntry[0] < duration && addEntry(entries, duration, lastEntry[1]);\n    let prevTime = -1;\n\n    return entries.map(([time, keytime]) => {\n      if (!frames[keytime]) {\n        frames[keytime] =\n          (!this.hasFrame(keytime) || keytime === 0 || keytime === originalDuration ?\n          this.getNowFrame(keytime) : this.getNowFrame(keytime, 0, true)).toCSS();\n      }\n\n      let frameTime = time / duration * 100;\n\n      if (frameTime - prevTime < THRESHOLD) {\n        frameTime += THRESHOLD;\n      }\n      prevTime = frameTime;\n      return `${frameTime}%{${time === 0 ? \"\" : frames[keytime]}}`;\n    }).join(\"\");\n  }\n  private _getNowValue(\n    time: number,\n    properties: string[],\n    left: number,\n    right: number,\n    isAccurate?: boolean,\n    easing?: EasingType,\n    usePrevValue?: boolean,\n  ) {\n    const times = this.times;\n    const length = times.length;\n\n    let prevTime: number;\n    let nextTime: number;\n    let prevFrame: Frame;\n    let nextFrame: Frame;\n\n    for (let i = left; i >= 0; --i) {\n      const frame = this.getFrame(times[i]);\n\n      if (frame.has(...properties)) {\n        prevTime = times[i];\n        prevFrame = frame;\n        break;\n      }\n    }\n    const prevValue = prevFrame && prevFrame.raw(...properties);\n\n    if (isAccurate && !isRole([properties[0]])) {\n      return prevTime === time ? prevValue : undefined;\n    }\n    if (usePrevValue) {\n      return prevValue;\n    }\n    for (let i = right; i < length; ++i) {\n      const frame = this.getFrame(times[i]);\n\n      if (frame.has(...properties)) {\n        nextTime = times[i];\n        nextFrame = frame;\n        break;\n      }\n    }\n    const nextValue = nextFrame && nextFrame.raw(...properties);\n\n    if (!prevFrame || isUndefined(prevValue)) {\n      return nextValue;\n    }\n    if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n      return prevValue;\n    }\n    if (prevTime < 0) {\n      prevTime = 0;\n    }\n    return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n  }\n}\n\nexport default SceneItem;\n","import Animator, { AnimatorState, EasingType } from \"./Animator\";\nimport SceneItem, { SceneItemOptions } from \"./SceneItem\";\nimport { DATA_SCENE_ID, SELECTOR, DURATION } from \"./consts\";\nimport { playCSS, exportCSS, getRealId, makeId, isPausedCSS, isEndedCSS, setPlayCSS } from \"./utils\";\nimport { isFunction, IS_WINDOW, IObject, $, IArrayFormat } from \"@daybrush/utils\";\nimport { AnimateElement } from \"./types\";\n\nexport interface SceneState extends AnimatorState {\n  selector: string | boolean;\n  playCSS: boolean;\n}\nexport interface SceneOptions extends AnimatorState {\n  selector: string | boolean;\n}\n/**\n * manage sceneItems and play Scene.\n * @sort 1\n */\nclass Scene extends Animator<SceneState> {\n  /**\n  * version info\n  * @type {string}\n  * @example\n  * Scene.VERSION // #__VERSION__#\n  */\n  public static VERSION: string = \"#__VERSION__#\";\n  public items: IObject<Scene | SceneItem>;\n  /**\n  * @param - properties\n  * @param - options\n  * @example\n  const scene = new Scene({\n    item1: {\n      0: {\n        display: \"none\",\n      },\n      1: {\n        display: \"block\",\n        opacity: 0,\n      },\n      2: {\n        opacity: 1,\n      },\n    },\n    item2: {\n      2: {\n        opacity: 1,\n      },\n    }\n  });\n    */\n  constructor(properties?: IObject<any>, options?: Partial<SceneOptions>) {\n    super();\n    this.items = {};\n    this.load(properties, options);\n  }\n  public getDuration() {\n    const items = this.items;\n    let time = 0;\n\n    for (const id in items) {\n      const item = items[id];\n\n      time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n    }\n    return time;\n  }\n  public setDuration(duration: number) {\n    const items = this.items;\n    const sceneDuration = this.getDuration();\n\n    if (duration === 0 || !isFinite(sceneDuration)) {\n      return this;\n    }\n    if (sceneDuration === 0) {\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDuration(duration);\n      }\n    } else {\n      const ratio = duration / sceneDuration;\n\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDelay(item.getDelay() * ratio);\n        item.setDuration(item.getDuration() * ratio);\n      }\n    }\n    return this;\n  }\n  public getItem<T extends (Scene | SceneItem) = Scene | SceneItem>(name: number | string): T;\n  public getItem(name: number | string, index: number): SceneItem;\n  /**\n  * get item in scene by name\n  * @param - The item's name\n  * @param - If item is added as function, it can be imported via index.\n  * @return {Scene | SceneItem} item\n  * @example\n  const item = scene.getItem(\"item1\")\n  */\n  public getItem(name: number | string, index?: number) {\n    if (index != null) {\n      return (this.items[name] as Scene).getItem(index) as SceneItem;\n    }\n    return this.items[name];\n  }\n  /**\n  * create item in scene\n  * @param {} name - name of item to create\n  * @param {} options - The option object of SceneItem\n  * @return {} Newly created item\n  * @example\n  const item = scene.newItem(\"item1\")\n  */\n  public newItem(name: number | string, options: Partial<SceneItemOptions> = {}): SceneItem {\n    if (name in this.items) {\n      return;\n    }\n    const item = new SceneItem();\n\n    this.setItem(name, item);\n    item.setOptions(options);\n\n    return item;\n  }\n  /**\n  * add a sceneItem to the scene\n  * @param - name of item to create\n  * @param - sceneItem\n  * @example\n  const item = scene.newItem(\"item1\")\n  */\n  public setItem(name: number | string, item: Scene | SceneItem) {\n    item.setId(name);\n    this.items[name] = item;\n    return this;\n  }\n  public setTime(time: number | string, isTick?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isTick);\n\n    const iterationTime = this.getIterationTime();\n    const items = this.items;\n    const easing = this.getEasing() || parentEasing;\n\n    for (const id in items) {\n      const item = items[id];\n\n      item.setTime(iterationTime * item.getPlaySpeed() - item.getDelay(), isTick, easing);\n    }\n    return this;\n  }\n  /**\n   * executes a provided function once for each scene item.\n   * @param - Function to execute for each element, taking three arguments\n   * @return {Scene} An instance itself\n   */\n  public forEach(func: (item: Scene | SceneItem, name: string, items: IObject<Scene | SceneItem>) => void) {\n    const items = this.items;\n\n    for (const name in items) {\n      func(items[name], name, items);\n    }\n    return this;\n  }\n  public toCSS(duration: number = this.getDuration(), parentStates: AnimatorState[] = []) {\n    const totalDuration = !duration || !isFinite(duration) ? 0 : duration;\n    const styles: string[] = [];\n    const state = this.state;\n\n    state[DURATION] = this.getDuration();\n\n    this.forEach(item => {\n      styles.push(item.toCSS(totalDuration, parentStates.concat(state)));\n    });\n    return styles.join(\"\");\n  }\n  /**\n   * Export the CSS of the items to the style.\n   * @return {Scene} An instance itself\n   */\n  public exportCSS(duration?: number, parentStates?: AnimatorState[]) {\n    const css = this.toCSS(duration, parentStates);\n\n    (!parentStates || !parentStates.length) && exportCSS(getRealId(this), css);\n    return css;\n  }\n  public append(item: SceneItem | Scene) {\n    item.setDelay(item.getDelay() + this.getDuration());\n    this.setItem(getRealId(item), item);\n  }\n  public pauseCSS() {\n    return this.forEach(item => {\n      item.pauseCSS();\n    });\n  }\n  public pause() {\n    super.pause();\n\n    isPausedCSS(this) && this.pauseCSS();\n    this.forEach(item => {\n      item.pause();\n    });\n    return this;\n  }\n  public endCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].endCSS();\n    }\n    setPlayCSS(this, false);\n  }\n  public end() {\n    isEndedCSS(this) && this.endCSS();\n    super.end();\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const items = this.items;\n    let animtionElement: AnimateElement;\n\n    for (const id in items) {\n      const el = items[id].addPlayClass(isPaused, properties);\n\n      !animtionElement && (animtionElement = el);\n    }\n    return animtionElement;\n  }\n  /**\n  * Play using the css animation and keyframes.\n  * @param {boolean} [exportCSS=true] Check if you want to export css.\n  * @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n  * @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n  * @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n  * @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n  * @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n  * @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n  * @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n  * @return {Scene} An instance itself\n  * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n  * @example\n  scene.playCSS();\n  scene.playCSS(false, {\n  direction: \"reverse\",\n  fillMode: \"forwards\",\n  });\n  */\n  public playCSS(isExportCSS = true, properties = {}) {\n    playCSS(this, isExportCSS, properties);\n    return this;\n  }\n  public set(properties: any, ...args: any[]): this;\n  public set(properties: any) {\n    this.load(properties);\n    return this;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (!properties) {\n      return this;\n    }\n    const isSelector = options && options[SELECTOR] || this.state[SELECTOR];\n\n    for (const name in properties) {\n      if (name === \"options\") {\n        continue;\n      }\n      const object = properties[name];\n      let item;\n\n      if (object instanceof Scene || object instanceof SceneItem) {\n        this.setItem(name, object);\n        item = object;\n      } else if (isFunction(object) && isSelector) {\n        const elements = IS_WINDOW ? $(name, true) as IArrayFormat<AnimateElement> : ([] as AnimateElement[]);\n        const length = elements.length;\n        const scene = new Scene();\n\n        for (let i = 0; i < length; ++i) {\n          const id = makeId();\n\n          scene.newItem(`${i}`, {\n            id,\n            selector: `[${DATA_SCENE_ID}=\"${id}\"]`,\n            elements: elements[i],\n          }).load(object(i));\n        }\n        this.setItem(name, scene);\n        continue;\n      } else {\n        item = this.newItem(name);\n        item.load(object);\n      }\n      isSelector && item.setSelector(name);\n    }\n    this.setOptions(options);\n  }\n  public setOptions(options: Partial<SceneState> = {}): this {\n    super.setOptions(options);\n\n    if (options.selector) {\n      this.state[SELECTOR] = true;\n    }\n    return this;\n  }\n  public setSelector(target: string | boolean) {\n    const state = this.state;\n    const isSelector = target || state[SELECTOR];\n\n    state[SELECTOR] = target;\n    this.forEach((item, name) => {\n      item.setSelector(isSelector ? name : false);\n    });\n  }\n  public start(delay: number) {\n    super.start(delay);\n    this.forEach(item => {\n      item.start(delay);\n    });\n  }\n}\n\nexport default Scene;\n","\nimport { AnimatorState } from \"./Animator\";\nimport SceneItem, { SceneItemOptions } from \"./SceneItem\";\nimport { IObject } from \"@daybrush/utils\";\nimport { TRANSFORM_NAME } from \"./consts\";\nimport Scene, { SceneOptions } from \"./Scene\";\n\n/**\n * @namespace presets\n */\n\n/**\n * @memberof presets\n * @typedef\n */\nexport interface PresetState extends AnimatorState {\n  [key: string]: any;\n}\n\nexport function animate(properties?: IObject<any>, options?: Partial<SceneOptions>) {\n  return new Scene(properties, options).play();\n}\nexport function animateItem(properties?: IObject<any>, options?: Partial<SceneItemOptions>) {\n  return new SceneItem(properties, options).play();\n}\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @private\n * @param - property to set effect\n * @param - values of 100%\n * @example\n// import {set, blink} from \"scenejs\";\n// set(\"opacity\", [0, 1, 0], {duration: 2});\nScene.set(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\nScene.blink({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nfunction set(property: string | string[], values: any[], options: Partial<AnimatorState>) {\n  const item = new SceneItem({}, options);\n  const length = values.length;\n\n  for (let i = 0; i < length; ++i) {\n    item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n  }\n  return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {set, zoomIn} from \"scenejs\";\n// zoomIn({duration: 2});\nScene.zoomIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: Partial<PresetState>) {\n  return set([TRANSFORM_NAME, \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {zoomOut} from \"scenejs\";\n// zoomOut({duration: 2});\nScene.zoomOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: Partial<PresetState>) {\n  return set([TRANSFORM_NAME, \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeIn} from \"scenejs\";\n// wipeIn({property: \"left\", duration: 2});\nScene.wipeIn({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: Partial<PresetState>) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeOut} from \"scenejs\";\n// wipeOut({property: \"left\", duration: 2});\nScene.wipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: Partial<PresetState>) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @param {Scene.SceneItem} item1 - Item that end effect\n * @param {Scene.SceneItem} item2 - Item that start effect\n * @param {AnimatorOptions} options\n * @param {object} options.from The starting properties of item1 and end properties of item2\n * @param {object} options.to The starting properties of item2 and end properties of item1\n * @param {number} options.duration animation's duration\n * @param {number} [options.time] start time of item1 <br/> <strong>default: item1.getDuration() - duration</strong>\n * @example\n// import {transition} from \"scenejs\";\ntransition(item1, item2, {\n\tfrom: {\n\t\topacity: 1,\n\t},\n\tto: {\n\t\topacity: 0,\n\t},\n\tduration: 0.1,\n});\n\n// Same\nitem1.set({\n\t[item1.getDuration() - 0.1]: {\n\t\topacity: 1,\n\t},\n\t[item1.getDuration()]: {\n\t\topacity: 0,\n\t}\n});\nitem2.set({\n\t0: {\n\t\topacity: 0,\n\t},\n\t0.1: {\n\t\topacity: 1,\n\t}\n});\n */\nexport function transition(item1: SceneItem, item2: SceneItem, {\n  from,\n  to,\n  duration = item1.getDuration(),\n  time = Math.max(item1.getDuration() - duration, 0),\n}: { from: IObject<any>, to: IObject<any>, duration?: number, time?: number }) {\n  item1.set({\n    [time]: to,\n    [time + duration]: from,\n  });\n  item2.set({\n    0: from,\n    [duration]: to,\n  });\n}\n\n/**\n * Make a fade in effect.\n * @memberof presets\n * @param {AnimatorState} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeIn} from \"scenejs\";\n// fadeIn({duration: 2});\nScene.fadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: Partial<PresetState>) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof presets\n * @param {AnimatorState} options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeOut} from \"scenejs\";\n// fadeOut({duration: 2});\nScene.fadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: Partial<PresetState>) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof presets\n * @param {AnimatorState} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {blink} from \"scenejs\";\n// blink({duration: 2});\nScene.blink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: Partial<PresetState>) {\n  return set(\"opacity\", [from, to, from], arguments[0]);\n}\n"],"names":["PREFIX","DATA_SCENE_ID","TIMING_FUNCTION","ROLES","transform","filter","attribute","ALIAS","easing","FIXED","_a","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","ITERATION_TIME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","ITERATION","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","PLAY_CSS","PREV_TIME","TICK_TIME","CURRENT_TIME","SELECTOR","TRANSFORM_NAME","OPTIONS","EVENTS","events","name","callback","once","isObject","n","_on","isArray","forEach","func","_this","event","push","_i","args","off","callback2","callbacks","index","indexOf","splice","data","target","type","currentTarget","apply","y1","y2","t","t2","x1","x2","x","solveX","dx","Math","abs","cubic","solveFromX","max","min","easingName","count","position","time","level","floor","STEP_START","steps","STEP_END","LINEAR","bezier","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","value","options","setOptions","isString","split","separator","newOptions","length","prefix","suffix","model","arr","map","v","PropertyObject","clone","join","toValue","alias","names","isProperty","isFixedProperty","roles","fixed","i","OBJECT","ARRAY","isPropertyObject","PROPERTY","STRING","NUMBER","num","round","properties","undefined","isCheckTrue","role","isInProperties","item","isActivate","state","isPaused","isEnded","id","css","styleId","toId","styleElement","$","innerText","document","body","insertAdjacentHTML","selector","random","IS_WINDOW","checkElement","getId","setId","makeId","text","match","isExportCSS","ANIMATION","getPlayState","isPausedCSS","addPlayClass","setTime","exportCSS","el","addAnimationEvent","setPlayCSS","setPlayState","defaultIndex","defalutValue","findIndex","duration","getDuration","isZeroDuration","isFinite","animationend","finish","animationstart","trigger","on","removeEvent","animationiteration","elapsedTime","currentTime","iterationCount","setIteration","addEvent","getter","setter","parent","constructor","prototype","camelize","animator","now","to","playSpeed","prevTime","delay","tickTime","pause","requestAnimationFrame","tick","iteration","iteraiontCount","direction","setters","getters","tslib_1","_super","fillMode","iterationTime","playState","curveArray","setEasing","setDuration","getActiveDuration","Infinity","getTime","toTime","start","end","isTick","activeDuration","getUnitTime","calculate","isDelay","getIterationTime","unit","toFixed","parseFloat","passIterationCount","maxIterationCount","currentIterationTime","setIterationTime","isReverse","isDirectionReverse","isFiniteDuration","isForwards","Animator","GetterSetter","EventTrigger","str","obj","matches","exec","trim","toPropertyObject","styles","RGBA","afterModel","COLOR_MODELS","arrayToColorObject","stringToRGBA","result","arrayToPropertyObject","values","splitComma","splitSpace","stringToBracketObject","charAt","stringToColorObject","object","size","get","toObject","arrObj","replace","merge","from","getType","FUNCTION","getValue","slice","set","raw","getPropertyName","getValueByNames","params","self","_set","isRole","stylesLength","isUndefined","frame","Frame","frameProperties","cssObject","toInnerProperties","TRANSFORM","FILTER","toCSSObject","cssArray","a1","a2","b1","b2","v1","dot","color1","color2","value1","value2","model1","model2","dotArray","colorModel","parseInt","a1Type","dotColor","type1","type2","isFunction1","isFunction2","dotObject","splitUnit","v2","isNaN","dotNumber","nextTime","prevValue","nextValue","ratio","times","decamelize","Object","stack","isPureObject","concat","getNames","pop","updateFrame","entries","keytime","prevEntry","states","nextEntries","intCount","ceil","currentDuration","lastTime","j","entry","divideTime","addEntry","unshift","load","originalDuration","ratio_1","items_1","obj_1","time2","items","elements","sceneId_1","element","setAttribute","realTime","this_1","innerValue","newFrame","setFrame","SceneItem","getDelay","frames","hasFrame","frameTime","needUpdate","getFrame","remove","unshiftTime","firstFrame","removeFrame","prepend","isStartZero","startTime","setElement","toArray","Element","style","targetFunc","attributes","cssText","toCSS","fromCSS","parentEasing","getEasing","getNowFrame","addTime","update","toFrame","isAccurate","left","right","realEasing","nameObject","hasName","nowEasing","_getNowValue","isFunction","prevFrame","prevNames","isFixed","keyframes","setTarget","parentDuration","itemState","reversedStates","reverse","getRealId","superParent","infiniteIndex","finiteStates","reduce","prev","cur","find","makeAnimationProperties","timingFunction","selectors","sel","peusdo","KEYFRAMES","_toKeyframes","isParent","pauseCSS","addClass","removeClass","isEndedCSS","endCSS","playCSS","hasClass","getEntries","lastEntry","usePrevValue","nextFrame","has","dotValue","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","getItem","setItem","parentStates","totalDuration","animtionElement","isSelector","Scene","scene","newItem","setSelector","play","property","_b","_c","arguments","_d","item1","item2","_e"],"mappings":"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"}