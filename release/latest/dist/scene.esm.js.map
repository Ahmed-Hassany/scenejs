{"version":3,"file":"scene.esm.js","sources":["../src/easing.ts","../src/consts.ts","../src/EventTrigger.ts","../src/PropertyObject.ts","../src/utils/property.ts","../src/utils.ts","../src/Animator.ts","../src/Frame.ts","../src/utils/dot.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts"],"sourcesContent":["import { EasingFunction } from \"./types\";\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunction = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunction = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import { IObject } from \"@daybrush/utils\";\nimport { RoleObject, OptionType, EventType, EasingFunction } from \"./types\";\nimport { EASE, EASE_IN, EASE_IN_OUT, LINEAR, EASE_OUT, STEP_START, STEP_END } from \"./easing\";\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const DATA_SCENE_ID = \"data-scene-id\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleObject = { transform: {}, filter: {}, attribute: {}, html: true };\nexport const ALIAS: IObject<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { [TIMING_FUNCTION]: true, contents: true, html: true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const PLAY_CSS = \"playCSS\";\nexport const PREV_TIME = \"prevTime\";\nexport const TICK_TIME = \"tickTime\";\nexport const CURRENT_TIME = \"currentTime\";\nexport const SELECTOR = \"selector\";\nexport const TRANSFORM_NAME = \"transform\";\nexport const EASINGS = {\n    \"linear\": LINEAR,\n    \"ease\": EASE,\n    \"ease-in\": EASE_IN,\n    \"ease-out\": EASE_OUT,\n    \"ease-in-out\": EASE_IN_OUT,\n    \"step-start\": STEP_START,\n    \"step-end\": STEP_END,\n};\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {$ts:OptionType}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {$ts:EventType}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n","import { isObject, isArray, toArray } from \"@daybrush/utils\";\nimport { CallbackType, EventParameter } from \"./types\";\n\n/**\n* attach and trigger event handlers.\n*/\nclass EventTrigger {\n    public events: { [name: string]: CallbackType[] };\n    /**\n      * @example\n  const et = new Scene.EventTrigger();\n  const scene = new Scene();\n\n  scene.on(\"call\", e => {\n      console.log(e.param);\n  });\n  et.on(\"call\", e => {\n      console.log(e.param);\n  });\n  scene.trigger(\"call\", {param: 1});\n  et.trigger(\"call\", {param: 1});\n       */\n    constructor() {\n        this.events = {};\n    }\n    public _on(name: string | EventParameter, callback?: CallbackType | CallbackType[], once?: boolean) {\n        const events = this.events;\n\n        if (isObject(name)) {\n            for (const n in name) {\n                this._on(n, name[n], once);\n            }\n            return;\n        }\n        if (!(name in events)) {\n            events[name] = [];\n        }\n        if (!callback) {\n            return;\n        }\n        if (isArray(callback)) {\n            callback.forEach(func => this._on(name, func, once));\n            return;\n        }\n        events[name].push(once ? function callback2(...args) {\n            callback(...args);\n            this.off(name, callback2);\n        } : callback);\n    }\n    /**\n      * Attach an event handler function for one or more events to target\n      * @param - event's name\n      * @param - function to execute when the event is triggered.\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  target.on(\"animate\", function() {\n      console.log(\"animate\");\n  });\n\n  target.trigger(\"animate\");\n\n    */\n    public on(name: string | EventParameter, callback?: CallbackType | CallbackType[]) {\n        this._on(name, callback);\n        return this;\n    }\n    /**\n      * Dettach an event handler function for one or more events to target\n      * @param - event's name\n      * @param -  function to execute when the event is triggered.\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  const callback = function() {\n      console.log(\"animate\");\n  };\n  target.on(\"animate\", callback);\n\n  target.off(\"animate\", callback);\n  target.off(\"animate\");\n\n      */\n    public off(name?: string, callback?: CallbackType) {\n        if (!name) {\n            this.events = {};\n        } else if (!callback) {\n            this.events[name] = [];\n        } else {\n            const callbacks = this.events[name];\n\n            if (!callbacks) {\n                return this;\n            }\n            const index = callbacks.indexOf(callback);\n\n            if (index !== -1) {\n                callbacks.splice(index, 1);\n            }\n        }\n        return this;\n    }\n    /**\n      * execute event handler\n      * @param - event's name\n      * @param - event handler's additional parameter\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  target.on(\"animate\", function(a1, a2) {\n      console.log(\"animate\", a1, a2);\n  });\n\n  target.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n      */\n    public trigger(name: string, ...data: any[]) {\n        const events = this.events;\n\n        if (!(name in events)) {\n            return this;\n        }\n\n        const args = data || [];\n\n        !args[0] && (args[0] = {});\n        const event = events[name];\n        const target = args[0];\n\n        target.type = name;\n        target.currentTarget = this;\n        !target.target && (target.target = this);\n        toArray(events[name]).forEach(callback => {\n            callback.apply(this, data);\n        });\n\n        return this;\n    }\n    public once(name: string | EventParameter, callback?: CallbackType | CallbackType[]) {\n        this._on(name, callback, true);\n        return this;\n    }\n}\nexport default EventTrigger;\n","import { isString } from \"@daybrush/utils\";\nimport { PropertyObjectState } from \"./types\";\n\n/**\n* Make string, array to PropertyObject for the dot product\n*/\nclass PropertyObject implements PropertyObjectState {\n    public value: any[];\n    public prefix: string = \"\";\n    public suffix: string = \"\";\n    public model: string = \"\";\n    public type: string = \"\";\n    public separator: string = \",\";\n\n    /**\n      * @param - This value is in the array format.\n      * @param - options\n      * @example\n  var obj = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n       */\n    constructor(value: string | any[], options?: Partial<PropertyObjectState>) {\n        options && this.setOptions(options);\n        this.value = isString(value) ? value.split(this.separator) : value;\n    }\n    public setOptions(newOptions: Partial<PropertyObjectState>) {\n        for (const name in newOptions) {\n            this[name as keyof PropertyObjectState] = newOptions[name as keyof PropertyObjectState];\n        }\n        return this;\n    }\n    /**\n      * the number of values.\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n\n  console.log(obj1.length);\n  // 3\n       */\n    public size() {\n        return this.value.length;\n    }\n    /**\n      * retrieve one of values at the index\n      * @param {Number} index - index\n      * @return {Object} one of values at the index\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n\n  console.log(obj1.get(0));\n  // 1\n       */\n    public get(index: number) {\n        return this.value[index];\n    }\n    /**\n      * Set the value at that index\n      * @param {Number} index - index\n      * @param {Object} value - text, a number, object to set\n      * @return {PropertyObject} An instance itself\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  obj1.set(0, 2);\n  console.log(obj1.toValue());\n  // 2,2,3\n       */\n    public set(index: number, value: any) {\n        this.value[index] = value;\n        return this;\n    }\n    /**\n      * create a copy of an instance itself.\n      * @return {PropertyObject} clone\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  const obj2 = obj1.clone();\n       */\n    public clone(): PropertyObject {\n        const {\n            separator,\n            prefix,\n            suffix,\n            model,\n            type,\n        } = this;\n        const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n        return new PropertyObject(arr, {\n            separator,\n            prefix,\n            suffix,\n            model,\n            type,\n        });\n    }\n    /**\n      * Make Property Object to String\n      * @return {String} Make Property Object to String\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  const obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\",\n  });\n  console.log(obj4.toValue());\n  // \"rgba(100,100,100,0.5)\"\n      */\n    public toValue(): string {\n        return this.prefix + this.join() + this.suffix;\n    }\n    /**\n      * Make Property Object's array to String\n      * @return {String} Join the elements of an array into a string\n      * @example\n      //rgba(100, 100, 100, 0.5)\n      var obj4 = new PropertyObject([100,100,100,0.5], {\n          \"separator\" : \",\",\n          \"prefix\" : \"rgba(\",\n          \"suffix\" : \")\"\n      });\n      obj4.join();  // =>   \"100,100,100,0.5\"\n       */\n    public join() {\n        return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.separator);\n    }\n    /**\n      * executes a provided function once per array element.\n      * @param {Function} callback - Function to execute for each element, taking three arguments\n      * @param {All} [callback.currentValue] The current element being processed in the array.\n      * @param {Number} [callback.index] The index of the current element being processed in the array.\n      * @param {Array} [callback.array] the array.\n      * @return {PropertyObject} An instance itself\n      * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  var obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n\n  obj4.forEach(t => {\n      console.log(t);\n  });  // =>   \"100,100,100,0.5\"\n      */\n    public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n        this.value.forEach(func);\n        return this;\n    }\n}\nexport default PropertyObject;\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {\n  COLOR_MODELS, isString,\n  splitComma, splitSpace, stringToRGBA,\n  RGBA, splitBracket, IObject, isArray\n} from \"@daybrush/utils\";\nimport { NameType } from \"../types\";\n\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const obj: IObject<string | PropertyObject> = {};\n  let length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      --length;\n      continue;\n    }\n    obj[matches[1].trim()] = toPropertyObject(matches[2].trim());\n  }\n  return {styles: obj, length};\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(text: string) {\n  // [prefix, value, other]\n  const { prefix: model, value, suffix: afterModel } = splitBracket(text);\n\n  if (typeof value === \"undefined\") {\n    return text;\n  }\n  if (COLOR_MODELS.indexOf(model) > -1) {\n    return arrayToColorObject(stringToRGBA(text));\n  }\n  // divide comma(,)\n  const obj = toPropertyObject(value, model);\n\n  let arr = [value];\n  let separator = \",\";\n  let prefix = `${model}(`;\n  let suffix = `)${afterModel}`;\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.separator;\n    arr = obj.value;\n    prefix += obj.prefix;\n    suffix = obj.suffix + suffix;\n  }\n  return new PropertyObject(arr, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  const result = stringToRGBA(value);\n\n  return result ? arrayToColorObject(result) : value;\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: any[], model?: NameType): PropertyObject;\nexport function toPropertyObject(value: IObject<any>, model?: NameType): IObject<any>;\nexport function toPropertyObject(value: string, model?: NameType): PropertyObject | string;\nexport function toPropertyObject(value: string | IObject<any> | any[], model?: NameType) {\n  if (!isString(value)) {\n    if (isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\" && model !== \"url\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: IObject<any> = {}) {\n  const model = object.model;\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => {\n      toObject(obj, result);\n    });\n  }\n  return result;\n}\n","import {\n    ROLES, MAXIMUM, FIXED, ALIAS,\n    PAUSED, RUNNING, PLAY, ENDED, PREFIX, PLAY_CSS, CURRENT_TIME, START_ANIMATION, EASINGS\n} from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport {\n    isArray, ANIMATION, ARRAY, OBJECT,\n    PROPERTY, STRING, NUMBER, IS_WINDOW, IObject, $, document, isObject, addEvent, removeEvent, isString,\n} from \"@daybrush/utils\";\nimport { EasingType, EasingFunction, NameType } from \"./types\";\nimport { toPropertyObject } from \"./utils/property\";\nimport { bezier, steps } from \"./easing\";\n\nexport function isPropertyObject(value: any): value is PropertyObject {\n    return value instanceof PropertyObject;\n}\nexport function setAlias(name: string, alias: string[]) {\n    ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n    const length = names.length;\n    let roles: any = ROLES;\n    let fixed: any = FIXED;\n\n    for (let i = 0; i < length - 1; ++i) {\n        !roles[names[i]] && (roles[names[i]] = {});\n        roles = roles[names[i]];\n        if (isFixedProperty) {\n            !fixed[names[i]] && (fixed[names[i]] = {});\n            fixed = fixed[names[i]];\n        }\n    }\n    isFixedProperty && (fixed[names[length - 1]] = true);\n    roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n    const type = typeof value;\n\n    if (type === OBJECT) {\n        if (isArray(value)) {\n            return ARRAY;\n        } else if (isPropertyObject(value)) {\n            return PROPERTY;\n        }\n    } else if (type === STRING || type === NUMBER) {\n        return \"value\";\n    }\n    return type;\n}\nexport function isPureObject(obj: any): obj is object {\n    return isObject(obj) && obj.constructor === Object;\n}\nexport function getNames(names: IObject<any>, stack: string[]) {\n    let arr: string[][] = [];\n\n    if (isPureObject(names)) {\n        for (const name in names) {\n            stack.push(name);\n            arr = arr.concat(getNames(names[name], stack));\n            stack.pop();\n        }\n    } else {\n        arr.push(stack.slice());\n    }\n    return arr;\n}\nexport function updateFrame(names: IObject<any>, properties: IObject<any>) {\n    for (const name in properties) {\n        const value = properties[name];\n\n        if (!isPureObject(value)) {\n            names[name] = true;\n            continue;\n        }\n        if (!isObject(names[name])) {\n            names[name] = {};\n        }\n        updateFrame(names[name], properties[name]);\n    }\n    return names;\n}\nexport function toFixed(num: number) {\n    return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function getValueByNames(\n    names: Array<string | number>,\n    properties: IObject<any>, length: number = names.length) {\n    let value = properties;\n\n    for (let i = 0; i < length; ++i) {\n        if (!isObject(value)) {\n            return undefined;\n        }\n        value = value[names[i]];\n    }\n    return value;\n}\nexport function isInProperties(roles: IObject<any>, args: NameType[], isCheckTrue?: boolean) {\n    const length = args.length;\n    let role: any = roles;\n\n    if (length === 0) {\n        return false;\n    }\n    for (let i = 0; i < length; ++i) {\n        if (role === true) {\n            return false;\n        }\n        role = role[args[i]];\n        if (!role || (!isCheckTrue && role === true)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isRole(args: NameType[], isCheckTrue?: boolean) {\n    return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: NameType[]) {\n    return isInProperties(FIXED, args, true);\n}\n\nexport interface IterationInterface {\n    currentTime: number;\n    iterationCount: number;\n    elapsedTime: number;\n}\nexport function setPlayCSS(item: Scene | SceneItem, isActivate: boolean) {\n    item.state[PLAY_CSS] = isActivate;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n    return item.state[PLAY_CSS] && item.isPaused();\n}\nexport function isEndedCSS(item: Scene | SceneItem) {\n    return !item.isEnded() && item.state[PLAY_CSS];\n}\n\nexport function exportCSS(id: number | string, css: string) {\n    const styleId = `${PREFIX}STYLE_${toId(id)}`;\n    const styleElement: HTMLElement = $(`#${styleId}`);\n\n    if (styleElement) {\n        styleElement.innerText = css;\n    } else {\n        document.body.insertAdjacentHTML(\"beforeend\",\n            `<style id=\"${styleId}\">${css}</style>`);\n    }\n}\nexport function makeId(selector?: boolean) {\n    for (; ;) {\n        const id = `${Math.floor(Math.random() * 10000000)}`;\n\n        if (!IS_WINDOW || !selector) {\n            return id;\n        }\n        const checkElement = $(`[data-scene-id=\"${id}\"]`);\n\n        if (!checkElement) {\n            return id;\n        }\n    }\n}\nexport function getRealId(item: Scene | SceneItem) {\n    return item.getId() || item.setId(makeId(false)).getId();\n}\nexport function toId(text: number | string) {\n    return `${text}`.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nexport function playCSS(\n    item: Scene | SceneItem, isExportCSS?: boolean,\n    playClassName?: string, properties: object = {}) {\n    if (!ANIMATION || item.getPlayState() === RUNNING) {\n        return;\n    }\n    const className = playClassName || START_ANIMATION;\n\n    if (isPausedCSS(item)) {\n        item.addPlayClass(true, className, properties);\n    } else {\n        if (item.isEnded()) {\n            item.setTime(0);\n        }\n        isExportCSS && item.exportCSS({ className });\n        const el = item.addPlayClass(false, className, properties);\n\n        if (!el) {\n            return;\n        }\n        addAnimationEvent(item, el);\n        setPlayCSS(item, true);\n    }\n    item.setPlayState(RUNNING);\n}\n\nexport function addAnimationEvent(item: Scene | SceneItem, el: Element) {\n    const state = item.state;\n    const duration = item.getDuration();\n    const isZeroDuration = !duration || !isFinite(duration);\n    const animationend = () => {\n        setPlayCSS(item, false);\n        item.finish();\n    };\n    const animationstart = () => {\n        item.trigger(PLAY);\n    };\n    item.once(ENDED, () => {\n        removeEvent(el, \"animationcancel\", animationend);\n        removeEvent(el, \"animationend\", animationend);\n        removeEvent(el, \"animationiteration\", animationiteration);\n        removeEvent(el, \"animationstart\", animationstart);\n    });\n    const animationiteration = ({ elapsedTime }: any) => {\n        const currentTime = elapsedTime;\n        const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n        state[CURRENT_TIME] = currentTime;\n        item.setIteration(iterationCount);\n    };\n    addEvent(el, \"animationcancel\", animationend);\n    addEvent(el, \"animationend\", animationend);\n    addEvent(el, \"animationiteration\", animationiteration);\n    addEvent(el, \"animationstart\", animationstart);\n}\n\nexport function getEasing(curveArray: string | number[] | EasingFunction): EasingType {\n    let easing: EasingType;\n\n    if (isString(curveArray)) {\n        if (curveArray in EASINGS) {\n            easing = EASINGS[curveArray];\n        } else {\n            const obj = toPropertyObject(curveArray);\n\n            if (isString(obj)) {\n                return 0;\n            } else {\n                if (obj.model === \"cubic-bezier\") {\n                    curveArray = obj.value.map(v => parseFloat(v));\n                    easing = bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]);\n                } else if (obj.model === \"steps\") {\n                    easing = steps(parseFloat(obj.value[0]), obj.value[1]);\n                } else {\n                    return 0;\n                }\n            }\n        }\n    } else if (isArray(curveArray)) {\n        easing = bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]);\n    } else {\n        easing = curveArray;\n    }\n\n    return easing;\n}\n","import {\n    THRESHOLD,\n    ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n    ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n    DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED,\n    RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE, PREV_TIME, TICK_TIME, CURRENT_TIME, ITERATION, OPTIONS, EASINGS\n} from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, steps } from \"./easing\";\nimport { toFixed, getEasing } from \"./utils\";\nimport { splitUnit, isString, camelize, requestAnimationFrame, isArray, cancelAnimationFrame } from \"@daybrush/utils\";\nimport {\n    IterationCountType, DirectionType, AnimatorState,\n    EasingFunction, FillModeType, PlayStateType, EasingType, AnimatorOptions,\n} from \"./types\";\nimport { toPropertyObject } from \"./utils/property\";\n\nfunction GetterSetter<T extends new (...args: any[]) => {}>(\n    getter: string[], setter: string[], parent: string) {\n    return (constructor: T) => {\n        const prototype = constructor.prototype;\n\n        getter.forEach(name => {\n            prototype[camelize(`get ${name}`)] = function() {\n                return this[parent][name];\n            };\n        });\n        setter.forEach(name => {\n            prototype[camelize(`set ${name}`)] = function(value: any) {\n                this[parent][name] = value;\n                return this;\n            };\n        });\n    };\n}\nexport function isDirectionReverse(iteration: number, iteraiontCount: IterationCountType, direction: DirectionType) {\n    if (direction === REVERSE) {\n        return true;\n    } else if (iteraiontCount !== INFINITE && iteration === iteraiontCount && iteraiontCount % 1 === 0) {\n        return direction === (iteration % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n    }\n    return direction === (iteration % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorState The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n\nconst setters = [\"id\", ITERATION_COUNT, DELAY, FILL_MODE,\n    DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n/**\n* play video, animation, the others\n* @extends EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n*/\n@GetterSetter(getters, setters, \"state\")\nclass Animator\n    <T extends AnimatorOptions = AnimatorOptions, U extends AnimatorState = AnimatorState> extends EventTrigger {\n    public state: U;\n    private timerId: number = 0;\n\n    /**\n     * @param - animator's options\n     * @example\n  const animator = new Animator({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.easing.EASE,\n  });\n     */\n    constructor(options?: Partial<T & AnimatorOptions>) {\n        super();\n        this.state = {\n            id: \"\",\n            easing: 0,\n            easingName: \"linear\",\n            iterationCount: 1,\n            delay: 0,\n            fillMode: \"forwards\",\n            direction: NORMAL,\n            playSpeed: 1,\n            currentTime: 0,\n            iterationTime: -1,\n            iteration: 0,\n            tickTime: 0,\n            prevTime: 0,\n            playState: PAUSED,\n            duration: 0,\n        } as U;\n        this.setOptions(options);\n    }\n    /**\n      * set animator's easing.\n      * @param curverArray - The speed curve of an animation.\n      * @return {Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.easing.EASE,\n  });\n      */\n    public setEasing(curveArray: string | number[] | EasingFunction): this {\n        const easing: EasingType = getEasing(curveArray);\n        const easingName = easing && easing[EASING_NAME] || \"linear\";\n        const state = this.state;\n\n        state[EASING] = easing;\n        state[EASING_NAME] = easingName;\n        return this;\n    }\n    /**\n      * set animator's options.\n      * @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n      * @param - animator's options\n      * @return {Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.eaasing.EASE,\n  });\n      */\n    public setOptions(options: Partial<AnimatorOptions> = {}): this {\n        for (const name in options) {\n            const value = options[name];\n\n            if (name === EASING) {\n                this.setEasing(value);\n                continue;\n            } else if (name === DURATION) {\n                value && this.setDuration(value);\n                continue;\n            }\n            if (OPTIONS.indexOf(name as any) > -1) {\n                this.state[name] = value;\n            }\n        }\n\n        return this;\n    }\n    /**\n      * Get the animator's total duration including delay\n      * @return {number} Total duration\n      * @example\n  animator.getTotalDuration();\n      */\n    public getTotalDuration(): number {\n        return this.getActiveDuration(true);\n    }\n    /**\n      * Get the animator's total duration excluding delay\n      * @return {number} Total duration excluding delay\n      * @example\n  animator.getActiveDuration();\n      */\n    public getActiveDuration(delay?: boolean): number {\n        const state = this.state;\n        const count = state[ITERATION_COUNT];\n        if (count === INFINITE) {\n            return Infinity;\n        }\n        return (delay ? state[DELAY] : 0) + this.getDuration() * count;\n    }\n    /**\n      * Check if the animator has reached the end.\n      * @return {boolean} ended\n      * @example\n  animator.isEnded(); // true or false\n      */\n    public isEnded(): boolean {\n        if (this.state[TICK_TIME] === 0 && this.state[PLAY_STATE] === PAUSED) {\n            return true;\n        } else if (this.getTime() < this.getActiveDuration()) {\n            return false;\n        }\n        return true;\n    }\n    /**\n      *Check if the animator is paused:\n      * @return {boolean} paused\n      * @example\n  animator.isPaused(); // true or false\n      */\n    public isPaused(): boolean {\n        return this.state[PLAY_STATE] === PAUSED;\n    }\n    public start(delay: number = this.state[DELAY]): boolean {\n        const state = this.state;\n\n        state[PLAY_STATE] = RUNNING;\n        if (state[TICK_TIME] >= delay) {\n            /**\n             * This event is fired when play animator.\n             * @event Animator#play\n             */\n            this.trigger(PLAY);\n            return true;\n        }\n        return false;\n    }\n    /**\n      * play animator\n      * @return {Animator} An instance itself.\n      */\n    public play(toTime?: number) {\n        const state = this.state;\n        const delay = state[DELAY];\n        const currentTime = this.getTime();\n\n        state[PLAY_STATE] = RUNNING;\n\n        if (this.isEnded() && (currentTime === 0 || currentTime >= this.getActiveDuration())) {\n            this.setTime(-delay, true);\n        }\n\n        this.timerId = requestAnimationFrame((time: number) => {\n            state[PREV_TIME] = time;\n            this.tick(time, toTime);\n        });\n        this.start();\n        return this;\n    }\n    /**\n      * pause animator\n      * @return {Animator} An instance itself.\n      */\n    public pause(): this {\n        const state = this.state;\n\n        if (state[PLAY_STATE] !== PAUSED) {\n            state[PLAY_STATE] = PAUSED;\n            /**\n             * This event is fired when animator is paused.\n             * @event Animator#paused\n             */\n            this.trigger(PAUSED);\n        }\n        cancelAnimationFrame(this.timerId);\n        return this;\n    }\n    /**\n       * end animator\n       * @return {Animator} An instance itself.\n      */\n    public finish() {\n        this.setTime(0);\n        this.state[TICK_TIME] = 0;\n        this.end();\n        return this;\n    }\n    /**\n       * end animator\n       * @return {Animator} An instance itself.\n      */\n    public end() {\n        this.pause();\n        /**\n             * This event is fired when animator is ended.\n             * @event Animator#ended\n             */\n        this.trigger(ENDED);\n        return this;\n    }\n    /**\n      * set currentTime\n      * @param {Number|String} time - currentTime\n      * @return {Animator} An instance itself.\n      * @example\n\n  animator.setTime(\"from\"); // 0\n  animator.setTime(\"to\"); // 100%\n  animator.setTime(\"50%\");\n  animator.setTime(10);\n  animator.getTime() // 10\n      */\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean) {\n        const activeDuration = this.getActiveDuration();\n        const state = this.state;\n        const prevTime = state[TICK_TIME];\n        const delay = state[DELAY];\n        let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n        state[TICK_TIME] = delay + currentTime;\n        if (currentTime < 0) {\n            currentTime = 0;\n        } else if (currentTime > activeDuration) {\n            currentTime = activeDuration;\n        }\n        state[CURRENT_TIME] = currentTime;\n        this.calculate();\n\n        if (isTick && !isParent) {\n            const tickTime = state[TICK_TIME];\n\n            if (prevTime < delay && time >= 0) {\n                this.start(0);\n            }\n            if (tickTime < prevTime || this.isEnded()) {\n                this.end();\n                return;\n            }\n        }\n        if (this.isDelay()) {\n            return this;\n        }\n        /**\n             * This event is fired when the animator updates the time.\n             * @event Animator#timeupdate\n             * @param {Object} param The object of data to be sent to an event.\n             * @param {Number} param.currentTime The total time that the animator is running.\n             * @param {Number} param.time The iteration time during duration that the animator is running.\n             * @param {Number} param.iterationCount The iteration count that the animator is running.\n             */\n        this.trigger(TIMEUPDATE, {\n            currentTime,\n            time: this.getIterationTime(),\n            iterationCount: state[ITERATION],\n        });\n\n        return this;\n    }\n    /**\n      * Get the animator's current time\n      * @return {number} current time\n      * @example\n  animator.getTime();\n      */\n    public getTime(): number {\n        return this.state[CURRENT_TIME];\n    }\n    public getUnitTime(time: string | number) {\n        if (isString(time)) {\n            const duration = this.getDuration() || 100;\n\n            if (time === \"from\") {\n                return 0;\n            } else if (time === \"to\") {\n                return duration;\n            }\n            const { unit, value } = splitUnit(time);\n\n            if (unit === \"%\") {\n                !this.getDuration() && (this.setDuration(duration));\n                return toFixed(parseFloat(time) / 100 * duration);\n            } else if (unit === \">\") {\n                return value + THRESHOLD;\n            } else {\n                return value;\n            }\n        } else {\n            return toFixed(time);\n        }\n    }\n    /**\n       * Check if the current state of animator is delayed.\n       * @return {boolean} check delay state\n       */\n    public isDelay() {\n        const state = this.state;\n        const delay = state[DELAY];\n        const tickTime = state[TICK_TIME];\n\n        return delay > 0 && (tickTime < delay);\n    }\n    public setIteration(iterationCount: number): this {\n        const state = this.state;\n        const passIterationCount = Math.floor(iterationCount);\n        const maxIterationCount = state[ITERATION_COUNT] === INFINITE ? Infinity : state[ITERATION_COUNT];\n\n        if (state[ITERATION] < passIterationCount && passIterationCount < maxIterationCount) {\n            /**\n                  * The event is fired when an iteration of an animation ends.\n                  * @event Animator#iteration\n                  * @param {Object} param The object of data to be sent to an event.\n                  * @param {Number} param.currentTime The total time that the animator is running.\n                  * @param {Number} param.iterationCount The iteration count that the animator is running.\n                  */\n            this.trigger(\"iteration\", {\n                currentTime: state[CURRENT_TIME],\n                iterationCount: passIterationCount,\n            });\n        }\n        state[ITERATION] = iterationCount;\n        return this;\n    }\n    protected calculate() {\n        const state = this.state;\n        const iterationCount = state[ITERATION_COUNT];\n        const fillMode = state[FILL_MODE];\n        const direction = state[DIRECTION];\n        const duration = this.getDuration();\n        const time = this.getTime();\n        const iteration = duration === 0 ? 0 : time / duration;\n        let currentIterationTime = duration ? time % duration : 0;\n\n        if (!duration) {\n            this.setIterationTime(0);\n            return this;\n        }\n        this.setIteration(iteration);\n\n        // direction : normal, reverse, alternate, alternate-reverse\n        // fillMode : forwards, backwards, both, none\n        const isReverse = isDirectionReverse(iteration, iterationCount, direction);\n\n        const isFiniteDuration = isFinite(duration);\n        if (isFiniteDuration && isReverse) {\n            currentIterationTime = duration - currentIterationTime;\n        }\n        if (isFiniteDuration && iterationCount !== INFINITE) {\n            const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n            // fill forwards\n            if (iteration >= iterationCount) {\n                currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n                isReverse && (currentIterationTime = duration - currentIterationTime);\n            }\n        }\n        this.setIterationTime(currentIterationTime);\n        return this;\n    }\n    private tick(now: number, to?: number) {\n        if (this.isPaused()) {\n            return;\n        }\n        const state = this.state;\n        const playSpeed = state[PLAY_SPEED];\n        const prevTime = state[PREV_TIME];\n        const delay = state[DELAY];\n        const tickTime = state[TICK_TIME];\n        const currentTime = tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n        state[PREV_TIME] = now;\n        this.setTime(currentTime - delay, true);\n        if (to && to * 1000 < now) {\n            this.pause();\n        }\n        if (state[PLAY_STATE] === PAUSED) {\n            return;\n        }\n\n        this.timerId = requestAnimationFrame((time: number) => {\n            this.tick(time, to);\n        });\n    }\n}\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#setId\n * @param {number | string} - String or number of id to be set in the animator\n * @return {Animator} An instance itself.\n */\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#getId\n * @return {number | string} the indicator of the item.\n */\n/**\n * Get a delay for the start of an animation.\n * @method Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Animator#setDelay\n * @param {number} delay - delay\n * @return {Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#getFillMode\n * @return {FillModeType} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#setFillMode\n * @param {FillModeType} fillMode - fillMode\n * @return {Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Animator#getIterationCount\n * @return {IterationCountType} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Animator#setIterationCount\n * @param {IterationCountType} iterationCount - iterationCount\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#getDirection\n * @return {DirectionType} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#setDirection\n * @param {DirectionType} direction - direction\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Animator#getPlayState\n * @return {PlayStateType} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Animator#setPlayState\n * @param {PlayStateType} playState - playState\n * @return {Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Animator#setDuration\n * @param {number} duration - duration\n * @return {Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Animator#getEasing\n * @return {EasingType} easing\n */\n/**\n * Get the speed curve's name\n * @method Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\n// tslint:disable-next-line:interface-name\ninterface Animator<T extends AnimatorOptions = AnimatorOptions, U extends AnimatorState = AnimatorState> {\n    setId(id: number | string): this;\n    getId(): number | string;\n    getIterationTime(): number;\n    setIterationTime(time: number): this;\n    setDelay(delay: number): this;\n    getDelay(): number;\n    setFillMode(fillMode: FillModeType): this;\n    getFillMode(): FillModeType;\n    setIterationCount(iterationCount: IterationCountType): this;\n    getIterationCount(): IterationCountType;\n    setDirection(direction: DirectionType): this;\n    getDirection(): DirectionType;\n    setPlayState(playState: PlayStateType): this;\n    getPlayState(): PlayStateType;\n    setPlaySpeed(playSpeed: number): this;\n    getPlaySpeed(): number;\n    setDuration(duration: number): this;\n    getDuration(): number;\n    getEasing(): EasingType;\n    getEasingName(): string;\n}\nexport default Animator;\n","import {\n    ALIAS, TIMING_FUNCTION, TRANSFORM_NAME, EASING_NAME\n} from \"./consts\";\nimport { isRole, getType, isPropertyObject, getValueByNames, isFixed, getNames, getEasing } from \"./utils\";\nimport { toPropertyObject, splitStyle, toObject } from \"./utils/property\";\nimport {\n    isObject, isArray, isString,\n    ANIMATION, TRANSFORM, FILTER, PROPERTY, FUNCTION, ARRAY, OBJECT, IObject, isUndefined\n} from \"@daybrush/utils\";\nimport { NameType } from \"./types\";\n\nfunction toInnerProperties(obj: IObject<string>) {\n    if (!obj) {\n        return \"\";\n    }\n    const arrObj = [];\n\n    for (const name in obj) {\n        arrObj.push(`${name.replace(/\\d$/g, \"\")}(${obj[name]})`);\n    }\n    return arrObj.join(\" \");\n}\n\n/* eslint-disable */\nfunction clone(target: IObject<any>, toValue = false) {\n    return merge({}, target, toValue);\n}\nfunction merge(to: IObject<any>, from: IObject<any>, toValue = false) {\n    for (const name in from) {\n        const value = from[name];\n        const type = getType(value);\n\n        if (type === PROPERTY) {\n            to[name] = toValue ? value.toValue() : value.clone();\n        } else if (type === FUNCTION) {\n            to[name] = toValue ? getValue([name], value) : value;\n        } else if (type === ARRAY) {\n            to[name] = value.slice();\n        } else if (type === OBJECT) {\n            if (isObject(to[name]) && !isPropertyObject(to[name])) {\n                merge(to[name], value, toValue);\n            } else {\n                to[name] = clone(value, toValue);\n            }\n        } else {\n            to[name] = from[name];\n        }\n    }\n    return to;\n}\n/* eslint-enable */\n\nfunction getPropertyName(args: NameType[]) {\n    return args[0] in ALIAS ? ALIAS[args[0]] : args;\n}\nfunction getValue(names: NameType[], value: any): any {\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n        return value.toValue();\n    } else if (type === FUNCTION) {\n        if (names[0] !== TIMING_FUNCTION) {\n            return getValue(names, value());\n        }\n    } else if (type === OBJECT) {\n        return clone(value, true);\n    }\n    return value;\n}\n/**\n* Animation's Frame\n*/\nclass Frame {\n    public properties: IObject<any>;\n    /**\n     * @param - properties\n     * @example\n  const frame = new Scene.Frame({\n      display: \"none\"\n      transform: {\n          translate: \"50px\",\n          scale: \"5, 5\",\n      }\n  });\n     */\n    constructor(properties: any = {}) {\n        this.properties = {};\n        this.set(properties);\n    }\n    /**\n      * get property value\n      * @param {...Number|String|PropertyObject} args - property name or value\n      * @example\n      frame.get(\"display\") // => \"none\", \"block\", ....\n      frame.get(\"transform\", \"translate\") // => \"10px,10px\"\n      */\n    public get(...args: NameType[]) {\n        const value = this.raw(...args);\n\n        return getValue(getPropertyName(args), value);\n    }\n\n    public raw(...args: NameType[]) {\n        return getValueByNames(getPropertyName(args), this.properties);\n    }\n    /**\n      * remove property value\n      * @param {...String} args - property name\n      * @return {Frame} An instance itself\n      * @example\n      frame.remove(\"display\")\n      */\n    public remove(...args: NameType[]) {\n        const params = getPropertyName(args);\n        const length = params.length;\n\n        if (!length) {\n            return this;\n        }\n        const value = getValueByNames(params, this.properties, length - 1);\n\n        if (isObject(value)) {\n            delete value[params[length - 1]];\n        }\n        return this;\n    }\n    /**\n      * set property\n      * @param {...Number|String|PropertyObject} args - property names or values\n      * @return {Frame} An instance itself\n      * @example\n  // one parameter\n  frame.set({\n      display: \"none\",\n      transform: {\n          translate: \"10px, 10px\",\n          scale: \"1\",\n      },\n      filter: {\n          brightness: \"50%\",\n          grayscale: \"100%\"\n      }\n  });\n\n  // two parameters\n  frame.set(\"transform\", {\n      translate: \"10px, 10px\",\n      scale: \"1\",\n  });\n\n  // three parameters\n  frame.set(\"transform\", \"translate\", \"50px\");\n    */\n    public set(...args: any[]) {\n        const self = this;\n        const length = args.length;\n        const params = args.slice(0, -1);\n        const value = args[length - 1];\n        const firstParam = params[0];\n\n        if (length === 1 && value instanceof Frame) {\n            self.merge(value);\n        } else if (firstParam in ALIAS) {\n            self._set(ALIAS[firstParam], value);\n        } else if (length === 2 && isArray(firstParam)) {\n            self._set(firstParam, value);\n        } else if (isPropertyObject(value)) {\n            if (isRole(params)) {\n                self.set(...params, toObject(value));\n            } else {\n                self._set(params, value);\n            }\n        } else if (isArray(value)) {\n            self._set(params, value);\n        } else if (isObject(value)) {\n            if (!self.has(...params) && isRole(params)) {\n                self._set(params, {});\n            }\n            for (const name in value) {\n                self.set(...params, name, value[name]);\n            }\n        } else if (isString(value)) {\n            if (isRole(params, true)) {\n                if (isFixed(params) || !isRole(params)) {\n                    this._set(params, value);\n                } else {\n                    const obj = toPropertyObject(value);\n\n                    if (isObject(obj)) {\n                        self.set(...params, obj);\n                    }\n                }\n                return this;\n            } else {\n                const { styles, length: stylesLength } = splitStyle(value);\n\n                for (const name in styles) {\n                    self.set(...params, name, styles[name]);\n                }\n                if (stylesLength) {\n                    return this;\n                }\n            }\n            self._set(params, value);\n        } else {\n            self._set(params, value);\n        }\n        return self;\n    }\n    /**\n      * Gets the names of properties.\n      * @return the names of properties.\n      * @example\n  // one parameter\n  frame.set({\n      display: \"none\",\n      transform: {\n          translate: \"10px, 10px\",\n          scale: \"1\",\n      },\n  });\n\n  // [[\"display\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n  console.log(frame.getNames());\n    */\n    public getNames(): string[][] {\n        return getNames(this.properties, []);\n    }\n    /**\n      * check that has property.\n      * @param {...String} args - property name\n      * @example\n      frame.has(\"property\", \"display\") // => true or false\n      */\n    public has(...args: NameType[]) {\n        const params = getPropertyName(args);\n        const length = params.length;\n\n        if (!length) {\n            return false;\n        }\n        return !isUndefined(getValueByNames(params, this.properties, length));\n    }\n    /**\n      * clone frame.\n      * @return {Frame} An instance of clone\n      * @example\n      frame.clone();\n      */\n    public clone() {\n        const frame = new Frame();\n\n        return frame.merge(this);\n    }\n    /**\n      * merge one frame to other frame.\n      * @param - target frame.\n      * @return {Frame} An instance itself\n      * @example\n      frame.merge(frame2);\n      */\n    public merge(frame: Frame) {\n        const properties = this.properties;\n        const frameProperties = frame.properties;\n\n        if (frameProperties) {\n            merge(properties, frameProperties);\n        }\n        return this;\n    }\n    /**\n      * Specifies an css object that coverted the frame.\n      * @return {object} cssObject\n      */\n    public toCSSObject() {\n        const properties = this.get();\n        const cssObject: IObject<string> = {};\n\n        for (const name in properties) {\n            if (isRole([name], true)) {\n                continue;\n            }\n            const value = properties[name];\n\n            if (name === TIMING_FUNCTION) {\n                cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n                    (isString(value) ? value : value[EASING_NAME]) || \"initial\";\n            } else {\n                cssObject[name] = value;\n            }\n        }\n        const transform = toInnerProperties(properties[TRANSFORM_NAME]);\n        const filter = toInnerProperties(properties.filter);\n\n        TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n        FILTER && filter && (cssObject[FILTER] = filter);\n        return cssObject;\n    }\n    /**\n      * Specifies an css text that coverted the frame.\n      * @return {string} cssText\n      */\n    public toCSS() {\n        const cssObject = this.toCSSObject();\n        const cssArray = [];\n\n        for (const name in cssObject) {\n            cssArray.push(`${name}:${cssObject[name]};`);\n        }\n        return cssArray.join(\"\");\n    }\n    private _set(args: NameType[], value: any) {\n        let properties = this.properties;\n        const length = args.length;\n\n        for (let i = 0; i < length - 1; ++i) {\n            const name = args[i];\n\n            !(name in properties) && (properties[name] = {});\n            properties = properties[name];\n        }\n        if (!length) {\n            return;\n        }\n        if (length === 1 && args[0] === TIMING_FUNCTION) {\n            properties[TIMING_FUNCTION] = getEasing(value);\n        } else {\n            const lastParam = args[length - 1];\n            properties[lastParam] = isString(value) && !isFixed(args)\n                ? toPropertyObject(value, lastParam)\n                : value;\n        }\n    }\n}\nexport default Frame;\n","\nimport PropertyObject from \"../PropertyObject\";\nimport { getType } from \"../utils\";\nimport { toPropertyObject } from \"./property\";\nimport { splitUnit, PROPERTY, FUNCTION, ARRAY, dot as dotNumber } from \"@daybrush/utils\";\nimport { EasingType } from \"../types\";\n\nfunction dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\nfunction dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.model;\n  const model2 = color2.model;\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n\nfunction dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.type;\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.separator || a2.separator,\n    prefix: a1.prefix || a2.prefix,\n    suffix: a1.suffix || a2.suffix,\n    model: a1.model || a2.model,\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === ARRAY) {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = dotNumber(v1.value, v2.value, b1, b2);\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import Animator, { isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n    toFixed,\n    isFixed,\n    playCSS,\n    toId,\n    exportCSS,\n    getRealId,\n    makeId,\n    isPausedCSS,\n    isRole,\n    isInProperties,\n    getValueByNames,\n    isEndedCSS,\n    setPlayCSS,\n    getNames,\n    updateFrame,\n} from \"./utils\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n    START_ANIMATION,\n    PREFIX, THRESHOLD,\n    TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, INFINITE,\n    REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n    EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION, DATA_SCENE_ID, SELECTOR, ROLES, CURRENT_TIME\n} from \"./consts\";\nimport {\n    isObject, isArray, isUndefined, decamelize,\n    ANIMATION, fromCSS, addClass, removeClass, hasClass,\n    KEYFRAMES, requestAnimationFrame, isFunction,\n    IObject, $, splitComma, toArray, isString, IArrayFormat,\n    dot as dotNumber,\n    find,\n    findIndex,\n} from \"@daybrush/utils\";\nimport {\n    NameType, RoleObject, AnimateElement, AnimatorState,\n    SceneItemState, SceneItemOptions, EasingType, PlayCondition, DirectionType\n} from \"./types\";\n\nfunction getNearTimeIndex(times: number[], time: number) {\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n        if (times[i] === time) {\n            return [i, i];\n        } else if (times[i] > time) {\n            return [i > 0 ? i - 1 : 0, i];\n        }\n    }\n    return [length - 1, length - 1];\n}\nfunction makeAnimationProperties(properties: object) {\n    const cssArray = [];\n\n    for (const name in properties) {\n        cssArray.push(`${ANIMATION}-${decamelize(name)}:${properties[name]};`);\n    }\n    return cssArray.join(\"\");\n}\nfunction addTime(times: number[], time: number) {\n    const length = times.length;\n    for (let i = 0; i < length; ++i) {\n        if (time < times[i]) {\n            times.splice(i, 0, time);\n            return;\n        }\n    }\n    times[length] = time;\n}\nfunction addEntry(entries: number[][], time: number, keytime: number) {\n    const prevEntry = entries[entries.length - 1];\n\n    (!prevEntry || prevEntry[0] !== time || prevEntry[1] !== keytime) &&\n        entries.push([toFixed(time), toFixed(keytime)]);\n}\nexport function getEntries(times: number[], states: AnimatorState[]) {\n    let entries = times.map(time => ([time, time]));\n    let nextEntries = [];\n\n    states.forEach(state => {\n        const iterationCount = state[ITERATION_COUNT] as number;\n        const delay = state[DELAY];\n        const playSpeed = state[PLAY_SPEED];\n        const direction = state[DIRECTION];\n        const intCount = Math.ceil(iterationCount);\n        const currentDuration = entries[entries.length - 1][0];\n        const length = entries.length;\n        const lastTime = currentDuration * iterationCount;\n\n        for (let i = 0; i < intCount; ++i) {\n            const isReverse =\n                direction === REVERSE ||\n                direction === ALTERNATE && i % 2 ||\n                direction === ALTERNATE_REVERSE && !(i % 2);\n\n            for (let j = 0; j < length; ++j) {\n                const entry = entries[isReverse ? length - j - 1 : j];\n                const time = entry[1];\n                const currentTime = currentDuration * i + (isReverse ? currentDuration - entry[0] : entry[0]);\n                const prevEntry = entries[isReverse ? length - j : j - 1];\n\n                if (currentTime > lastTime) {\n                    if (j !== 0) {\n                        const prevTime = currentDuration * i +\n                            (isReverse ? currentDuration - prevEntry[0] : prevEntry[0]);\n                        const divideTime = dotNumber(prevEntry[1], time, lastTime - prevTime, currentTime - lastTime);\n\n                        addEntry(nextEntries, (delay + currentDuration * iterationCount) / playSpeed, divideTime);\n                    }\n                    break;\n                } else if (\n                    currentTime === lastTime\n                    && nextEntries.length\n                    && nextEntries[nextEntries.length - 1][0] === lastTime + delay\n                ) {\n                    break;\n                }\n                addEntry(nextEntries, (delay + currentTime) / playSpeed, time);\n            }\n        }\n        // delay time\n        delay && nextEntries.unshift([0, nextEntries[0][1]]);\n\n        entries = nextEntries;\n        nextEntries = [];\n    });\n\n    return entries;\n}\n/**\n* manage Frame Keyframes and play keyframes.\n* @extends Animator\n* @example\nconst item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator<SceneItemOptions, SceneItemState> {\n    public times: number[] = [];\n    public items: IObject<Frame> = {};\n    public names: RoleObject = {};\n    public elements: AnimateElement[] = [];\n    public temp: Frame;\n    private needUpdate: boolean = true;\n    private target: any;\n    private targetFunc: (frame: Frame) => void;\n\n    /**\n      * @param - properties\n      * @param - options\n      * @example\n      const item = new SceneItem({\n          0: {\n              display: \"none\",\n          },\n          1: {\n              display: \"block\",\n              opacity: 0,\n          },\n          2: {\n              opacity: 1,\n          }\n      });\n       */\n    constructor(properties?: any, options?: Partial<SceneItemOptions>) {\n        super();\n        this.load(properties, options);\n    }\n    public getDuration() {\n        const times = this.times;\n        const length = times.length;\n\n        return (length === 0 ? 0 : times[length - 1]) || this.state[DURATION];\n    }\n    /**\n      * get size of list\n      * @return {Number} length of list\n      */\n    public size() {\n        return this.times.length;\n    }\n    public setDuration(duration: number) {\n        if (!duration) {\n            return this;\n        }\n        const originalDuration = this.getDuration();\n\n        if (originalDuration > 0) {\n            const ratio = duration / originalDuration;\n            const { times, items } = this;\n            const obj: IObject<Frame> = {};\n\n            this.times = times.map(time => {\n                const time2 = toFixed(time * ratio);\n\n                obj[time2] = items[time];\n\n                return time2;\n            });\n            this.items = obj;\n        } else {\n            this.newFrame(duration);\n        }\n        return this;\n    }\n    public setId(id?: number | string) {\n        const state = this.state;\n\n        state.id = id || makeId(!!length);\n        const elements = this.elements;\n\n        if (elements.length && !state[SELECTOR]) {\n            const sceneId = toId(this.getId());\n\n            state[SELECTOR] = `[${DATA_SCENE_ID}=\"${sceneId}\"]`;\n            elements.forEach(element => {\n                element.setAttribute(DATA_SCENE_ID, sceneId);\n            });\n        }\n        return this;\n    }\n\n    /**\n      * Set properties to the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {SceneItem} An instance itself\n      * @example\n  item.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\n  console.log(item.get(0, \"a\")); // \"b\"\n      */\n    public set(time: any, ...args: any[]) {\n        if (time instanceof SceneItem) {\n            return this.set(0, time);\n        } else if (isArray(time)) {\n            const length = time.length;\n\n            for (let i = 0; i < length; ++i) {\n                const t = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n                this.set(t, time[i]);\n            }\n        } else if (isObject(time)) {\n            for (const t in time) {\n                const value = time[t];\n\n                splitComma(t).forEach(eachTime => {\n                    const realTime = this.getUnitTime(eachTime);\n\n                    if (isNaN(realTime)) {\n                        getNames(value, [eachTime]).forEach(names => {\n                            const innerValue = getValueByNames(names.slice(1), value);\n                            const arr = isArray(innerValue) ?\n                                innerValue : [getValueByNames(names, this.target), innerValue];\n                            const length = arr.length;\n\n                            for (let i = 0; i < length; ++i) {\n                                this.newFrame(`${i / (length - 1) * 100}%`).set(...names, arr[i]);\n                            }\n                        });\n                    } else {\n                        this.set(realTime, value);\n                    }\n                });\n            }\n        } else if (!isUndefined(time)) {\n            const value = args[0];\n\n            splitComma(time + \"\").forEach(eachTime => {\n                const realTime = this.getUnitTime(eachTime);\n\n                if (value instanceof SceneItem) {\n                    const delay = value.getDelay();\n                    const frames = value.toObject(!this.hasFrame(realTime + delay));\n                    const duration = value.getDuration();\n                    const direction = value.getDirection();\n                    const isReverse = direction.indexOf(\"reverse\") > -1;\n\n                    for (const frameTime in frames) {\n                        const nextTime = isReverse ? duration - parseFloat(frameTime) : parseFloat(frameTime);\n                        this.set(realTime + nextTime, frames[frameTime]);\n                    }\n                } else if (args.length === 1 && isArray(value)) {\n                    value.forEach((item: any) => {\n                        this.set(realTime, item);\n                    });\n                } else {\n                    const frame = this.newFrame(realTime);\n\n                    frame.set(...args);\n                }\n            });\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * Get properties of the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} args property's name or properties\n      * @return {Number|String|PropertyObejct} property value\n      * @example\n  item.get(0, \"a\"); // item.getFrame(0).get(\"a\");\n  item.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n      */\n    public get(time: string | number, ...args: NameType[]) {\n        const frame = this.getFrame(time);\n\n        return frame && frame.get(...args);\n    }\n    public remove(time: string | number, ...args: any[]): this;\n    /**\n      * remove properties to the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {SceneItem} An instance itself\n      * @example\n  item.remove(0, \"a\");\n      */\n    public remove(time: string | number, ...args: NameType[]) {\n        if (args.length) {\n            const frame = this.getFrame(time);\n\n            frame && frame.remove(...args);\n        } else {\n            this.removeFrame(time);\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * Append the item or object at the last time.\n      * @param - the scene item or item object\n      * @return An instance itself\n      * @example\n  item.append(new SceneItem({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  }));\n  item.append({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n  item.set(item.getDuration(), {\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n      */\n    public append(item: SceneItem | IObject<any>) {\n        if (item instanceof SceneItem) {\n            this.set(this.getDuration(), item);\n        } else {\n            this.append(new SceneItem(item));\n        }\n        return this;\n    }\n    /**\n      * Push the front frames for the time and prepend the scene item or item object.\n      * @param - the scene item or item object\n      * @return An instance itself\n      */\n    public prepend(item: SceneItem | IObject<any>) {\n        if (item instanceof SceneItem) {\n            const unshiftTime = item.getDuration() + item.getDelay();\n            const firstFrame = this.getFrame(0);\n            // remove first frame\n            this.removeFrame(0);\n            this.unshift(unshiftTime);\n            this.set(0, item);\n            this.set(unshiftTime + THRESHOLD, firstFrame);\n        } else {\n            this.prepend(new SceneItem(item));\n        }\n        return this;\n    }\n    /**\n     * Push out the amount of time.\n     * @param - time to push\n     * @example\n   item.get(0); // frame 0\n   item.unshift(3);\n   item.get(3) // frame 0\n     */\n    public unshift(time: number) {\n        const { times, items } = this;\n        const obj: IObject<Frame> = {};\n\n        this.times = times.map(t => {\n            const time2 = toFixed(time + t);\n\n            obj[time2] = items[t];\n            return time2;\n        });\n        this.items = obj;\n        return this;\n    }\n    /**\n     * Get the frames in the item in object form.\n     * @return {}\n     * @example\n item.toObject();\n // {0: {display: \"none\"}, 1: {display: \"block\"}}\n     */\n    public toObject(isStartZero = true): IObject<Frame> {\n        const obj: IObject<Frame> = {};\n        const delay = this.getDelay();\n\n        this.forEach((frame: Frame, time: number) => {\n            obj[(!time && !isStartZero ? THRESHOLD : 0) + delay + time] = frame.clone();\n        });\n        return obj;\n    }\n    /**\n     * Specifies an element to synchronize items' keyframes.\n     * @param {string} selectors - Selectors to find elements in items.\n     * @return {SceneItem} An instance itself\n     * @example\nitem.setSelector(\"#id.class\");\n     */\n    public setSelector(target: string | boolean | ((id: number | string) => string)) {\n        if (isFunction(target)) {\n            this.setElement(target(this.getId()));\n        } else {\n            this.setElement(target);\n        }\n        return this;\n    }\n    /**\n     * Get the elements connected to SceneItem.\n     */\n    public getElements(): AnimateElement[] {\n        return this.elements;\n    }\n    /**\n     * Specifies an element to synchronize item's keyframes.\n     * @param - elements to synchronize item's keyframes.\n     * @param - Make sure that you have peusdo.\n     * @return {SceneItem} An instance itself\n     * @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n     */\n    public setElements(target: boolean | string | AnimateElement | IArrayFormat<AnimateElement>): this {\n        return this.setElement(target);\n    }\n    /**\n     * Specifies an element to synchronize item's keyframes.\n     * @param - elements to synchronize item's keyframes.\n     * @param - Make sure that you have peusdo.\n     * @return {SceneItem} An instance itself\n     * @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n     */\n    public setElement(target: boolean | string | AnimateElement | IArrayFormat<AnimateElement>) {\n        const state = this.state;\n        let elements: AnimateElement[] = [];\n\n        if (!target) {\n            return this;\n        } else if (target === true || isString(target)) {\n            const selector = target === true ? `${state.id}` : target;\n            const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(selector);\n\n            elements = toArray($(matches ? matches[1] : selector, true));\n            state[SELECTOR] = selector;\n        } else {\n            elements = (target instanceof Element) ? [target] : toArray(target);\n        }\n        if (!elements.length) {\n            return this;\n        }\n        this.elements = elements;\n        this.setId(this.getId());\n        this.target = elements[0].style;\n        this.targetFunc = (frame: Frame) => {\n            const attributes = frame.get(\"attribute\");\n\n            if (attributes) {\n                for (const name in attributes) {\n                    elements.forEach(el => {\n                        el.setAttribute(name, attributes[name]);\n                    });\n                }\n            }\n            if (frame.has(\"html\")) {\n                const html = frame.get(\"html\");\n\n                elements.forEach(el => {\n                    el.innerHTML = html;\n                });\n            }\n            const cssText = frame.toCSS();\n\n            if (state.cssText !== cssText) {\n                state.cssText = cssText;\n\n                elements.forEach(el => {\n                    el.style.cssText += cssText;\n                });\n                return frame;\n            }\n        };\n        return this;\n    }\n    public setTarget(target: any): this {\n        this.target = target;\n        this.targetFunc = (frame: Frame) => {\n            const obj = frame.get();\n\n            for (const name in obj) {\n                target[name] = obj[name];\n            }\n        };\n        return this;\n    }\n    /**\n      * add css styles of items's element to the frame at that time.\n      * @param {Array} properties - elements to synchronize item's keyframes.\n      * @return {SceneItem} An instance itself\n      * @example\n  item.setElement(document.querySelector(\"#id.class\"));\n  item.setCSS(0, [\"opacity\"]);\n  item.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n      */\n    public setCSS(time: number, properties: string[]) {\n        this.set(time, fromCSS(this.elements, properties));\n        return this;\n    }\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean, parentEasing?: EasingType) {\n        super.setTime(time, isTick, isParent);\n\n        const iterationTime = this.getIterationTime();\n        const easing = this.getEasing() || parentEasing;\n        const frame = this.getNowFrame(iterationTime, easing);\n        const currentTime = this.getTime();\n\n        this.temp = frame;\n        /**\n         * This event is fired when timeupdate and animate.\n         * @event SceneItem#animate\n         * @param {Number} param.currentTime The total time that the animator is running.\n         * @param {Number} param.time The iteration time during duration that the animator is running.\n         * @param {Frame} param.frame frame of that time.\n         */\n        this.trigger(\"animate\", {\n            frame,\n            currentTime,\n            time: iterationTime,\n        });\n        this.targetFunc && this.targetFunc(frame);\n        return this;\n    }\n    /**\n      * update property names used in frames.\n      * @return {SceneItem} An instance itself\n      * @example\n  item.update();\n      */\n    public update() {\n        const names = {};\n        this.forEach(frame => {\n            updateFrame(names, frame.properties);\n        });\n        this.names = names;\n        this.needUpdate = false;\n        return this;\n    }\n    /**\n      * Create and add a frame to the sceneItem at that time\n      * @param {Number} time - frame's time\n      * @return {Frame} Created frame.\n      * @example\n  item.newFrame(time);\n      */\n    public newFrame(time: string | number) {\n        let frame = this.getFrame(time);\n\n        if (frame) {\n            return frame;\n        }\n        frame = new Frame();\n        this.setFrame(time, frame);\n        return frame;\n    }\n    /**\n      * Add a frame to the sceneItem at that time\n      * @param {Number} time - frame's time\n      * @return {SceneItem} An instance itself\n      * @example\n  item.setFrame(time, frame);\n      */\n    public setFrame(time: string | number, frame: Frame) {\n        const realTime = this.getUnitTime(time);\n\n        this.items[realTime] = frame;\n        addTime(this.times, realTime);\n        this.needUpdate = true;\n        return this;\n    }\n    public getFrame(time: number | string, ...names: any[]): Frame;\n    /**\n      * get sceneItem's frame at that time\n      * @param {Number} time - frame's time\n      * @return {Frame} sceneItem's frame at that time\n      * @example\n  const frame = item.getFrame(time);\n      */\n    public getFrame(time: number | string) {\n        return this.items[this.getUnitTime(time)];\n    }\n    public removeFrame(time: number | string, ...names: any[]): this;\n    /**\n      * remove sceneItem's frame at that time\n      * @param - frame's time\n      * @return {SceneItem} An instance itself\n      * @example\n  item.removeFrame(time);\n      */\n    public removeFrame(time: number | string) {\n        const realTime = this.getUnitTime(time);\n        const items = this.items;\n        const index = this.times.indexOf(realTime);\n\n        delete items[realTime];\n\n        // remove time\n        if (index > -1) {\n            this.times.splice(index, 1);\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * check if the item has a frame at that time\n      * @param {Number} time - frame's time\n      * @return {Boolean} true: the item has a frame // false: not\n      * @example\n  if (item.hasFrame(10)) {\n      // has\n  } else {\n      // not\n  }\n      */\n    public hasFrame(time: number | string) {\n        return this.getUnitTime(time) in this.items;\n    }\n    /**\n      * Check if keyframes has propery's name\n      * @param - property's time\n      * @return {boolean} true: if has property, false: not\n      * @example\n    item.hasName([\"transform\", \"translate\"]); // true or not\n      */\n    public hasName(args: string[]) {\n        this.needUpdate && this.update();\n        return isInProperties(this.names, args, true);\n    }\n    /**\n      * merge frame of the previous time at the next time.\n    * @param - The time of the frame to merge\n    * @param - The target frame\n      * @return {SceneItem} An instance itself\n      * @example\n  // getFrame(1) contains getFrame(0)\n  item.merge(0, 1);\n      */\n    public mergeFrame(time: number | string, frame: Frame) {\n        if (frame) {\n            const toFrame = this.newFrame(time);\n\n            toFrame.merge(frame);\n        }\n        return this;\n    }\n    /**\n      * Get frame of the current time\n      * @param {Number} time - the current time\n      * @param {function} easing - the speed curve of an animation\n      * @return {Frame} frame of the current time\n      * @example\n  let item = new SceneItem({\n      0: {\n          display: \"none\",\n      },\n      1: {\n          display: \"block\",\n          opacity: 0,\n      },\n      2: {\n          opacity: 1,\n      }\n  });\n  // opacity: 0.7; display:\"block\";\n  const frame = item.getNowFrame(1.7);\n      */\n    public getNowFrame(time: number, easing?: EasingType, isAccurate?: boolean) {\n        this.needUpdate && this.update();\n        const frame = new Frame();\n        const [left, right] = getNearTimeIndex(this.times, time);\n        let realEasing = this.getEasing() || easing;\n        let nameObject = this.names;\n\n        if (this.hasName([TIMING_FUNCTION])) {\n            const nowEasing = this.getNowValue(time, [TIMING_FUNCTION], left, right, false, 0, true);\n\n            isFunction(nowEasing) && (realEasing = nowEasing);\n        }\n        if (isAccurate) {\n            const prevFrame = this.getFrame(time);\n            const prevNames = updateFrame({}, prevFrame.properties);\n\n            for (const name in ROLES) {\n                if (name in prevNames) {\n                    prevNames[name] = nameObject[name];\n                }\n            }\n            nameObject = prevNames;\n        }\n        const names = getNames(nameObject, []);\n\n        names.forEach(properties => {\n            const value = this.getNowValue(time, properties, left, right, isAccurate, realEasing, isFixed(properties));\n\n            if (isUndefined(value)) {\n                return;\n            }\n            frame.set(properties, value);\n        });\n        return frame;\n    }\n    public load(properties: any = {}, options = properties.options) {\n        options && this.setOptions(options);\n\n        if (isArray(properties)) {\n            this.set(properties);\n        } else if (properties.keyframes) {\n            this.set(properties.keyframes);\n        } else {\n            for (const time in properties) {\n                if (time !== \"options\") {\n                    this.set({\n                        [time]: properties[time],\n                    });\n                }\n            }\n        }\n        if (options && options[DURATION]) {\n            this.setDuration(options[DURATION]);\n        }\n        return this;\n    }\n    /**\n       * clone SceneItem.\n       * @return {SceneItem} An instance of clone\n       * @example\n       * item.clone();\n       */\n    public clone() {\n        const item = new SceneItem();\n\n        item.setOptions(this.state);\n        this.forEach((frame: Frame, time: number) => {\n            item.setFrame(time, frame.clone());\n        });\n        return item;\n    }\n    /**\n       * executes a provided function once for each scene item.\n       * @param - Function to execute for each element, taking three arguments\n       * @return {Keyframes} An instance itself\n       */\n    public forEach(callback: (item: Frame, time: number, items: IObject<Frame>) => void) {\n        const times = this.times;\n        const items = this.items;\n\n        times.forEach(time => {\n            callback(items[time], time, items);\n        });\n        return this;\n    }\n    public setOptions(options: Partial<SceneItemOptions> = {}) {\n        super.setOptions(options);\n        const { id, selector, elements, element, target } = options;\n\n        id && this.setId(id);\n        if (target) {\n            this.setTarget(target);\n        } else if (selector) {\n            this.setSelector(selector);\n        } else if (elements || element) {\n            this.setElement(elements || element);\n        }\n        return this;\n    }\n    public toCSS(\n        playCondition: PlayCondition = { className: START_ANIMATION },\n        parentDuration = this.getDuration(), states: AnimatorState[] = []) {\n        const itemState = this.state;\n        const selector = itemState[SELECTOR];\n\n        if (!selector) {\n            return \"\";\n        }\n        const originalDuration = this.getDuration();\n        itemState[DURATION] = originalDuration;\n        states.push(itemState);\n\n        const reversedStates = toArray(states).reverse();\n        const id = toId(getRealId(this));\n        const superParent = states[0];\n        const infiniteIndex = findIndex(reversedStates, state => {\n            return state[ITERATION_COUNT] === INFINITE || !isFinite(state[DURATION]);\n        }, states.length - 1);\n        const finiteStates = reversedStates.slice(0, infiniteIndex);\n        const duration = parentDuration || finiteStates.reduce((prev, cur) => {\n            return (cur[DELAY] + prev * (cur[ITERATION_COUNT] as number)) / cur[PLAY_SPEED];\n        }, originalDuration);\n        const delay = reversedStates.slice(infiniteIndex).reduce((prev, cur) => {\n            return (prev + cur[DELAY]) / cur[PLAY_SPEED];\n        }, 0);\n        const easingName = find(reversedStates, state => (state[EASING] && state[EASING_NAME]), itemState)[EASING_NAME];\n        const iterationCount = reversedStates[infiniteIndex][ITERATION_COUNT];\n        const fillMode = superParent[FILL_MODE];\n        const direction = reversedStates[infiniteIndex][DIRECTION];\n        const cssText = makeAnimationProperties({\n            fillMode,\n            direction,\n            iterationCount,\n            delay: `${delay}s`,\n            name: `${PREFIX}KEYFRAMES_${id}`,\n            duration: `${duration / superParent[PLAY_SPEED]}s`,\n            timingFunction: easingName,\n        });\n        const selectors = splitComma(selector).map(sel => {\n            const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(sel);\n\n            if (matches) {\n                return [matches[1], matches[2]];\n            } else {\n                return [sel, \"\"];\n            }\n        });\n        const className = playCondition.className;\n        const selectorCallback = playCondition.selector;\n        const preselector = isFunction(selectorCallback) ? selectorCallback(this, selector) : selectorCallback;\n\n        return `\n    ${preselector || selectors.map(([sel, peusdo]) => `${sel}.${className}${peusdo}`)} {${cssText}}\n    ${selectors.map(([sel, peusdo]) => `${sel}.${PAUSE_ANIMATION}${peusdo}`)} {${ANIMATION}-play-state: paused;}\n    @${KEYFRAMES} ${PREFIX}KEYFRAMES_${id}{${this._toKeyframes(duration, finiteStates, direction)}}`;\n    }\n    /**\n     * Export the CSS of the items to the style.\n     * @param - Add a selector or className to play.\n     * @return {SceneItem} An instance itself\n     */\n    public exportCSS(\n        playCondition?: PlayCondition,\n        duration?: number, options?: AnimatorState[]) {\n        if (!this.elements.length) {\n            return \"\";\n        }\n        const css = this.toCSS(playCondition, duration, options);\n        const isParent = options && !isUndefined(options[ITERATION_COUNT]);\n\n        !isParent && exportCSS(getRealId(this), css);\n        return this;\n    }\n    public pause() {\n        super.pause();\n        isPausedCSS(this) && this.pauseCSS();\n        return this;\n    }\n    public pauseCSS() {\n        this.elements.forEach(element => {\n            addClass(element, PAUSE_ANIMATION);\n        });\n        return this;\n    }\n    public endCSS() {\n        this.elements.forEach(element => {\n            removeClass(element, PAUSE_ANIMATION);\n            removeClass(element, START_ANIMATION);\n        });\n        setPlayCSS(this, false);\n        return this;\n    }\n    public end() {\n        isEndedCSS(this) && this.endCSS();\n        super.end();\n        return this;\n    }\n    /**\n      * Play using the css animation and keyframes.\n      * @param - Check if you want to export css.\n      * @param [playClassName=\"startAnimation\"] - Add a class name to play.\n      * @param - The shorthand properties for six of the animation properties.\n      * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n      * @example\n  item.playCSS();\n  item.playCSS(false, \"startAnimation\", {\n      direction: \"reverse\",\n      fillMode: \"forwards\",\n  });\n      */\n    public playCSS(isExportCSS = true, playClassName?: string, properties: object = {}) {\n        playCSS(this, isExportCSS, playClassName, properties);\n        return this;\n    }\n    public addPlayClass(isPaused: boolean, playClassName?: string, properties: object = {}) {\n        const elements = this.elements;\n        const length = elements.length;\n        const cssText = makeAnimationProperties(properties);\n\n        if (!length) {\n            return;\n        }\n        if (isPaused) {\n            elements.forEach(element => {\n                removeClass(element, PAUSE_ANIMATION);\n            });\n        } else {\n            elements.forEach(element => {\n                element.style.cssText += cssText;\n                if (hasClass(element, START_ANIMATION)) {\n                    removeClass(element, START_ANIMATION);\n                    requestAnimationFrame(() => {\n                        requestAnimationFrame(() => {\n                            addClass(element, START_ANIMATION);\n                        });\n                    });\n                } else {\n                    addClass(element, START_ANIMATION);\n                }\n            });\n        }\n        return elements[0];\n    }\n    public getNowValue(\n        time: number,\n        properties: string[],\n        left?: number,\n        right?: number,\n        isAccurate?: boolean,\n        easing?: EasingType,\n        usePrevValue?: boolean,\n    ) {\n        const times = this.times;\n        const length = times.length;\n\n        let prevTime: number;\n        let nextTime: number;\n        let prevFrame: Frame;\n        let nextFrame: Frame;\n        const isUndefinedLeft = isUndefined(left);\n        const isUndefinedRight = isUndefined(right);\n        if (isUndefinedLeft || isUndefinedRight) {\n            const indicies = getNearTimeIndex(times, time);\n            isUndefinedLeft && (left = indicies[0]);\n            isUndefinedRight && (right = indicies[1]);\n        }\n\n        for (let i = left; i >= 0; --i) {\n            const frame = this.getFrame(times[i]);\n\n            if (frame.has(...properties)) {\n                prevTime = times[i];\n                prevFrame = frame;\n                break;\n            }\n        }\n        const prevValue = prevFrame && prevFrame.raw(...properties);\n\n        if (isAccurate && !isRole([properties[0]])) {\n            return prevTime === time ? prevValue : undefined;\n        }\n        if (usePrevValue) {\n            return prevValue;\n        }\n        for (let i = right; i < length; ++i) {\n            const frame = this.getFrame(times[i]);\n\n            if (frame.has(...properties)) {\n                nextTime = times[i];\n                nextFrame = frame;\n                break;\n            }\n        }\n        const nextValue = nextFrame && nextFrame.raw(...properties);\n\n        if (!prevFrame || isUndefined(prevValue)) {\n            return nextValue;\n        }\n        if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n            return prevValue;\n        }\n        return dotValue(time, Math.max(prevTime, 0), nextTime, prevValue, nextValue, easing);\n    }\n    private _toKeyframes(duration: number, states: AnimatorState[], direction: DirectionType) {\n        const frames: IObject<string> = {};\n        const times = this.times.slice();\n\n        if (!times.length) {\n            return \"\";\n        }\n        const originalDuration = this.getDuration();\n        (!this.getFrame(0)) && times.unshift(0);\n        (!this.getFrame(originalDuration)) && times.push(originalDuration);\n        const entries = getEntries(times, states);\n        const lastEntry = entries[entries.length - 1];\n\n        // end delay time\n        lastEntry[0] < duration && addEntry(entries, duration, lastEntry[1]);\n        let prevTime = -1;\n\n        return entries.map(([time, keytime]) => {\n            if (!frames[keytime]) {\n                frames[keytime] =\n                    (!this.hasFrame(keytime) || keytime === 0 || keytime === originalDuration ?\n                        this.getNowFrame(keytime) : this.getNowFrame(keytime, 0, true)).toCSS();\n            }\n\n            let frameTime = time / duration * 100;\n\n            if (frameTime - prevTime < THRESHOLD) {\n                frameTime += THRESHOLD;\n            }\n            prevTime = frameTime;\n            return `${Math.min(frameTime, 100)}%{\n                ${time === 0 && !isDirectionReverse(0, 1, direction) ? \"\" : frames[keytime]}\n            }`;\n        }).join(\"\");\n    }\n}\n\nexport default SceneItem;\n","import Animator from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { SELECTOR, DURATION, DELAY, RUNNING } from \"./consts\";\nimport { playCSS, exportCSS, getRealId, isPausedCSS, isEndedCSS, setPlayCSS } from \"./utils\";\nimport { isFunction, IS_WINDOW, IObject, $, IArrayFormat } from \"@daybrush/utils\";\nimport {\n    AnimateElement, SceneState, SceneOptions, EasingType,\n    AnimatorState, SceneItemOptions, PlayCondition\n} from \"./types\";\nimport Frame from \"./Frame\";\nimport ListMap from \"list-map\";\n\n/**\n * manage sceneItems and play Scene.\n * @sort 1\n */\nclass Scene extends Animator<SceneOptions, SceneState> {\n    /**\n    * version info\n    * @type {string}\n    * @example\n    * Scene.VERSION // #__VERSION__#\n    */\n    public static VERSION: string = \"#__VERSION__#\";\n    public items: ListMap<Scene | SceneItem> = new ListMap();\n    public temp: IObject<Frame>;\n    /**\n    * @param - properties\n    * @param - options\n    * @example\n    const scene = new Scene({\n      item1: {\n        0: {\n          display: \"none\",\n        },\n        1: {\n          display: \"block\",\n          opacity: 0,\n        },\n        2: {\n          opacity: 1,\n        },\n      },\n      item2: {\n        2: {\n          opacity: 1,\n        },\n      }\n    });\n      */\n    constructor(properties?: {options?: Partial<SceneOptions>} & IObject<any>, options?: Partial<SceneOptions>) {\n        super();\n        this.load(properties, options);\n    }\n    public getDuration() {\n        let time = 0;\n\n        this.forEach(item => {\n            time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n        });\n        return time || this.state[DURATION];\n    }\n    public setDuration(duration: number) {\n        const items = this.items;\n        const sceneDuration = this.getDuration();\n\n        if (duration === 0 || !isFinite(sceneDuration)) {\n            return this;\n        }\n        if (sceneDuration === 0) {\n            this.forEach(item => {\n                item.setDuration(duration);\n            });\n        } else {\n            const ratio = duration / sceneDuration;\n\n            this.forEach(item => {\n                item.setDelay(item.getDelay() * ratio);\n                item.setDuration(item.getDuration() * ratio);\n            });\n        }\n        super.setDuration(duration);\n        return this;\n    }\n    public getItem<T extends (Scene | SceneItem) = Scene | SceneItem>(name: number | string): T;\n    /**\n    * get item in scene by name\n    * @param - The item's name\n    * @return {Scene | SceneItem} item\n    * @example\n    const item = scene.getItem(\"item1\")\n    */\n    public getItem(name: number | string) {\n        return this.items.get(name);\n    }\n    /**\n    * create item in scene\n    * @param {} name - name of item to create\n    * @param {} options - The option object of SceneItem\n    * @return {} Newly created item\n    * @example\n    const item = scene.newItem(\"item1\")\n    */\n    public newItem(name: number | string, options: Partial<SceneItemOptions> = {}): Scene | SceneItem {\n        if (this.items.has(name)) {\n            return this.items.get(name);\n        }\n        const item = new SceneItem();\n\n        this.setItem(name, item);\n        item.setOptions(options);\n\n        return item;\n    }\n    /**\n    * remove item in scene\n    * @param - name of item to remove\n    * @return  An instance itself\n    * @example\n    const item = scene.newItem(\"item1\")\n\n    scene.removeItem(\"item1\");\n    */\n    public removeItem(name: number | string): this {\n        this.items.remove(name);\n        return this;\n    }\n    /**\n    * add a sceneItem to the scene\n    * @param - name of item to create\n    * @param - sceneItem\n    * @example\n    const item = scene.newItem(\"item1\")\n    */\n    public setItem(name: number | string, item: Scene | SceneItem) {\n        item.setId(name);\n        this.items.set(name, item);\n        return this;\n    }\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean, parentEasing?: EasingType) {\n        super.setTime(time, isTick, isParent);\n\n        const iterationTime = this.getIterationTime();\n        const easing = this.getEasing() || parentEasing;\n        const frames: IObject<any> = {};\n\n        this.forEach(item => {\n            item.setTime(iterationTime * item.getPlaySpeed() - item.getDelay(), isTick, true, easing);\n\n            frames[item.getId()] = item.temp;\n        });\n        this.temp = frames;\n\n        /**\n         * This event is fired when timeupdate and animate.\n         * @event Scene#animate\n         * @param {object} param The object of data to be sent to an event.\n         * @param {number} param.currentTime The total time that the animator is running.\n         * @param {number} param.time The iteration time during duration that the animator is running.\n         * @param {object} param.frames frames of that time.\n         * @example\nconst scene = new Scene({\n    a: {\n        0: {\n            opacity: 0,\n        },\n        1: {\n            opacity: 1,\n        }\n    },\n    b: {\n        0: {\n            opacity: 0,\n        },\n        1: {\n            opacity: 1,\n        }\n    }\n}).on(\"animate\", e => {\n    console.log(e.frames);\n    // {a: Frame, b: Frame}\n    console.log(e.frames.a.get(\"opacity\"));\n});\n             */\n        this.trigger(\"animate\", {\n            frames,\n            currentTime: this.getTime(),\n            time: iterationTime,\n        });\n\n        return this;\n    }\n    /**\n     * executes a provided function once for each scene item.\n     * @param - Function to execute for each element, taking three arguments\n     * @return {Scene} An instance itself\n     */\n    public forEach(\n        func: (\n            item: Scene | SceneItem,\n            id: string | number,\n            index: number,\n            items: IObject<Scene | SceneItem>,\n        ) => void,\n    ) {\n        const items = this.items;\n\n        items.forEach((item, id, index, obj) => {\n            func(item, id, index, obj);\n        });\n        return this;\n    }\n    public toCSS(\n        playCondition?: PlayCondition,\n        duration: number = this.getDuration(), parentStates: AnimatorState[] = []) {\n        const totalDuration = !duration || !isFinite(duration) ? 0 : duration;\n        const styles: string[] = [];\n        const state = this.state;\n\n        state[DURATION] = this.getDuration();\n\n        this.forEach(item => {\n            styles.push(item.toCSS(playCondition, totalDuration, parentStates.concat(state)));\n        });\n        return styles.join(\"\");\n    }\n    /**\n     * Export the CSS of the items to the style.\n     * @param - Add a selector or className to play.\n     * @return {Scene} An instance itself\n     */\n    public exportCSS(\n        playCondition?: PlayCondition, duration?: number, parentStates?: AnimatorState[]) {\n        const css = this.toCSS(playCondition, duration, parentStates);\n\n        (!parentStates || !parentStates.length) && exportCSS(getRealId(this), css);\n        return this;\n    }\n    public append(item: SceneItem | Scene) {\n        item.setDelay(item.getDelay() + this.getDuration());\n        this.setItem(getRealId(item), item);\n    }\n    public pauseCSS() {\n        return this.forEach(item => {\n            item.pauseCSS();\n        });\n    }\n    public pause() {\n        super.pause();\n\n        isPausedCSS(this) && this.pauseCSS();\n        this.forEach(item => {\n            item.pause();\n        });\n        return this;\n    }\n    public endCSS() {\n        this.forEach(item => {\n            item.endCSS();\n        });\n        setPlayCSS(this, false);\n    }\n    public end() {\n        isEndedCSS(this) && this.endCSS();\n        super.end();\n        return this;\n    }\n    public addPlayClass(isPaused: boolean, playClassName?: string, properties: object = {}) {\n        let animtionElement: AnimateElement;\n\n        this.forEach(item => {\n            const el = item.addPlayClass(isPaused, playClassName, properties);\n\n            !animtionElement && (animtionElement = el);\n        });\n        return animtionElement;\n    }\n    /**\n    * Play using the css animation and keyframes.\n    * @param - Check if you want to export css.\n    * @param [playClassName=\"startAnimation\"] - Add a class name to play.\n    * @param - The shorthand properties for six of the animation properties.\n    * @return {Scene} An instance itself\n    * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n    * @example\n    scene.playCSS();\n    scene.playCSS(false, {\n    direction: \"reverse\",\n    fillMode: \"forwards\",\n    });\n    */\n    public playCSS(isExportCSS = true, playClassName?: string, properties: Partial<AnimatorState> = {}) {\n        playCSS(this, isExportCSS, playClassName, properties);\n        return this;\n    }\n    public set(properties: any, ...args: any[]): this;\n    /**\n      * Set properties to the Scene.\n      * @param - properties\n      * @return An instance itself\n      * @example\nscene.set({\n    \".a\": {\n        0: {\n            opacity: 0,\n        },\n        1: {\n            opacity: 1,\n        },\n    },\n});\n// 0\nconsole.log(scene.getItem(\".a\").get(0, \"opacity\"));\n// 1\nconsole.log(scene.getItem(\".a\").get(1, \"opacity\"));\n      */\n    public set(properties: any) {\n        this.load(properties);\n        return this;\n    }\n    public load(properties: any = {}, options = properties.options) {\n        if (!properties) {\n            return this;\n        }\n        const selector = options && options[SELECTOR] || this.state[SELECTOR];\n        for (const name in properties) {\n            if (name === \"options\") {\n                continue;\n            }\n            const object = properties[name];\n            let item;\n\n            if (object instanceof Scene || object instanceof SceneItem) {\n                this.setItem(name, object);\n                item = object;\n            } else if (isFunction(object) && selector) {\n                const elements =\n                    IS_WINDOW\n                        ? $(`${isFunction(selector) ? selector(name) : name}`, true) as IArrayFormat<AnimateElement>\n                        : ([] as AnimateElement[]);\n                const length = elements.length;\n                const scene = new Scene();\n\n                for (let i = 0; i < length; ++i) {\n                    (scene.newItem(i) as SceneItem).setId().setElement(elements[i]).load(object(i, elements[i]));\n                }\n                this.setItem(name, scene);\n                continue;\n            } else {\n                item = this.newItem(name);\n                item.load(object);\n            }\n            selector && item.setSelector(selector);\n        }\n        this.setOptions(options);\n    }\n    public setOptions(options: Partial<SceneState> = {}): this {\n        super.setOptions(options);\n\n        const selector = options.selector;\n\n        if (selector) {\n            this.state[SELECTOR] = selector;\n        }\n        return this;\n    }\n    public setSelector(target?: string | boolean | ((id: number | string) => string)) {\n        const state = this.state;\n        const selector = target || state[SELECTOR];\n\n        state[SELECTOR] = selector;\n        const isItFunction = isFunction(target);\n        if (selector) {\n            this.forEach((item, name) => {\n                item.setSelector(isItFunction ? (target as (id: number | string) => string)(name) : selector);\n            });\n        }\n        return this;\n    }\n    public start(delay: number = this.state[DELAY]): boolean {\n        const result = super.start(delay);\n\n        if (result) {\n            this.forEach(item => {\n                item.start(0);\n            });\n        } else {\n            this.forEach(item => {\n                item.setPlayState(RUNNING);\n            });\n        }\n        return result;\n    }\n}\n\nexport default Scene;\n","import { IObject } from \"@daybrush/utils\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport { SceneOptions, SceneItemOptions } from \"./types\";\n\nexport function animate(properties?: IObject<any>, options?: Partial<SceneOptions>) {\n    return new Scene(properties, options).play();\n}\nexport function animateItem(properties?: IObject<any>, options?: Partial<SceneItemOptions>) {\n    return new SceneItem(properties, options).play();\n}\n"],"names":["cubic","y1","y2","t","t2","solveFromX","x1","x2","x","solveX","dx","Math","abs","bezier","func","max","min","easingName","steps","count","position","time","level","floor","STEP_START","STEP_END","LINEAR","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","PREFIX","DATA_SCENE_ID","TIMING_FUNCTION","ROLES","transform","filter","attribute","html","ALIAS","easing","FIXED","_a","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","ITERATION_TIME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","ITERATION","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","PLAY_CSS","PREV_TIME","TICK_TIME","CURRENT_TIME","SELECTOR","TRANSFORM_NAME","EASINGS","OPTIONS","EVENTS","events","name","callback","once","isObject","n","_on","isArray","forEach","_this","push","callback2","_i","args","off","callbacks","index","indexOf","splice","data","event","target","type","currentTarget","toArray","apply","value","options","setOptions","isString","split","separator","newOptions","length","prefix","suffix","model","arr","map","v","PropertyObject","clone","join","toValue","splitStyle","str","properties","obj","i","matches","exec","trim","toPropertyObject","styles","arrayToColorObject","RGBA","stringToBracketObject","text","afterModel","COLOR_MODELS","stringToRGBA","arrayToPropertyObject","stringToColorObject","result","values","splitComma","splitSpace","charAt","toObject","object","size","get","isPropertyObject","setAlias","alias","setRole","names","isProperty","isFixedProperty","roles","fixed","getType","OBJECT","ARRAY","PROPERTY","STRING","NUMBER","isPureObject","constructor","Object","getNames","stack","concat","pop","slice","updateFrame","toFixed","num","round","getValueByNames","undefined","isInProperties","isCheckTrue","role","isRole","isFixed","setPlayCSS","item","isActivate","state","isPausedCSS","isPaused","isEndedCSS","isEnded","exportCSS","id","css","styleId","toId","styleElement","$","innerText","document","body","insertAdjacentHTML","makeId","selector","random","IS_WINDOW","checkElement","getRealId","getId","setId","match","playCSS","isExportCSS","playClassName","ANIMATION","getPlayState","className","addPlayClass","setTime","el","addAnimationEvent","setPlayState","duration","getDuration","isZeroDuration","isFinite","animationend","finish","animationstart","trigger","removeEvent","animationiteration","elapsedTime","currentTime","iterationCount","setIteration","addEvent","getEasing","curveArray","parseFloat","GetterSetter","getter","setter","parent","prototype","camelize","isDirectionReverse","iteration","iteraiontCount","direction","setters","getters","tslib_1","_super","delay","fillMode","playSpeed","iterationTime","tickTime","prevTime","playState","setEasing","setDuration","getActiveDuration","Infinity","getTime","toTime","timerId","requestAnimationFrame","tick","start","cancelAnimationFrame","end","pause","isTick","isParent","activeDuration","getUnitTime","calculate","isDelay","getIterationTime","unit","passIterationCount","maxIterationCount","currentIterationTime","setIterationTime","isReverse","isFiniteDuration","isForwards","now","to","Animator","EventTrigger","toInnerProperties","arrObj","replace","merge","from","FUNCTION","getValue","getPropertyName","set","raw","params","self","firstParam","Frame","_set","has","stylesLength","isUndefined","frame","frameProperties","cssObject","TRANSFORM","FILTER","toCSSObject","cssArray","lastParam","dotArray","a1","a2","b1","b2","v1","dot","dotColor","color1","color2","value1","value2","model1","model2","colorModel","parseInt","dotObject","a1Type","type1","type2","isFunction1","isFunction2","splitUnit","v2","isNaN","dotNumber","dotValue","nextTime","prevValue","nextValue","ratio","getNearTimeIndex","times","makeAnimationProperties","decamelize","addTime","addEntry","entries","keytime","prevEntry","getEntries","states","nextEntries","intCount","ceil","currentDuration","lastTime","j","entry","divideTime","unshift","load","originalDuration","ratio_1","items_1","obj_1","time2","items","newFrame","elements","sceneId_1","element","setAttribute","SceneItem","eachTime","realTime","innerValue","value_1","getDelay","frames","hasFrame","getDirection","frameTime","needUpdate","getFrame","remove","removeFrame","append","unshiftTime","firstFrame","prepend","isStartZero","isFunction","setElement","Element","style","targetFunc","attributes","html_1","innerHTML","cssText","toCSS","fromCSS","parentEasing","getNowFrame","temp","setFrame","update","toFrame","isAccurate","left","right","realEasing","nameObject","hasName","nowEasing","getNowValue","prevFrame","prevNames","keyframes","setTarget","setSelector","playCondition","parentDuration","itemState","reversedStates","reverse","superParent","infiniteIndex","findIndex","finiteStates","reduce","prev","cur","find","timingFunction","selectors","sel","selectorCallback","preselector","peusdo","KEYFRAMES","_toKeyframes","pauseCSS","addClass","removeClass","endCSS","hasClass","usePrevValue","nextFrame","isUndefinedLeft","isUndefinedRight","indicies","lastEntry","ListMap","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","setItem","parentStates","totalDuration","animtionElement","Scene","scene","newItem","isItFunction","animate","play","animateItem"],"mappings":"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"}