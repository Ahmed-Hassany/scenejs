{"version":3,"file":"index.js","sources":["../../node_modules/shape-svg/node_modules/@daybrush/utils/dist/utils.esm.js","../../node_modules/shape-svg/dist/shapesvg.esm.js","../../node_modules/@egjs/component/dist/component.esm.js","../../node_modules/@daybrush/page/node_modules/@daybrush/utils/dist/utils.esm.js","../../node_modules/@daybrush/page/dist/page.esm.js","../src/Store.ts","../../node_modules/@daybrush/utils/dist/utils.esm.js","../src/MainPage.ts","../src/FeaturesPage.ts","../src/ExamplesPage.ts","../src/StartedPage.ts","../../src/consts.ts","../../src/EventTrigger.ts","../../src/easing.ts","../../src/PropertyObject.ts","../../src/utils.ts","../../src/Animator.ts","../../src/utils/property.ts","../../src/Frame.ts","../../src/utils/dot.ts","../../src/SceneItem.ts","../../src/Scene.ts","../src/Header.ts","../src/utils.ts"],"sourcesContent":["/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.5.2\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar doc = typeof document !== UNDEFINED && document;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (!doc) {\n    return \"\";\n  }\n\n  var styles = (doc.body || doc.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\n\nfunction $(selectors, multi) {\n  return multi ? doc.querySelectorAll(selectors) : doc.querySelector(selectors);\n}\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\n\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, doc as document, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, now, requestAnimationFrame, $, hasClass, addClass, removeClass, fromCSS };\n//# sourceMappingURL=utils.esm.js.map\n","/*\nCopyright (c) 2018 Daybrush\nname: shape-svg\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/shape-svg\n@version 0.3.1\n*/\nimport { hasClass, addClass, splitUnit } from '@daybrush/utils';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n}\n\nvar CLASS_NAME = \"__shape-svg\";\n\nfunction makeDOM(tag) {\n  return document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n}\n\nfunction makeSVGDOM() {\n  var el = makeDOM(\"svg\");\n  addClass(el, CLASS_NAME);\n  return el;\n}\n\nfunction setAttributes(element, attributes) {\n  for (var name in attributes) {\n    element.setAttribute(name, attributes[name]);\n  }\n}\n\nfunction setStyles(element, styles) {\n  var cssText = [];\n\n  for (var name in styles) {\n    cssText.push(name + \":\" + styles[name] + \";\");\n  }\n\n  element.style.cssText += cssText.join(\"\");\n}\n\nfunction getAbsoluteValue(value, pos, size) {\n  var info = splitUnit(value);\n\n  if (info.unit === \"%\") {\n    return pos + size * info.value / 100 + \"px\";\n  } else if (info.unit === \"px\") {\n    return pos + info.value + \"px\";\n  } else {\n    return \"calc(\" + pos + \"px + \" + value + \")\";\n  }\n}\n\nfunction setOrigin(container, _a) {\n  var width = _a.width,\n      height = _a.height,\n      left = _a.left,\n      top = _a.top,\n      origin = _a.origin;\n\n  if (!origin) {\n    return;\n  }\n\n  var _b = (\"\" + origin).split(\" \"),\n      ox = _b[0],\n      _c = _b[1],\n      oy = _c === void 0 ? ox : _c;\n\n  ox = getAbsoluteValue(ox, left, width);\n  oy = getAbsoluteValue(oy, top, height);\n  container.style.transformOrigin = ox + \" \" + oy;\n}\n\nfunction setViewBox(container, _a) {\n  var width = _a.width,\n      height = _a.height,\n      left = _a.left,\n      right = _a.right,\n      bottom = _a.bottom,\n      top = _a.top,\n      strokeWidth = _a.strokeWidth,\n      className = _a.className;\n\n  if (container && hasClass(container, CLASS_NAME)) {\n    className && className.split(\" \").forEach(function (name) {\n      addClass(container, name);\n    });\n\n    var _b = (container.getAttribute(\"viewBox\") || \"\").split(\" \").map(function (pos) {\n      return parseFloat(pos || \"0\");\n    }),\n        _c = _b[2],\n        boxWidth = _c === void 0 ? 0 : _c,\n        _d = _b[3],\n        boxHeight = _d === void 0 ? 0 : _d;\n\n    container.setAttribute(\"viewBox\", \"0 0 \" + ( // tslint:disable-next-line:max-line-length\n    Math.max(left + width + right + strokeWidth, boxWidth) + \" \" + Math.max(top + height + bottom + strokeWidth, boxHeight)));\n  }\n}\n\nfunction getRect(_a) {\n  var _b = _a.left,\n      left = _b === void 0 ? 0 : _b,\n      _c = _a.top,\n      top = _c === void 0 ? 0 : _c,\n      _d = _a.side,\n      side = _d === void 0 ? 3 : _d,\n      _e = _a.rotate,\n      rotate = _e === void 0 ? 0 : _e,\n      _f = _a.innerRadius,\n      innerRadius = _f === void 0 ? 100 : _f,\n      _g = _a.height,\n      height = _g === void 0 ? 0 : _g,\n      _h = _a.split,\n      split = _h === void 0 ? 1 : _h,\n      _j = _a.width,\n      width = _j === void 0 ? height ? 0 : 100 : _j,\n      _k = _a.strokeLinejoin,\n      strokeLinejoin = _k === void 0 ? \"round\" : _k,\n      _l = _a.strokeWidth,\n      strokeWidth = _l === void 0 ? 0 : _l;\n  var xPoints = [];\n  var yPoints = [];\n  var sideCos = Math.cos(Math.PI / side);\n  var startRad = Math.PI / 180 * rotate + Math.PI * ((side % 2 ? 0 : 1 / side) - 1 / 2);\n\n  for (var i = 0; i < side; ++i) {\n    var rad = Math.PI * (1 / side * 2 * i) + startRad;\n    var cos = Math.cos(rad);\n    var sin = Math.sin(rad);\n    xPoints.push(cos);\n    yPoints.push(sin);\n\n    if (innerRadius !== 100) {\n      if (sideCos <= innerRadius / 100) {\n        continue;\n      } else {\n        xPoints.push(innerRadius / 100 * Math.cos(rad + Math.PI / side));\n        yPoints.push(innerRadius / 100 * Math.sin(rad + Math.PI / side));\n      }\n    }\n  }\n\n  var minX = Math.min.apply(Math, xPoints);\n  var minY = Math.min.apply(Math, yPoints);\n  var maxX = Math.max.apply(Math, xPoints);\n  var maxY = Math.max.apply(Math, yPoints);\n  var isWidth = !!width;\n  var scale = isWidth ? width / (maxX - minX) : height / (maxY - minY);\n  var isOuter = strokeLinejoin === \"miter\" || strokeLinejoin === \"arcs\" || strokeLinejoin === \"miter-clip\";\n  var sideSin = Math.sin(Math.PI / side);\n  var innerCos = Math.min(sideCos, innerRadius / 100);\n  var innerScale = scale * innerCos;\n  var diagonal = strokeWidth / 2 / (sideCos === innerCos ? 1 : Math.sin(Math.atan(sideSin / (sideCos - innerCos))));\n  var outerScale = isOuter ? (innerScale + diagonal) / innerScale : 1;\n  var pos = isOuter ? 0 : strokeWidth / 2;\n  xPoints = xPoints.map(function (xp) {\n    return (xp - minX * outerScale) * scale + pos;\n  });\n  yPoints = yPoints.map(function (yp) {\n    return (yp - minY * outerScale) * scale + pos;\n  });\n  var pathWidth = (maxX - minX) * outerScale * scale + pos * 2;\n  var pathHeight = (maxY - minY) * outerScale * scale + pos * 2;\n  var length = xPoints.length;\n  var points = [];\n  points.push([left + xPoints[0], top + yPoints[0]]);\n\n  for (var i = 1; i <= length; ++i) {\n    var x1 = xPoints[i - 1];\n    var y1 = yPoints[i - 1];\n    var x2 = xPoints[i === length ? 0 : i];\n    var y2 = yPoints[i === length ? 0 : i];\n\n    for (var j = 1; j <= split; ++j) {\n      var x = (x1 * (split - j) + x2 * j) / split;\n      var y = (y1 * (split - j) + y2 * j) / split;\n      points.push([left + x, top + y]);\n    }\n  }\n\n  return {\n    points: points,\n    width: pathWidth,\n    height: pathHeight\n  };\n}\nfunction getPath(points) {\n  return points.map(function (point, i) {\n    return (i === 0 ? \"M\" : \"L\") + \" \" + point.join(\" \");\n  }).join(\" \") + \" Z\";\n}\nfunction be(path, _a, container) {\n  var _b = _a.left,\n      left = _b === void 0 ? 0 : _b,\n      _c = _a.top,\n      top = _c === void 0 ? 0 : _c,\n      _d = _a.right,\n      right = _d === void 0 ? 0 : _d,\n      _e = _a.bottom,\n      bottom = _e === void 0 ? 0 : _e,\n      side = _a.side,\n      split = _a.split,\n      rotate = _a.rotate,\n      innerRadius = _a.innerRadius,\n      height = _a.height,\n      width = _a.width,\n      _f = _a.fill,\n      fill = _f === void 0 ? \"transparent\" : _f,\n      _g = _a.strokeLinejoin,\n      strokeLinejoin = _g === void 0 ? \"round\" : _g,\n      _h = _a.strokeWidth,\n      strokeWidth = _h === void 0 ? 0 : _h,\n      _j = _a.css,\n      css = _j === void 0 ? false : _j,\n      className = _a.className,\n      attributes = __rest(_a, [\"left\", \"top\", \"right\", \"bottom\", \"side\", \"split\", \"rotate\", \"innerRadius\", \"height\", \"width\", \"fill\", \"strokeLinejoin\", \"strokeWidth\", \"css\", \"className\"]);\n\n  var _k = getRect({\n    left: left,\n    top: top,\n    split: split,\n    side: side,\n    rotate: rotate,\n    width: width,\n    height: height,\n    innerRadius: innerRadius,\n    strokeLinejoin: strokeLinejoin,\n    strokeWidth: strokeWidth\n  }),\n      points = _k.points,\n      pathWidth = _k.width,\n      pathHeight = _k.height;\n\n  setViewBox(container, {\n    left: left,\n    top: top,\n    bottom: bottom,\n    right: right,\n    className: className,\n    strokeWidth: 0,\n    width: pathWidth,\n    height: pathHeight\n  });\n  var d = getPath(points);\n  css ? setStyles(path, {\n    d: \"path('\" + d + \"')\"\n  }) : setAttributes(path, {\n    d: d\n  });\n  setAttributes(path, __assign({\n    fill: fill,\n    \"stroke-linejoin\": strokeLinejoin,\n    \"stroke-width\": \"\" + strokeWidth\n  }, attributes));\n}\nfunction star(_a, container) {\n  var _b = _a.side,\n      side = _b === void 0 ? 3 : _b,\n      _c = _a.innerRadius,\n      innerRadius = _c === void 0 ? 60 * Math.cos(Math.PI / side) : _c;\n  return poly(__assign({}, arguments[0], {\n    innerRadius: innerRadius\n  }), container);\n}\nfunction poly(options, container) {\n  if (container === void 0) {\n    container = makeSVGDOM();\n  }\n\n  var path = makeDOM(\"path\");\n  be(path, options, container);\n  container.appendChild(path);\n  return container;\n}\nfunction oval(_a, container) {\n  if (container === void 0) {\n    container = makeSVGDOM();\n  }\n\n  var _b = _a.left,\n      left = _b === void 0 ? 0 : _b,\n      _c = _a.top,\n      top = _c === void 0 ? 0 : _c,\n      _d = _a.right,\n      right = _d === void 0 ? 0 : _d,\n      _e = _a.bottom,\n      bottom = _e === void 0 ? 0 : _e,\n      _f = _a.fill,\n      fill = _f === void 0 ? \"transparent\" : _f,\n      _g = _a.strokeLinejoin,\n      strokeLinejoin = _g === void 0 ? \"round\" : _g,\n      _h = _a.strokeWidth,\n      strokeWidth = _h === void 0 ? 0 : _h,\n      className = _a.className,\n      _j = _a.r,\n      r = _j === void 0 ? 0 : _j,\n      _k = _a.rx,\n      rx = _k === void 0 ? r : _k,\n      _l = _a.ry,\n      ry = _l === void 0 ? r : _l,\n      _m = _a.width,\n      width = _m === void 0 ? rx * 2 : _m,\n      _o = _a.height,\n      height = _o === void 0 ? ry * 2 : _o,\n      origin = _a.origin,\n      attributes = __rest(_a, [\"left\", \"top\", \"right\", \"bottom\", \"fill\", \"strokeLinejoin\", \"strokeWidth\", \"className\", \"r\", \"rx\", \"ry\", \"width\", \"height\", \"origin\"]);\n\n  var ellipse = makeDOM(\"ellipse\");\n  var halfStroke = strokeWidth / 2;\n  setViewBox(container, {\n    strokeWidth: strokeWidth,\n    left: left,\n    top: top,\n    bottom: bottom,\n    right: right,\n    className: className,\n    width: width,\n    height: height\n  });\n  setOrigin(ellipse, {\n    left: left + halfStroke,\n    top: top + halfStroke,\n    width: width,\n    height: height,\n    origin: origin\n  });\n  setAttributes(ellipse, __assign({\n    fill: fill,\n    \"cx\": left + halfStroke + width / 2,\n    \"cy\": top + halfStroke + height / 2,\n    \"rx\": width / 2 - halfStroke,\n    \"ry\": height / 2 - halfStroke,\n    \"stroke-linejoin\": strokeLinejoin,\n    \"stroke-width\": \"\" + strokeWidth\n  }, attributes));\n  container.appendChild(ellipse);\n  return container;\n}\nfunction rect(_a, container) {\n  if (container === void 0) {\n    container = makeSVGDOM();\n  }\n\n  var _b = _a.left,\n      left = _b === void 0 ? 0 : _b,\n      _c = _a.top,\n      top = _c === void 0 ? 0 : _c,\n      _d = _a.right,\n      right = _d === void 0 ? 0 : _d,\n      _e = _a.bottom,\n      bottom = _e === void 0 ? 0 : _e,\n      _f = _a.round,\n      round = _f === void 0 ? 0 : _f,\n      width = _a.width,\n      height = _a.height,\n      _g = _a.fill,\n      fill = _g === void 0 ? \"transparent\" : _g,\n      _h = _a.strokeLinejoin,\n      strokeLinejoin = _h === void 0 ? \"round\" : _h,\n      _j = _a.strokeWidth,\n      strokeWidth = _j === void 0 ? 0 : _j,\n      _k = _a.css,\n      css = _k === void 0 ? false : _k,\n      className = _a.className,\n      attributes = __rest(_a, [\"left\", \"top\", \"right\", \"bottom\", \"round\", \"width\", \"height\", \"fill\", \"strokeLinejoin\", \"strokeWidth\", \"css\", \"className\"]);\n\n  var path = makeDOM(\"path\");\n  setViewBox(container, {\n    left: left,\n    top: top,\n    bottom: bottom,\n    right: right,\n    className: className,\n    width: width,\n    height: height,\n    strokeWidth: strokeWidth\n  });\n  setOrigin(path, {\n    left: left,\n    top: top,\n    width: width,\n    height: height,\n    origin: origin\n  });\n  var halfStroke = strokeWidth / 2;\n  var pathWidth = width - round * 2;\n  var pathHeight = height - round * 2; // tslint:disable-next-line:max-line-length\n\n  var d = \"M\" + (left + round + halfStroke) + \",\" + (top + halfStroke) + \" h\" + pathWidth + \" a\" + round + \",\" + round + \" 0 0 1 \" + round + \",\" + round + \" v\" + pathHeight + \" a\" + round + \",\" + round + \" 0 0 1 -\" + round + \",\" + round + \" h-\" + pathWidth + \" a\" + round + \",\" + round + \" 0 0 1 -\" + round + \",-\" + round + \" v-\" + pathHeight + \" a\" + round + \",\" + round + \" 0 0 1 \" + round + \",-\" + round + \" z\";\n  css ? setStyles(path, {\n    d: \"path('\" + d + \"')\"\n  }) : setAttributes(path, {\n    d: d\n  });\n  setAttributes(path, __assign({\n    fill: fill,\n    \"stroke-linejoin\": strokeLinejoin,\n    \"stroke-width\": \"\" + strokeWidth\n  }, attributes));\n  container.appendChild(path);\n  return container;\n}\nvar VERSION = \"0.3.1\";\n\nexport { getRect, getPath, be, star, poly, oval, rect, VERSION };\n//# sourceMappingURL=shapesvg.esm.js.map\n","/*\nCopyright (c) 2017 NAVER Corp.\n@egjs/component project is licensed under the MIT license\n\n@egjs/component JavaScript library\nhttps://naver.github.io/egjs-component\n\n@version 2.1.2\n*/\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nfunction isUndefined(value) {\n  return typeof value === \"undefined\";\n}\n/**\n * A class used to manage events in a component\n * @ko 컴포넌트의 이벤트을 관리할 수 있게 하는 클래스\n * @alias eg.Component\n */\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  var Component =\n  /*#__PURE__*/\n  function () {\n    /**\n    * Version info string\n    * @ko 버전정보 문자열\n    * @name VERSION\n    * @static\n    * @type {String}\n    * @example\n    * eg.Component.VERSION;  // ex) 2.0.0\n    * @memberof eg.Component\n    */\n\n    /**\n     * @support {\"ie\": \"7+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.1+ (except 3.x)\"}\n     */\n    function Component() {\n      this._eventHandler = {};\n      this.options = {};\n    }\n    /**\n     * Triggers a custom event.\n     * @ko 커스텀 이벤트를 발생시킨다\n     * @param {String} eventName The name of the custom event to be triggered <ko>발생할 커스텀 이벤트의 이름</ko>\n     * @param {Object} customEvent Event data to be sent when triggering a custom event <ko>커스텀 이벤트가 발생할 때 전달할 데이터</ko>\n     * @return {Boolean} Indicates whether the event has occurred. If the stop() method is called by a custom event handler, it will return false and prevent the event from occurring. <a href=\"https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\">Ref</a> <ko>이벤트 발생 여부. 커스텀 이벤트 핸들러에서 stop() 메서드를 호출하면 'false'를 반환하고 이벤트 발생을 중단한다. <a href=\"https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\">참고</a></ko>\n     * @example\n    class Some extends eg.Component {\n     some(){\n     \tif(this.trigger(\"beforeHi\")){ // When event call to stop return false.\n    \tthis.trigger(\"hi\");// fire hi event.\n     \t}\n     }\n    }\n    const some = new Some();\n    some.on(\"beforeHi\", (e) => {\n    if(condition){\n    \te.stop(); // When event call to stop, `hi` event not call.\n    }\n    });\n    some.on(\"hi\", (e) => {\n    // `currentTarget` is component instance.\n    console.log(some === e.currentTarget); // true\n    });\n    // If you want to more know event design. You can see article.\n    // https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\n     */\n\n\n    var _proto = Component.prototype;\n\n    _proto.trigger = function trigger(eventName, customEvent) {\n      if (customEvent === void 0) {\n        customEvent = {};\n      }\n\n      var handlerList = this._eventHandler[eventName] || [];\n      var hasHandlerList = handlerList.length > 0;\n\n      if (!hasHandlerList) {\n        return true;\n      } // If detach method call in handler in first time then handler list calls.\n\n\n      handlerList = handlerList.concat();\n      customEvent.eventType = eventName;\n      var isCanceled = false;\n      var arg = [customEvent];\n      var i = 0;\n\n      customEvent.stop = function () {\n        isCanceled = true;\n      };\n\n      customEvent.currentTarget = this;\n\n      for (var _len = arguments.length, restParam = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        restParam[_key - 2] = arguments[_key];\n      }\n\n      if (restParam.length >= 1) {\n        arg = arg.concat(restParam);\n      }\n\n      for (i = 0; handlerList[i]; i++) {\n        handlerList[i].apply(this, arg);\n      }\n\n      return !isCanceled;\n    };\n    /**\n     * Executed event just one time.\n     * @ko 이벤트가 한번만 실행된다.\n     * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n     * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n     * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n     * @example\n    class Some extends eg.Component {\n     hi() {\n       alert(\"hi\");\n     }\n     thing() {\n       this.once(\"hi\", this.hi);\n     }\n    }\n    var some = new Some();\n    some.thing();\n    some.trigger(\"hi\");\n    // fire alert(\"hi\");\n    some.trigger(\"hi\");\n    // Nothing happens\n     */\n\n\n    _proto.once = function once(eventName, handlerToAttach) {\n      if (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n        var eventHash = eventName;\n        var i;\n\n        for (i in eventHash) {\n          this.once(i, eventHash[i]);\n        }\n\n        return this;\n      } else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n        var self = this;\n        this.on(eventName, function listener() {\n          for (var _len2 = arguments.length, arg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            arg[_key2] = arguments[_key2];\n          }\n\n          handlerToAttach.apply(self, arg);\n          self.off(eventName, listener);\n        });\n      }\n\n      return this;\n    };\n    /**\n     * Checks whether an event has been attached to a component.\n     * @ko 컴포넌트에 이벤트가 등록됐는지 확인한다.\n     * @param {String} eventName The name of the event to be attached <ko>등록 여부를 확인할 이벤트의 이름</ko>\n     * @return {Boolean} Indicates whether the event is attached. <ko>이벤트 등록 여부</ko>\n     * @example\n    class Some extends eg.Component {\n     some() {\n       this.hasOn(\"hi\");// check hi event.\n     }\n    }\n     */\n\n\n    _proto.hasOn = function hasOn(eventName) {\n      return !!this._eventHandler[eventName];\n    };\n    /**\n     * Attaches an event to a component.\n     * @ko 컴포넌트에 이벤트를 등록한다.\n     * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n     * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n     * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n     * @example\n    class Some extends eg.Component {\n     hi() {\n       console.log(\"hi\");\n     }\n     some() {\n       this.on(\"hi\",this.hi); //attach event\n     }\n    }\n    */\n\n\n    _proto.on = function on(eventName, handlerToAttach) {\n      if (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n        var eventHash = eventName;\n        var name;\n\n        for (name in eventHash) {\n          this.on(name, eventHash[name]);\n        }\n\n        return this;\n      } else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n        var handlerList = this._eventHandler[eventName];\n\n        if (isUndefined(handlerList)) {\n          this._eventHandler[eventName] = [];\n          handlerList = this._eventHandler[eventName];\n        }\n\n        handlerList.push(handlerToAttach);\n      }\n\n      return this;\n    };\n    /**\n     * Detaches an event from the component.\n     * @ko 컴포넌트에 등록된 이벤트를 해제한다\n     * @param {eventName} eventName The name of the event to be detached <ko>해제할 이벤트의 이름</ko>\n     * @param {Function} handlerToDetach The handler function of the event to be detached <ko>해제할 이벤트의 핸들러 함수</ko>\n     * @return {eg.Component} An instance of a component itself <ko>컴포넌트 자신의 인스턴스</ko>\n     * @example\n    class Some extends eg.Component {\n     hi() {\n       console.log(\"hi\");\n     }\n     some() {\n       this.off(\"hi\",this.hi); //detach event\n     }\n    }\n     */\n\n\n    _proto.off = function off(eventName, handlerToDetach) {\n      // All event detach.\n      if (isUndefined(eventName)) {\n        this._eventHandler = {};\n        return this;\n      } // All handler of specific event detach.\n\n\n      if (isUndefined(handlerToDetach)) {\n        if (typeof eventName === \"string\") {\n          this._eventHandler[eventName] = undefined;\n          return this;\n        } else {\n          var eventHash = eventName;\n          var name;\n\n          for (name in eventHash) {\n            this.off(name, eventHash[name]);\n          }\n\n          return this;\n        }\n      } // The handler of specific event detach.\n\n\n      var handlerList = this._eventHandler[eventName];\n\n      if (handlerList) {\n        var k;\n        var handlerFunction;\n\n        for (k = 0; (handlerFunction = handlerList[k]) !== undefined; k++) {\n          if (handlerFunction === handlerToDetach) {\n            handlerList = handlerList.splice(k, 1);\n            break;\n          }\n        }\n      }\n\n      return this;\n    };\n\n    return Component;\n  }();\n\n  Component.VERSION = \"2.1.2\";\n  return Component;\n}();\n\nexport default Component;\n//# sourceMappingURL=component.esm.js.map\n","/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.5.2\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar doc = typeof document !== UNDEFINED && document;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (!doc) {\n    return \"\";\n  }\n\n  var styles = (doc.body || doc.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\n\nfunction $(selectors, multi) {\n  return multi ? doc.querySelectorAll(selectors) : doc.querySelector(selectors);\n}\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\n\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, doc as document, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, now, requestAnimationFrame, $, hasClass, addClass, removeClass, fromCSS };\n//# sourceMappingURL=utils.esm.js.map\n","/*\nCopyright (c) 2018 Daybrush\nname: @daybrush/page\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/page.git\nversion: 0.2.0\n*/\nimport Component from '@egjs/component';\nimport { isObject, $, isArray, splitSpace, splitBracket, splitUnit } from '@daybrush/utils';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar width = 0;\nvar height = 0;\n\nfunction resize() {\n  width = window.innerWidth;\n  height = window.innerHeight;\n}\n\nwindow.addEventListener(\"resize\", resize);\nresize();\n\nvar WindowSize = ({\n    get width () { return width; },\n    get height () { return height; }\n});\n\n/**\n * You can check the page in and out of the screen.\n * @extends eg.Component\n * @sort 1\n * @example\nconst page = new Page(\".page1\", {\n  range: [\"0%\", \"100%\"],\n  margin: [0, 0],\n  // Registers events automatically.\n  events: [\"resize\", \"scroll\"]\n});\n */\n\nvar Page =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(Page, _super);\n  /**\n   */\n\n\n  function Page(el, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.ranges = {};\n    _this._range = [0, \"100%\"];\n    _this.horizontal = false;\n    _this.margin = [0, 0];\n    _this.pages = [];\n    _this.state = {\n      enter: false,\n      firstEnter: false,\n      firstExit: false\n    };\n    /**\n     * @method\n     */\n\n    _this.scroll = function () {\n      _this.triggerEvent(\"scroll\");\n\n      _this.onCheck();\n    };\n    /**\n     * @method\n     */\n\n\n    _this.resize = function () {\n      _this.triggerEvent(\"resize\");\n\n      _this.onCheck();\n    };\n\n    _this.el = el ? isObject(el) ? el : $(el) : null;\n\n    if (\"range\" in options) {\n      var range = options.range;\n      var rangeArr = isArray(range) ? range : [range, range];\n      _this._range = rangeArr;\n    }\n\n    if (\"margin\" in options) {\n      var margin = options.margin;\n\n      if (isArray(margin)) {\n        _this.margin = margin;\n      } else {\n        _this.margin = [margin, margin];\n      }\n    }\n\n    if (\"events\" in options) {\n      options.events.forEach(function (name) {\n        if (name === \"resize\") {\n          window.addEventListener(\"resize\", _this.resize);\n        } else if (name === \"scroll\") {\n          window.addEventListener(\"scroll\", _this.scroll);\n        } else {\n          _this.el && _this.el.addEventListener(name, _this.scroll);\n        }\n      });\n    }\n\n    if (\"horizontal\" in options) {\n      _this.horizontal = options.horizontal;\n    }\n\n    return _this;\n  }\n  /**\n   */\n\n\n  var __proto = Page.prototype;\n\n  __proto.add = function (page) {\n    this.pages.push(page);\n    return this;\n  };\n  /**\n   */\n\n\n  __proto.range = function (range, horizontal) {\n    if (range === void 0) {\n      range = [0, \"100%\"];\n    }\n\n    var rangeArr = isArray(range) ? range : [range, range];\n    var id = \"[\" + rangeArr.join(\",\") + \"]\";\n\n    if (this.ranges[id]) {\n      return this.ranges[id];\n    }\n\n    var page = new Page(this.el, {\n      range: rangeArr,\n      horizontal: horizontal\n    });\n    this.ranges[id] = page;\n    this.add(page);\n    return page;\n  };\n\n  __proto.triggerEvent = function (name) {\n    this.trigger(name, {\n      target: this.el\n    });\n  };\n\n  __proto.onEnter = function (rect) {\n    var _this = this;\n\n    var state = this.state;\n\n    if (!state.enter) {\n      state.enter = true;\n\n      if (!state.firstEnter) {\n        state.firstEnter = true;\n        /**\n         * An event that occurs when you first enter a page.\n         * @param {Page.EventParameter} event - Event object\n         * @event Page#firstEnter\n         */\n\n        this.triggerEvent(\"firstEnter\");\n      }\n      /**\n       * An event that occurs when you enter a page.\n       * @param {Page.EventParameter} event - Event object\n       * @event Page#enter\n       */\n\n\n      this.triggerEvent(\"enter\");\n    }\n\n    this.pages.forEach(function (page) {\n      page.onCheck(page.el === _this.el ? rect : undefined);\n    });\n  };\n\n  __proto.onExit = function () {\n    var state = this.state;\n\n    if (state.enter) {\n      state.enter = false;\n\n      if (!state.firstExit) {\n        state.firstExit = true;\n        /**\n         * An event that occurs when you first exit a page.\n         * @param {Page.EventParameter} event - Event object\n         * @event Page#firstExit\n         */\n\n        this.triggerEvent(\"firstExit\");\n      }\n      /**\n       * An event that occurs when you exit a page.\n       * @param {Page.EventParameter} event - Event object\n       * @event Page#exit\n       */\n\n\n      this.triggerEvent(\"exit\");\n    }\n\n    this.pages.forEach(function (page) {\n      page.onExit();\n    });\n  };\n\n  __proto.calcSize = function (size, rect) {\n    if (typeof size === \"number\") {\n      return size;\n    }\n\n    var sizeInfos = splitSpace(size);\n\n    if (!sizeInfos) {\n      return 0;\n    }\n\n    var length = sizeInfos.length;\n    var stack = [];\n    var sign = 1;\n\n    for (var i = 0; i < length; ++i) {\n      var v = sizeInfos[i];\n\n      if (v === \"+\") {\n        sign = 1;\n      } else if (v === \"-\") {\n        sign = -1;\n      } else if (v === \"*\") {\n        stack.push((stack.pop() || 0) * this._calcSize(sizeInfos[i + 1], rect));\n        ++i;\n      } else if (v === \"/\") {\n        stack.push((stack.pop() || 0) / this._calcSize(sizeInfos[i + 1], rect));\n        ++i;\n      } else {\n        stack.push(sign * this._calcSize(v, rect));\n        sign = 1;\n      }\n    }\n\n    return stack.reduce(function (prev, cur) {\n      return prev + cur;\n    }, 0);\n  };\n  /**\n   */\n\n\n  __proto.getRect = function (isAbsolute) {\n    var rect = this.el ? this.el.getBoundingClientRect() : undefined;\n\n    if (!rect) {\n      return;\n    }\n\n    var width$$1 = rect.width;\n    var height$$1 = rect.height;\n    var left = rect.left + (isAbsolute ? document.body.scrollLeft || document.documentElement.scrollLeft : 0);\n    var top = rect.top + (isAbsolute ? document.body.scrollTop || document.documentElement.scrollTop : 0);\n    return {\n      top: top,\n      left: left,\n      width: width$$1,\n      height: height$$1\n    };\n  };\n\n  __proto.onCheck = function (rect) {\n    if (rect === void 0) {\n      rect = this.getRect();\n    }\n\n    if (rect) {\n      var horizontal = this.horizontal;\n      var pos = rect[horizontal ? \"left\" : \"top\"];\n      var containerSize = WindowSize[horizontal ? \"width\" : \"height\"];\n      var rangeStart = this.calcSize(this._range[0], rect);\n      var rangeEnd = this.calcSize(this._range[1], rect);\n      var marginStart = this.calcSize(this.margin[0], rect);\n      var marginEnd = this.calcSize(this.margin[1], rect);\n\n      if (pos + rangeEnd + marginEnd <= 0 || pos + rangeStart - marginStart >= containerSize) {\n        this.onExit();\n      } else {\n        this.onEnter(rect);\n      }\n    } else {\n      this.pages.forEach(function (page) {\n        page.onCheck();\n      });\n    }\n  };\n\n  __proto._calcSize = function (size, rect) {\n    if (!size) {\n      return 0;\n    }\n\n    if (typeof size === \"number\") {\n      return size;\n    }\n\n    var horizontal = this.horizontal;\n    var sizeName = horizontal ? \"width\" : \"height\";\n\n    if (size === \"window\") {\n      return WindowSize[sizeName];\n    }\n\n    if (size.indexOf(\"(\") > -1) {\n      return this.calcSize(splitBracket(size).value, rect);\n    }\n\n    var info = splitUnit(size);\n\n    if (info.unit === \"%\") {\n      return rect[sizeName] * info.value / 100;\n    } else {\n      return info.value;\n    }\n  };\n\n  return Page;\n}(Component);\n\n/**\n * @sort 2\n * @example\nimport Page from \"@daybrush/page\";\n\nconst pages = new Page.s({\n  events: [\"scroll\", \"resize\"];\n});\n\npages.add(new Page(\".page1\"));\n\npages.scroll();\n */\n\nvar Pages =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(Pages, _super);\n  /**\n   */\n\n\n  function Pages(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _super.call(this, undefined, options) || this;\n  }\n\n  return Pages;\n}(Page);\n\nPage.s = Pages;\n\nexport default Page;\nexport { Pages };\n//# sourceMappingURL=page.esm.js.map\n","import Page from \"@daybrush/page\";\n\nexport const manager = new Page.s({\n  events: [\"resize\", \"scroll\"],\n});\nexport const pages: Page[] = [];\nexport function add(page: Page) {\n  pages.push(page);\n  manager.add(page);\n}\nexport function scroll() {\n  manager.scroll();\n}\n","/*\nCopyright (c) 2018 Daybrush\n@name: @daybrush/utils\nlicense: MIT\nauthor: Daybrush\nrepository: https://github.com/daybrush/utils\n@version 0.7.0-rc\n*/\n/**\n* @namespace\n* @name Consts\n*/\n\n/**\n* get string \"rgb\"\n* @memberof Color\n* @example\nimport {RGB} from \"@daybrush/utils\";\n\nconsole.log(RGB); // \"rgb\"\n*/\nvar RGB = \"rgb\";\n/**\n* get string \"rgba\"\n* @memberof Color\n* @example\nimport {RGBA} from \"@daybrush/utils\";\n\nconsole.log(RGBA); // \"rgba\"\n*/\n\nvar RGBA = \"rgba\";\n/**\n* get string \"hsl\"\n* @memberof Color\n* @example\nimport {HSL} from \"@daybrush/utils\";\n\nconsole.log(HSL); // \"hsl\"\n*/\n\nvar HSL = \"hsl\";\n/**\n* get string \"hsla\"\n* @memberof Color\n* @example\nimport {HSLA} from \"@daybrush/utils\";\n\nconsole.log(HSLA); // \"hsla\"\n*/\n\nvar HSLA = \"hsla\";\n/**\n* gets an array of color models.\n* @memberof Color\n* @example\nimport {COLOR_MODELS} from \"@daybrush/utils\";\n\nconsole.log(COLOR_MODELS); // [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* get string \"function\"\n* @memberof Consts\n* @example\nimport {FUNCTION} from \"@daybrush/utils\";\n\nconsole.log(FUNCTION); // \"function\"\n*/\n\nvar FUNCTION = \"function\";\n/**\n* get string \"property\"\n* @memberof Consts\n* @example\nimport {PROPERTY} from \"@daybrush/utils\";\n\nconsole.log(PROPERTY); // \"property\"\n*/\n\nvar PROPERTY = \"property\";\n/**\n* get string \"array\"\n* @memberof Consts\n* @example\nimport {ARRAY} from \"@daybrush/utils\";\n\nconsole.log(ARRAY); // \"array\"\n*/\n\nvar ARRAY = \"array\";\n/**\n* get string \"object\"\n* @memberof Consts\n* @example\nimport {OBJECT} from \"@daybrush/utils\";\n\nconsole.log(OBJECT); // \"object\"\n*/\n\nvar OBJECT = \"object\";\n/**\n* get string \"string\"\n* @memberof Consts\n* @example\nimport {STRING} from \"@daybrush/utils\";\n\nconsole.log(STRING); // \"string\"\n*/\n\nvar STRING = \"string\";\n/**\n* get string \"number\"\n* @memberof Consts\n* @example\nimport {NUMBER} from \"@daybrush/utils\";\n\nconsole.log(NUMBER); // \"number\"\n*/\n\nvar NUMBER = \"number\";\n/**\n* get string \"undefined\"\n* @memberof Consts\n* @example\nimport {UNDEFINED} from \"@daybrush/utils\";\n\nconsole.log(UNDEFINED); // \"undefined\"\n*/\n\nvar UNDEFINED = \"undefined\";\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar IS_WINDOW = typeof window !== UNDEFINED;\n/**\n* Check whether the environment is window or node.js.\n* @memberof Consts\n* @name document\n* @example\nimport {IS_WINDOW} from \"@daybrush/utils\";\n\nconsole.log(IS_WINDOW); // false in node.js\nconsole.log(IS_WINDOW); // true in browser\n*/\n\nvar doc = typeof document !== UNDEFINED && document;\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n/**\n * @namespace CrossBrowser\n */\n\n/**\n* Get a CSS property with a vendor prefix that supports cross browser.\n* @function\n* @param {string} property - A CSS property\n* @return {string} CSS property with cross-browser vendor prefix\n* @memberof CrossBrowser\n* @example\nimport {getCrossBrowserProperty} from \"@daybrush/utils\";\n\nconsole.log(getCrossBrowserProperty(\"transform\")); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\nconsole.log(getCrossBrowserProperty(\"filter\")); // \"filter\", \"-webkit-filter\"\n*/\n\nvar getCrossBrowserProperty =\n/*#__PURE__*/\nfunction (property) {\n  if (!doc) {\n    return \"\";\n  }\n\n  var styles = (doc.body || doc.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== UNDEFINED) {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== UNDEFINED) {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n/**\n* get string \"transfrom\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {TRANSFORM} from \"@daybrush/utils\";\n\nconsole.log(TRANSFORM); // \"transform\", \"-ms-transform\", \"-webkit-transform\"\n*/\n\nvar TRANSFORM =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"transform\");\n/**\n* get string \"filter\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {FILTER} from \"@daybrush/utils\";\n\nconsole.log(FILTER); // \"filter\", \"-ms-filter\", \"-webkit-filter\"\n*/\n\nvar FILTER =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"filter\");\n/**\n* get string \"animation\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {ANIMATION} from \"@daybrush/utils\";\n\nconsole.log(ANIMATION); // \"animation\", \"-ms-animation\", \"-webkit-animation\"\n*/\n\nvar ANIMATION =\n/*#__PURE__*/\ngetCrossBrowserProperty(\"animation\");\n/**\n* get string \"keyframes\" with the vendor prefix.\n* @memberof CrossBrowser\n* @example\nimport {KEYFRAMES} from \"@daybrush/utils\";\n\nconsole.log(KEYFRAMES); // \"keyframes\", \"-ms-keyframes\", \"-webkit-keyframes\"\n*/\n\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\n/**\n* @namespace\n* @name Utils\n*/\n\n/**\n* Check the type that the value is undefined.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {boolean} true if the type is correct, false otherwise\n* @example\nimport {isUndefined} from \"@daybrush/utils\";\n\nconsole.log(isUndefined(undefined)); // true\nconsole.log(isUndefined(\"\")); // false\nconsole.log(isUndefined(1)); // false\nconsole.log(isUndefined(null)); // false\n*/\n\nfunction isUndefined(value) {\n  return typeof value === UNDEFINED;\n}\n/**\n* Check the type that the value is object.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isObject} from \"@daybrush/utils\";\n\nconsole.log(isObject({})); // true\nconsole.log(isObject(undefined)); // false\nconsole.log(isObject(\"\")); // false\nconsole.log(isObject(null)); // false\n*/\n\nfunction isObject(value) {\n  return value && typeof value === OBJECT;\n}\n/**\n* Check the type that the value is isArray.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isArray} from \"@daybrush/utils\";\n\nconsole.log(isArray([])); // true\nconsole.log(isArray({})); // false\nconsole.log(isArray(undefined)); // false\nconsole.log(isArray(null)); // false\n*/\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n* Check the type that the value is string.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isString} from \"@daybrush/utils\";\n\nconsole.log(isString(\"1234\")); // true\nconsole.log(isString(undefined)); // false\nconsole.log(isString(1)); // false\nconsole.log(isString(null)); // false\n*/\n\nfunction isString(value) {\n  return typeof value === STRING;\n}\n/**\n* Check the type that the value is function.\n* @memberof Utils\n* @param {string} value - Value to check the type\n* @return {} true if the type is correct, false otherwise\n* @example\nimport {isFunction} from \"@daybrush/utils\";\n\nconsole.log(isFunction(function a() {})); // true\nconsole.log(isFunction(() => {})); // true\nconsole.log(isFunction(\"1234\")); // false\nconsole.log(isFunction(1)); // false\nconsole.log(isFunction(null)); // false\n*/\n\nfunction isFunction(value) {\n  return typeof value === FUNCTION;\n}\n/**\n* divide text by space.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {spliceSpace} from \"@daybrush/utils\";\n\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {Array} divided texts\n* @example\nimport {splitComma} from \"@daybrush/utils\";\n\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\n/**\n* divide text by bracket \"(\", \")\".\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {object} divided texts\n* @example\nimport {splitBracket} from \"@daybrush/utils\";\n\nconsole.log(splitBracket(\"a(1, 2)\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"\"}\nconsole.log(splitBracket(\"a(1, 2)b\"));\n// {prefix: \"a\", value: \"1, 2\", suffix: \"b\"}\n*/\n\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\n/**\n* divide text by number and unit.\n* @memberof Utils\n* @param {string} text - text to divide\n* @return {} divided texts\n* @example\nimport {splitUnit} from \"@daybrush/utils\";\n\nconsole.log(splitUnit(\"10px\"));\n// {prefix: \"\", value: 10, unit: \"px\"}\nconsole.log(splitUnit(\"-10px\"));\n// {prefix: \"\", value: -10, unit: \"px\"}\nconsole.log(splitUnit(\"a10%\"));\n// {prefix: \"a\", value: 10, unit: \"%\"}\n*/\n\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\n/**\n* transform strings to camel-case\n* @memberof Utils\n* @param {String} text - string\n* @return {String} camel-case string\n* @example\nimport {camelize} from \"@daybrush/utils\";\n\nconsole.log(camelize(\"transform-origin\")); // transformOrigin\nconsole.log(camelize(\"abcd_efg\")); // abcdEfg\nconsole.log(camelize(\"abcd efg\")); // abcdEfg\n*/\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n* transform a camelized string into a lowercased string.\n* @memberof Utils\n* @param {string} text - a camel-cased string\n* @param {string} [separator=\"-\"] - a separator\n* @return {string}  a lowercased string\n* @example\nimport {decamelize} from \"@daybrush/utils\";\n\nconsole.log(decamelize(\"transformOrigin\")); // transform-origin\nconsole.log(decamelize(\"abcdEfg\", \"_\")); // abcd_efg\n*/\n\nfunction decamelize(str, separator) {\n  if (separator === void 0) {\n    separator = \"-\";\n  }\n\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return \"\" + letter + separator + letter2.toLowerCase();\n  });\n}\n/**\n* transforms something in an array into an array.\n* @memberof Utils\n* @param - Array form\n* @return an array\n* @example\nimport {toArray} from \"@daybrush/utils\";\n\nconst arr1 = toArray(document.querySelectorAll(\".a\")); // Element[]\nconst arr2 = toArray(document.querySelectorAll<HTMLElement>(\".a\")); // HTMLElement[]\n*/\n\nfunction toArray(value) {\n  return [].slice.call(value);\n}\n/**\n* Date.now() method\n* @memberof CrossBrowser\n* @return {number} milliseconds\n* @example\nimport {now} from \"@daybrush/utils\";\n\nconsole.log(now()); // 12121324241(milliseconds)\n*/\n\nfunction now() {\n  return Date.now ? Date.now() : new Date().getTime();\n}\n/**\n* window.requestAnimationFrame() method with cross browser.\n* @function\n* @memberof CrossBrowser\n* @param {FrameRequestCallback} callback - The function to call when it's time to update your animation for the next repaint.\n* @return {number} id\n* @example\nimport {requestAnimationFrame} from \"@daybrush/utils\";\n\nrequestAnimationFrame((timestamp) => {\n  console.log(timestamp);\n});\n*/\n\nvar requestAnimationFrame =\n/*#__PURE__*/\nfunction () {\n  var firstTime = now();\n  var raf = IS_WINDOW && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame);\n  return raf ? raf.bind(window) : function (callback) {\n    var currTime = now();\n    var id = window.setTimeout(function () {\n      callback(currTime - firstTime);\n    }, 1000 / 60);\n    return id;\n  };\n}();\n\n/**\n* @namespace\n* @name Color\n*/\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} hex color\n* @example\nimport {cutHex} from \"@daybrush/utils\";\n\nconsole.log(cutHex(\"#000000\")) // \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.replace(\"#\", \"\");\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {} hex - hex color\n* @return {} rgb color\n* @example\nimport {hexToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hexToRGBA(\"#00000005\"));\n// [0, 0, 0, 1]\nconsole.log(hexToRGBA(\"#201045\"));\n// [32, 16, 69, 1]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3(or 4)-digit hex color to 6(or 8)-digit hex color.\n* @memberof Color\n* @param {} hex - 3(or 4)-digit hex color\n* @return {} 6(or 8)-digit hex color\n* @example\nimport {toFullHex} from \"@daybrush/utils\";\n\nconsole.log(toFullHex(\"#123\")); // \"#112233\"\nconsole.log(toFullHex(\"#123a\")); // \"#112233aa\"\n*/\n\nfunction toFullHex(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var a = h.charAt(4);\n  var arr = [\"#\", r, r, g, g, b, b, a, a];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgba color.\n* @memberof Color\n* @param {} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {} rgba color\n* @example\nimport {hslToRGBA} from \"@daybrush/utils\";\n\nconsole.log(hslToRGBA([150, 0.5, 0.4]));\n// [51, 153, 102, 1]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {} - 3-hex(#000), 4-hex(#0000) 6-hex(#000000), 8-hex(#00000000) or RGB(A), or HSL(A)\n* @return {} rgba color\n* @example\nimport {stringToRGBA} from \"@daybrush/utils\";\n\nconsole.log(stringToRGBA(\"#000000\")); // [0, 0, 0, 1]\nconsole.log(stringToRGBA(\"rgb(100, 100, 100)\")); // [100, 100, 100, 1]\nconsole.log(stringToRGBA(\"hsl(150, 0.5, 0.4)\")); // [51, 153, 102, 1]\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4 || color.length === 5) {\n      return hexToRGBA(toFullHex(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\n/**\n * Returns all element descendants of node that\n * match selectors.\n */\n\n/**\n * Checks if the specified class value exists in the element's class attribute.\n * @memberof DOM\n * @param - A DOMString containing one or more selectors to match\n * @param - If multi is true, a DOMString containing one or more selectors to match against.\n * @example\nimport {$} from \"@daybrush/utils\";\n\nconsole.log($(\"div\")); // div element\nconsole.log($(\"div\", true)); // [div, div] elements\n*/\n\nfunction $(selectors, multi) {\n  return multi ? doc.querySelectorAll(selectors) : doc.querySelector(selectors);\n}\n/**\n* Checks if the specified class value exists in the element's class attribute.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to search\n* @return {boolean} return false if the class is not found.\n* @example\nimport {hasClass} from \"@daybrush/utils\";\n\nconsole.log(hasClass(element, \"start\")); // true or false\n*/\n\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\n/**\n* Add the specified class value. If these classe already exist in the element's class attribute they are ignored.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to add\n* @example\nimport {addClass} from \"@daybrush/utils\";\n\naddClass(element, \"start\");\n*/\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\n/**\n* Removes the specified class value.\n* @memberof DOM\n* @param element - target\n* @param className - the class name to remove\n* @example\nimport {removeClass} from \"@daybrush/utils\";\n\nremoveClass(element, \"start\");\n*/\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n/**\n* Gets the CSS properties from the element.\n* @memberof DOM\n* @param elements - elements\n* @param properites - the CSS properties\n* @return returns CSS properties and values.\n* @example\nimport {fromCSS} from \"@daybrush/utils\";\n\nconsole.log(fromCSS(element, [\"left\", \"opacity\", \"top\"])); // {\"left\": \"10px\", \"opacity\": 1, \"top\": \"10px\"}\n*/\n\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n/**\n* Sets up a function that will be called whenever the specified event is delivered to the target\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The object which receives a notification (an object that implements the Event interface) when an event of the specified type occurs\n* @param - An options object that specifies characteristics about the event listener. The available options are:\n* @example\nimport {addEvent} from \"@daybrush/utils\";\n\naddEvent(el, \"click\", e => {\n  console.log(e);\n});\n*/\n\nfunction addEvent(el, type, listener, options) {\n  el.addEventListener(type, listener, options);\n}\n/**\n* removes from the EventTarget an event listener previously registered with EventTarget.addEventListener()\n* @memberof DOM\n* @param - event target\n* @param - A case-sensitive string representing the event type to listen for.\n* @param - The EventListener function of the event handler to remove from the event target.\n* @example\nimport {addEvent, removeEvent} from \"@daybrush/utils\";\nconst listener = e => {\n  console.log(e);\n};\naddEvent(el, \"click\", listener);\nremoveEvent(el, \"click\", listener);\n*/\n\nfunction removeEvent(el, type, listener) {\n  el.removeEventListener(type, listener);\n}\n\nexport { RGB, RGBA, HSL, HSLA, COLOR_MODELS, FUNCTION, PROPERTY, ARRAY, OBJECT, STRING, NUMBER, UNDEFINED, IS_WINDOW, doc as document, getCrossBrowserProperty, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, cutHex, hexToRGBA, toFullHex, hslToRGBA, stringToRGBA, isUndefined, isObject, isArray, isString, isFunction, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, toArray, now, requestAnimationFrame, $, hasClass, addClass, removeClass, fromCSS, addEvent, removeEvent };\n//# sourceMappingURL=utils.esm.js.map\n","import { oval, poly } from \"shape-svg\";\nimport NativeScene, { IEasingFunction } from \"../../src\";\nimport Page from \"@daybrush/page\";\nimport { add } from \"./Store\";\nimport { $, addEvent } from \"@daybrush/utils\";\n\ndeclare var Scene: typeof NativeScene & {\n    EASE_IN_OUT: IEasingFunction,\n};\ndeclare var MediaScene: new (duration: number, properties?: any, options?: any) => NativeScene;\n\nconst clapper = document.querySelector(\".clapper\");\n\nfunction makeShadow(element, func, options, left = 10, top = 15) {\n    const target = func({\n        left,\n        top,\n        opacity: 1,\n        ...options,\n    });\n\n    func({\n        left: left * 2,\n        top: top * 2,\n        opacity: 0.2,\n        ...options,\n    }, target);\n\n    element.appendChild(target);\n\n    return target;\n}\n\nconst radius = 50;\n\nfor (let i = 1; i <= 6; ++i) {\n    const size = (170 - (i - 1) * 20);\n    const stroke = radius * 12 / size;\n    const ir = radius - stroke;\n\n    const target = makeShadow(clapper, oval, {\n        \"className\": `svg_circle svg_circle${i} center`,\n        \"r\": ir,\n        \"strokeWidth\": stroke,\n        \"strokeLinejoin\": \"round\",\n        \"stroke-linecap\": \"round\",\n        \"stroke\": \"#333\",\n        \"rotate\": -360,\n        \"origin\": \"50% 50%\",\n    }, 5, 5);\n\n    target.style.cssText = `width: ${size}px; height: ${size}px;`;\n}\n\nmakeShadow(clapper, poly, {\n    className: \"play_btn back\",\n    side: 3,\n    width: 60,\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    rotate: 90,\n    stroke: \"#333\",\n    fill: \"#333\",\n    origin: \"50% 50%\",\n});\nmakeShadow(clapper, poly, {\n    className: \"play_btn front\",\n    side: 3,\n    width: 60,\n    strokeWidth: 8,\n    strokeLinejoin: \"round\",\n    rotate: 90,\n    stroke: \"#333\",\n    fill: \"#333\",\n    origin: \"50% 50%\",\n});\n\nconst nextStep = 2.6;\nconst nextStep2 = nextStep + 3;\nconst nextStep3 = nextStep2 + 1.6;\n\nconst EASE_IN_OUT = Scene.EASE_IN_OUT;\n\nconst scene = new Scene({\n    \".logo1 .scene1.circle\": i => ({\n        0: {\n            transform: \"scale(0)\",\n        },\n        0.2: {\n            \"border-width\": \"50px\",\n        },\n        0.5: {\n            opacity: 1,\n        },\n        1: {\n            \"transform\": \"scale(1)\",\n            \"border-width\": \"0px\",\n            \"opacity\": 0,\n        },\n        options: {\n            delay: i * 0.4,\n        },\n    }),\n    \".logo1 ellipse\": (i, el) => {\n        const opacity = el.getAttribute(\"opacity\");\n        const index = Math.floor(i / 2);\n\n        return {\n            0: {\n                \"opacity\": 0,\n                \"stroke-dasharray\": \"0 1000\",\n                \"transform\": `scaleX(${index % 2 ? -1 : 1}) rotate(${-90 + index * 180}deg)`,\n            },\n            0.1: {\n                opacity,\n            },\n            [0.6]: {\n                \"stroke-dasharray\": `${70} 1000`,\n                \"stroke-dashoffset\": 0,\n            },\n            [1.1 - index * 0.06]: {\n                opacity,\n            },\n            [1.2 - index * 0.06]: {\n                \"stroke-dashoffset\": -76,\n                \"stroke-dasharray\": \"0 1000\",\n                \"transform\": `rotate(${180 + index * 180}deg)`,\n                \"opacity\": 0,\n            },\n            options: {\n                delay: nextStep + index * 0.16,\n            },\n        };\n    },\n    \".play_btn.back\": {\n        0: {\n            transform: \"translate(-50%, -50%) translate2(3px) scale(1)\",\n        },\n        1: {\n            transform: \"scale(0.5)\",\n        },\n        2: {\n            transform: \"scale(1)\",\n        },\n        options: {\n            delay: nextStep + 1,\n        },\n    },\n    \".play_btn.front\": {\n        0: {\n            transform: \"translate(-50%, -50%) translate2(3px) scale(0)\",\n        },\n        1: {\n            transform: \"scale(1)\",\n        },\n        options: {\n            delay: nextStep + 2.4,\n        },\n    },\n    \".play_circle\": {\n        0: {\n            transform: \"translate(-50%, -50%) scale(0)\",\n        },\n        1: {\n            transform: \"scale(1)\",\n        },\n        options: {\n            delay: nextStep + 2.1,\n        },\n    },\n    \".background\": {\n        0: {\n            transform: \"translate(-50%, -50%) scale(0)\",\n        },\n        1: {\n            transform: \"scale(1)\",\n        },\n        options: {\n            delay: nextStep + 1.8,\n        },\n    },\n    \".stick1 .rect\": i => ({\n        0: {\n            transform: {\n                scale: 0,\n                skew: \"15deg\",\n            },\n        },\n        0.7: {\n            transform: {\n                scale: 1,\n            },\n        },\n        options: {\n            delay: nextStep2 - 0.2 + i * 0.22,\n        },\n    }),\n    \".stick2 .rect\": i => ({\n        0: {\n            transform: {\n                scale: 0,\n                skew: \"-15deg\",\n            },\n        },\n        0.7: {\n            transform: {\n                scale: 1,\n            },\n        },\n        options: {\n            delay: nextStep2 + i * 0.22,\n        },\n    }),\n    \".stick1\": {\n        0: {\n            transform: {\n                rotate: \"0deg\",\n            },\n        },\n        0.5: {\n            transform: {\n                rotate: \"-20deg\",\n            },\n        },\n        1: {\n            transform: {\n                rotate: \"0deg\",\n            },\n        },\n        1.5: {\n            transform: {\n                rotate: \"-10deg\",\n            },\n        },\n        options: {\n            delay: nextStep3,\n            easing: EASE_IN_OUT,\n        },\n    },\n    \".logo1 .clapper\": {\n        0: {\n            transform: \"rotate(0deg)\",\n        },\n        0.5: {\n            transform: \"rotate(-15deg)\",\n        },\n        1: {\n            transform: \"rotate(0deg)\",\n        },\n        1.5: {\n            transform: \"rotate(-10deg)\",\n        },\n        options: {\n            delay: nextStep3,\n            easing: EASE_IN_OUT,\n        },\n    },\n    \".logo1 .character .left\": i => ({\n        0: {\n            transform: {\n                translateX: \"-100%\",\n            },\n        },\n        1: {\n            transform: {\n                translateX: \"0%\",\n            },\n        },\n        options: {\n            delay: nextStep2 + i * 0.1,\n        },\n    }),\n    \".logo1 .character .right\": i => ({\n        0: {\n            transform: {\n                translateX: \"100%\",\n            },\n        },\n        1: {\n            transform: {\n                translateX: \"0%\",\n            },\n        },\n        options: {\n            delay: nextStep2 + i * 0.1,\n        },\n    }),\n    \".logo1 .description p span\": i => ({\n        0: {\n            transform: {\n                translateY: \"-100%\",\n            },\n        },\n        1: {\n            transform: {\n                translateY: \"0%\",\n            },\n        },\n        options: {\n            delay: nextStep3 + 0.5 + i * 0.2,\n        },\n    }),\n}, {\n        easing: EASE_IN_OUT,\n        selector: true,\n    });\n\nconst clapperSound = document.querySelector(\"audio\");\nconst mediaScene = new MediaScene(\n    scene.getDuration(),\n    {\n        \"./clapper.mp3\": {\n            [nextStep3 + 0.9]: {\n                seek: [0, 1],\n                playSpeed: 2,\n                volume: 0.7,\n            },\n            options: {\n                element: clapperSound,\n            },\n        },\n    },\n);\n\naddEvent($<HTMLElement>(\".play_btn.front\"), \"click\", () => {\n    scene.playCSS(false);\n    mediaScene.play();\n});\nconst page1 = new Page(\".page.page1\");\n\npage1.range([\"10%\", \"90%\"]).on({\n    firstEnter: () => {\n        scene.exportCSS();\n    },\n    enter: () => {\n        scene.playCSS(false);\n        mediaScene.play();\n    },\n});\npage1.on(\"exit\", () => {\n    scene.finish();\n    mediaScene.finish();\n});\n\nadd(page1);\n","import Page from \"@daybrush/page\";\nimport { add } from \"./Store\";\nimport { $, addEvent, toArray } from \"@daybrush/utils\";\nimport NativeScene, { IEasingFunction, SceneItem, setRole } from \"../../src\";\n\ndeclare var Scene: typeof NativeScene & {\n    EASE_IN: IEasingFunction;\n    EASE_IN_OUT: IEasingFunction;\n    LINEAR: IEasingFunction;\n    SceneItem: typeof SceneItem;\n    setRole: typeof setRole;\n};\nnew Scene({\n    \".page2 .icon1 .lang\": i => ({\n        0: {\n            \"border-color\": \"#f55\",\n            \"color\": \"#f55\",\n        },\n        0.5: {\n            \"border-color\": \"#f55\",\n            \"color\": \"#f55\",\n        },\n        1.5: {\n            \"border-color\": \"#fff\",\n            \"color\": \"#fff\",\n        },\n        2: {\n            \"border-color\": \"#fff\",\n            \"color\": \"#fff\",\n        },\n        options: {\n            direction: i ? \"alternate-reverse\" : \"alternate\",\n            iterationCount: \"infinite\",\n        },\n    }),\n}, {\n    easing: Scene.EASE_IN_OUT,\n    selector: true,\n}).setTime(0).exportCSS({\n    selector: (_, selector) => {\n        return `.page2 [data-feature=\"play\"]:hover .icon1 ${selector}`;\n    },\n});\n\nnew Scene({\n    \".page2 .icon2 .thumb\": {\n        0: {\n            transform: {\n                translate: \"-50%, -50%\",\n                translate2: \"0px\",\n            },\n        },\n        1: {\n            transform: {\n                translate2: \"100px\",\n            },\n        },\n    },\n}, {\n    iterationCount: \"infinite\",\n    direction: \"alternate\",\n    easing: Scene.EASE_IN_OUT,\n    selector: true,\n}).exportCSS({\n    selector: `.page2 [data-feature=\"progress\"]:hover .icon2 .thumb`,\n});\n\nnew Scene({\n    \".page2 .icon3 svg path\": {\n        \"0\": {\n            \"stroke-dasharray\": \"4450 4450\",\n        },\n        \"0>\": {\n            \"stroke-dasharray\": \"0 5000\",\n        },\n        \"0.8\": {\n            \"stroke-dasharray\": \"1400 5000\",\n        },\n        \"1.6\": {\n            \"stroke-dasharray\": \"2500 4450\",\n        },\n        \"2.7\": {\n            \"stroke-dasharray\": \"4450 4450\",\n        },\n        \"3\": {\n\n        },\n    },\n}, {\n    iterationCount: \"infinite\",\n    easing: Scene.EASE_IN,\n    selector: true,\n}).exportCSS({\n    selector: `.page2 [data-feature=\"svg\"]:hover .icon3 path`,\n}).setTime(0);\n\nnew Scene({\n    \".page2 .icon4 .play_bar\": {\n        0: {\n            left: \"0%\",\n        },\n        2: {\n            left: \"100%\",\n        },\n    },\n}, {\n        iterationCount: \"infinite\",\n        easing: Scene.LINEAR,\n        selector: true,\n    }).exportCSS({\n        selector: `.page2 [data-feature=\"timeline\"]:hover .icon4 .play_bar`,\n    });\nconst valueFeatureElement = $(`.page2 [data-feature=\"value\"]`);\n\nScene.setRole([\"text\"], true);\n\nconst icon5Scene = new Scene({\n    \".slide\": i => ({\n        1.5: {\n            transform: `translateY(-50%) translate(${i * 100}%)`,\n        },\n        2.5: {\n            transform: `translate(${(i - 1) * 100}%)`,\n        },\n        4: {\n            transform: `translateY(-50%) translate(${(i - 1) * 100}%)`,\n        },\n        5: {\n            transform: `translate(${(i - 2) * 100}%)`,\n        },\n        options: {\n            easing: Scene.EASE_IN_OUT,\n        },\n    }),\n    \".slide:nth-child(1) .target\": {\n        0: {\n            opacity: 1,\n        },\n        1: {\n            opacity: 0,\n        },\n    },\n    \".slide:nth-child(2) .target\": {\n        0: {\n            \"background-color\": \"rgb(255, 255, 255)\",\n        },\n        1: {\n            \"background-color\": \"rgb(255, 90, 90)\",\n        },\n        options: {\n            delay: 2.5,\n        },\n    },\n    \".slide:nth-child(3) .target\": {\n        0: {\n            \"font-weight\": \"bold\",\n            \"background\": \"transparent\",\n            \"text\": \"\",\n        },\n        0.12: {\n            text: \"S\",\n        },\n        0.24: {\n            text: \"Sc\",\n        },\n        0.36: {\n            text: \"Sce\",\n        },\n        0.48: {\n            text: \"Scen\",\n        },\n        0.60: {\n            text: \"Scene\",\n        },\n        0.72: {\n            text: \"Scene.\",\n        },\n        0.84: {\n            text: \"Scene.j\",\n        },\n        0.96: {\n            text: \"Scene.js\",\n        },\n        2: {\n\n        },\n        options: {\n            delay: 5,\n        },\n    },\n}, {\n    iterationCount: \"infinite\",\n    selector: true,\n}).setTime(0);\n\nconst descriptionElements = toArray($(\".page2 .slide .sub_description\", true));\n\nicon5Scene.getItem(\".slide:nth-child(1) .target\").on(\"animate\", e => {\n    const el = descriptionElements[0];\n\n    el.innerHTML = `opacity: ${e.frame.get(\"opacity\").toFixed(2)}`;\n});\nicon5Scene.getItem(\".slide:nth-child(2) .target\").on(\"animate\", e => {\n    const el = descriptionElements[1];\n\n    el.innerHTML = `${e.frame.get(\"background-color\")}`;\n});\nicon5Scene.getItem(\".slide:nth-child(3) .target\").on(\"animate\", e => {\n    const el = e.currentTarget.elements[0];\n\n    el.innerHTML = `${e.frame.get(\"text\")}`;\n});\naddEvent(valueFeatureElement, \"mouseenter\", () => {\n    icon5Scene.getPlayState() !== \"running\" && icon5Scene.play();\n});\naddEvent(valueFeatureElement, \"mouseleave\", () => {\n    icon5Scene.pause();\n});\n\nconst page2 = new Page(\".page.page2\");\n\nadd(page2);\n","import Page from \"@daybrush/page\";\nimport { add } from \"./Store\";\n\nconst page3 = new Page(\".page.page3\");\n\nadd(page3);\n","import Page from \"@daybrush/page\";\nimport { add } from \"./Store\";\n\nconst page4 = new Page(\".page.page4\");\n\nadd(page4);\n","import { IObject } from \"@daybrush/utils\";\nimport { RoleObject, OptionType, EventType } from \"./types\";\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const DATA_SCENE_ID = \"data-scene-id\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleObject = { transform: {}, filter: {}, attribute: {} };\nexport const ALIAS: IObject<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { [TIMING_FUNCTION]: true, contents: true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const PLAY_CSS = \"playCSS\";\nexport const PREV_TIME = \"prevTime\";\nexport const TICK_TIME = \"tickTime\";\nexport const CURRENT_TIME = \"currentTime\";\nexport const SELECTOR = \"selector\";\nexport const TRANSFORM_NAME = \"transform\";\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {$ts:OptionType}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {$ts:EventType}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n","import { isObject, isArray, toArray } from \"@daybrush/utils\";\nimport { CallbackType, EventParameter } from \"./types\";\n\n/**\n* attach and trigger event handlers.\n*/\nclass EventTrigger {\n    public events: { [name: string]: CallbackType[] };\n    /**\n      * @example\n  const et = new Scene.EventTrigger();\n  const scene = new Scene();\n\n  scene.on(\"call\", e => {\n      console.log(e.param);\n  });\n  et.on(\"call\", e => {\n      console.log(e.param);\n  });\n  scene.trigger(\"call\", {param: 1});\n  et.trigger(\"call\", {param: 1});\n       */\n    constructor() {\n        this.events = {};\n    }\n    public _on(name: string | EventParameter, callback?: CallbackType | CallbackType[], once?: boolean) {\n        const events = this.events;\n\n        if (isObject(name)) {\n            for (const n in name) {\n                this._on(n, name[n], once);\n            }\n            return;\n        }\n        if (!(name in events)) {\n            events[name] = [];\n        }\n        if (!callback) {\n            return;\n        }\n        if (isArray(callback)) {\n            callback.forEach(func => this._on(name, func, once));\n            return;\n        }\n        events[name].push(once ? function callback2(...args) {\n            callback(...args);\n            this.off(name, callback2);\n        } : callback);\n    }\n    /**\n      * Attach an event handler function for one or more events to target\n      * @param - event's name\n      * @param - function to execute when the event is triggered.\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  target.on(\"animate\", function() {\n      console.log(\"animate\");\n  });\n\n  target.trigger(\"animate\");\n\n    */\n    public on(name: string | EventParameter, callback?: CallbackType | CallbackType[]) {\n        this._on(name, callback);\n        return this;\n    }\n    /**\n      * Dettach an event handler function for one or more events to target\n      * @param - event's name\n      * @param -  function to execute when the event is triggered.\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  const callback = function() {\n      console.log(\"animate\");\n  };\n  target.on(\"animate\", callback);\n\n  target.off(\"animate\", callback);\n  target.off(\"animate\");\n\n      */\n    public off(name?: string, callback?: CallbackType) {\n        if (!name) {\n            this.events = {};\n        } else if (!callback) {\n            this.events[name] = [];\n        } else {\n            const callbacks = this.events[name];\n\n            if (!callbacks) {\n                return this;\n            }\n            const index = callbacks.indexOf(callback);\n\n            if (index !== -1) {\n                callbacks.splice(index, 1);\n            }\n        }\n        return this;\n    }\n    /**\n      * execute event handler\n      * @param - event's name\n      * @param - event handler's additional parameter\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  target.on(\"animate\", function(a1, a2) {\n      console.log(\"animate\", a1, a2);\n  });\n\n  target.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n      */\n    public trigger(name: string, ...data: any[]) {\n        const events = this.events;\n\n        if (!(name in events)) {\n            return this;\n        }\n\n        const args = data || [];\n\n        !args[0] && (args[0] = {});\n        const event = events[name];\n        const target = args[0];\n\n        target.type = name;\n        target.currentTarget = this;\n        !target.target && (target.target = this);\n        toArray(events[name]).forEach(callback => {\n            callback.apply(this, data);\n        });\n\n        return this;\n    }\n    public once(name: string | EventParameter, callback?: CallbackType | CallbackType[]) {\n        this._on(name, callback, true);\n        return this;\n    }\n}\nexport default EventTrigger;\n","import { IEasingFunction } from \"./types\";\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: IEasingFunction = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: IEasingFunction = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import { isString } from \"@daybrush/utils\";\nimport { PropertyObjectState } from \"./types\";\n\n/**\n* Make string, array to PropertyObject for the dot product\n*/\nclass PropertyObject implements PropertyObjectState {\n    public value: any[];\n    public prefix: string = \"\";\n    public suffix: string = \"\";\n    public model: string = \"\";\n    public type: string = \"\";\n    public separator: string = \",\";\n\n    /**\n      * @param - This value is in the array format.\n      * @param - options\n      * @example\n  var obj = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n       */\n    constructor(value: string | any[], options?: Partial<PropertyObjectState>) {\n        options && this.setOptions(options);\n        this.value = isString(value) ? value.split(this.separator) : value;\n    }\n    public setOptions(newOptions: Partial<PropertyObjectState>) {\n        for (const name in newOptions) {\n            this[name as keyof PropertyObjectState] = newOptions[name as keyof PropertyObjectState];\n        }\n        return this;\n    }\n    /**\n      * the number of values.\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n\n  console.log(obj1.length);\n  // 3\n       */\n    public size() {\n        return this.value.length;\n    }\n    /**\n      * retrieve one of values at the index\n      * @param {Number} index - index\n      * @return {Object} one of values at the index\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n\n  console.log(obj1.get(0));\n  // 1\n       */\n    public get(index: number) {\n        return this.value[index];\n    }\n    /**\n      * Set the value at that index\n      * @param {Number} index - index\n      * @param {Object} value - text, a number, object to set\n      * @return {PropertyObject} An instance itself\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  obj1.set(0, 2);\n  console.log(obj1.toValue());\n  // 2,2,3\n       */\n    public set(index: number, value: any) {\n        this.value[index] = value;\n        return this;\n    }\n    /**\n      * create a copy of an instance itself.\n      * @return {PropertyObject} clone\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  const obj2 = obj1.clone();\n       */\n    public clone(): PropertyObject {\n        const {\n            separator,\n            prefix,\n            suffix,\n            model,\n            type,\n        } = this;\n        const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n        return new PropertyObject(arr, {\n            separator,\n            prefix,\n            suffix,\n            model,\n            type,\n        });\n    }\n    /**\n      * Make Property Object to String\n      * @return {String} Make Property Object to String\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  const obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\",\n  });\n  console.log(obj4.toValue());\n  // \"rgba(100,100,100,0.5)\"\n      */\n    public toValue(): string {\n        return this.prefix + this.join() + this.suffix;\n    }\n    /**\n      * Make Property Object's array to String\n      * @return {String} Join the elements of an array into a string\n      * @example\n      //rgba(100, 100, 100, 0.5)\n      var obj4 = new PropertyObject([100,100,100,0.5], {\n          \"separator\" : \",\",\n          \"prefix\" : \"rgba(\",\n          \"suffix\" : \")\"\n      });\n      obj4.join();  // =>   \"100,100,100,0.5\"\n       */\n    public join() {\n        return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.separator);\n    }\n    /**\n      * executes a provided function once per array element.\n      * @param {Function} callback - Function to execute for each element, taking three arguments\n      * @param {All} [callback.currentValue] The current element being processed in the array.\n      * @param {Number} [callback.index] The index of the current element being processed in the array.\n      * @param {Array} [callback.array] the array.\n      * @return {PropertyObject} An instance itself\n      * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  var obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n\n  obj4.forEach(t => {\n      console.log(t);\n  });  // =>   \"100,100,100,0.5\"\n      */\n    public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n        this.value.forEach(func);\n        return this;\n    }\n}\nexport default PropertyObject;\n","import {\n    ROLES, MAXIMUM, FIXED, ALIAS,\n    PAUSED, RUNNING, PLAY, ENDED, PREFIX, PLAY_CSS, CURRENT_TIME, START_ANIMATION\n} from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport {\n    isArray, ANIMATION, ARRAY, OBJECT,\n    PROPERTY, STRING, NUMBER, IS_WINDOW, IObject, $, document, isObject, addEvent, removeEvent,\n} from \"@daybrush/utils\";\n\nexport function isPropertyObject(value: any): value is PropertyObject {\n    return value instanceof PropertyObject;\n}\nexport function setAlias(name: string, alias: string[]) {\n    ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n    const length = names.length;\n    let roles: any = ROLES;\n    let fixed: any = FIXED;\n\n    for (let i = 0; i < length - 1; ++i) {\n        !roles[names[i]] && (roles[names[i]] = {});\n        roles = roles[names[i]];\n        if (isFixedProperty) {\n            !fixed[names[i]] && (fixed[names[i]] = {});\n            fixed = fixed[names[i]];\n        }\n    }\n    isFixedProperty && (fixed[names[length - 1]] = true);\n    roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n    const type = typeof value;\n\n    if (type === OBJECT) {\n        if (isArray(value)) {\n            return ARRAY;\n        } else if (isPropertyObject(value)) {\n            return PROPERTY;\n        }\n    } else if (type === STRING || type === NUMBER) {\n        return \"value\";\n    }\n    return type;\n}\nexport function toFixed(num: number) {\n    return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function getValueByNames(\n    names: Array<string | number>,\n    properties: IObject<any>, length: number = names.length) {\n    let value = properties;\n\n    for (let i = 0; i < length; ++i) {\n        if (!isObject(value)) {\n            return undefined;\n        }\n        value = value[names[i]];\n    }\n    return value;\n}\nexport function isInProperties(roles: IObject<any>, args: string[], isCheckTrue?: boolean) {\n    const length = args.length;\n    let role: any = roles;\n\n    if (length === 0) {\n        return false;\n    }\n    for (let i = 0; i < length; ++i) {\n        if (role === true) {\n            return false;\n        }\n        role = role[args[i]];\n        if (!role || (!isCheckTrue && role === true)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isRole(args: string[], isCheckTrue?: boolean) {\n    return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: string[]) {\n    return isInProperties(FIXED, args, true);\n}\n\nexport interface IterationInterface {\n    currentTime: number;\n    iterationCount: number;\n    elapsedTime: number;\n}\nexport function setPlayCSS(item: Scene | SceneItem, isActivate: boolean) {\n    item.state[PLAY_CSS] = isActivate;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n    return item.state[PLAY_CSS] && item.isPaused();\n}\nexport function isEndedCSS(item: Scene | SceneItem) {\n    return !item.isEnded() && item.state[PLAY_CSS];\n}\n\nexport function exportCSS(id: number | string, css: string) {\n    const styleId = `${PREFIX}STYLE_${toId(id)}`;\n    const styleElement: HTMLElement = $(`#${styleId}`);\n\n    if (styleElement) {\n        styleElement.innerText = css;\n    } else {\n        document.body.insertAdjacentHTML(\"beforeend\",\n            `<style id=\"${styleId}\">${css}</style>`);\n    }\n}\nexport function makeId(selector?: boolean) {\n    for (; ;) {\n        const id = `${Math.floor(Math.random() * 10000000)}`;\n\n        if (!IS_WINDOW || !selector) {\n            return id;\n        }\n        const checkElement = $(`[data-scene-id=\"${id}\"]`);\n\n        if (!checkElement) {\n            return id;\n        }\n    }\n}\nexport function getRealId(item: Scene | SceneItem) {\n    return item.getId() || item.setId(makeId(false)).getId();\n}\nexport function toId(text: number | string) {\n    return `${text}`.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nexport function playCSS(\n    item: Scene | SceneItem, isExportCSS?: boolean,\n    playClassName?: string, properties: object = {}) {\n    if (!ANIMATION || item.getPlayState() === RUNNING) {\n        return;\n    }\n    const className = playClassName || START_ANIMATION;\n\n    if (isPausedCSS(item)) {\n        item.addPlayClass(true, className, properties);\n    } else {\n        if (item.isEnded()) {\n            item.setTime(0);\n        }\n        isExportCSS && item.exportCSS({ className });\n        const el = item.addPlayClass(false, className, properties);\n\n        if (!el) {\n            return;\n        }\n        addAnimationEvent(item, el);\n        setPlayCSS(item, true);\n    }\n    item.setPlayState(RUNNING);\n}\nexport function findIndex<T>(arr: T[], callback: (element: T) => any, defaultIndex: number = -1): number {\n    const length = arr.length;\n\n    for (let i = 0; i < length; ++i) {\n        if (callback(arr[i])) {\n            return i;\n        }\n    }\n    return defaultIndex;\n}\nexport function find<T>(arr: T[], callback: (element: T) => any, defalutValue?: T): T | undefined {\n    const index = findIndex(arr, callback);\n\n    return index > - 1 ? arr[index] : defalutValue;\n}\nexport function addAnimationEvent(item: Scene | SceneItem, el: Element) {\n    const state = item.state;\n    const duration = item.getDuration();\n    const isZeroDuration = !duration || !isFinite(duration);\n    const animationend = () => {\n        setPlayCSS(item, false);\n        item.finish();\n    };\n    const animationstart = () => {\n        item.trigger(PLAY);\n    };\n    item.once(ENDED, () => {\n        removeEvent(el, \"animationcancel\", animationend);\n        removeEvent(el, \"animationend\", animationend);\n        removeEvent(el, \"animationiteration\", animationiteration);\n        removeEvent(el, \"animationstart\", animationstart);\n    });\n    const animationiteration = ({ elapsedTime }: any) => {\n        const currentTime = elapsedTime;\n        const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n        state[CURRENT_TIME] = currentTime;\n        item.setIteration(iterationCount);\n    };\n    addEvent(el, \"animationcancel\", animationend);\n    addEvent(el, \"animationend\", animationend);\n    addEvent(el, \"animationiteration\", animationiteration);\n    addEvent(el, \"animationstart\", animationstart);\n}\n","import {\n    THRESHOLD,\n    ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n    ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n    DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED,\n    RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE, PREV_TIME, TICK_TIME, CURRENT_TIME, ITERATION, OPTIONS\n} from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier } from \"./easing\";\nimport { toFixed, makeId } from \"./utils\";\nimport { splitUnit, isString, camelize, requestAnimationFrame, isArray } from \"@daybrush/utils\";\nimport {\n    IterationCountType, DirectionType, AnimatorState,\n    IEasingFunction, FillModeType, PlayStateType, EasingType,\n} from \"./types\";\n\nfunction GetterSetter<T extends new (...args: any[]) => {}>(\n    getter: string[], setter: string[], parent: string) {\n    return (constructor: T) => {\n        const prototype = constructor.prototype;\n\n        getter.forEach(name => {\n            prototype[camelize(`get ${name}`)] = function() {\n                return this[parent][name];\n            };\n        });\n        setter.forEach(name => {\n            prototype[camelize(`set ${name}`)] = function(value: any) {\n                this[parent][name] = value;\n                return this;\n            };\n        });\n    };\n}\nfunction tick(animator: Animator, now: number, to?: number) {\n    if (animator.isPaused()) {\n        return;\n    }\n    const state = animator.state;\n    const playSpeed = state[PLAY_SPEED];\n    const prevTime = state[PREV_TIME];\n    const delay = state[DELAY];\n    const tickTime = state[TICK_TIME];\n    const currentTime = tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n    state[PREV_TIME] = now;\n    animator.setTime(currentTime - delay, true);\n    if (to && to * 1000 < now) {\n        animator.pause();\n    }\n    if (state[PLAY_STATE] === PAUSED) {\n        return;\n    }\n\n    requestAnimationFrame((time: number) => {\n        tick(animator, time, to);\n    });\n}\n\nexport function isDirectionReverse(iteration: number, iteraiontCount: IterationCountType, direction: DirectionType) {\n    if (direction === REVERSE) {\n        return true;\n    } else if (iteraiontCount !== INFINITE && iteration === iteraiontCount && iteraiontCount % 1 === 0) {\n        return direction === (iteration % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n    }\n    return direction === (iteration % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorState The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n\nconst setters = [\"id\", ITERATION_COUNT, DELAY, FILL_MODE,\n    DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n/**\n* play video, animation, the others\n* @extends EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n*/\n@GetterSetter(getters, setters, \"state\")\nclass Animator<T extends AnimatorState = AnimatorState> extends EventTrigger {\n    public state: T;\n\n    /**\n     * @param - animator's options\n     * @example\n  const animator = new Animator({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.easing.EASE,\n  });\n     */\n    constructor(options?: Partial<T>) {\n        super();\n        this.state = {\n            id: \"\",\n            easing: 0,\n            easingName: \"linear\",\n            iterationCount: 1,\n            delay: 0,\n            fillMode: \"forwards\",\n            direction: NORMAL,\n            playSpeed: 1,\n            currentTime: 0,\n            iterationTime: -1,\n            iteration: 0,\n            tickTime: 0,\n            prevTime: 0,\n            playState: PAUSED,\n            duration: 0,\n        } as T;\n        this.setOptions(options);\n    }\n    /**\n      * set animator's easing.\n      * @param curverArray - The speed curve of an animation.\n      * @return {Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.easing.EASE,\n  });\n      */\n    public setEasing(curveArray: [number, number, number, number] | IEasingFunction): this {\n        const easing = isArray(curveArray) ?\n            bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]) : curveArray;\n        const easingName = easing[EASING_NAME] || \"linear\";\n\n        const state = this.state;\n\n        state[EASING] = easing;\n        state[EASING_NAME] = easingName;\n        return this;\n    }\n    /**\n      * set animator's options.\n      * @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n      * @param - animator's options\n      * @return {Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.eaasing.EASE,\n  });\n      */\n    public setOptions(options: Partial<AnimatorState> = {}): this {\n        for (const name in options) {\n            const value = options[name];\n\n            if (name === EASING) {\n                this.setEasing(value);\n                continue;\n            } else if (name === DURATION) {\n                value && this.setDuration(value);\n                continue;\n            }\n            if (OPTIONS.indexOf(name as any) > -1) {\n                this.state[name] = value;\n            }\n        }\n\n        return this;\n    }\n    /**\n      * Get the animator's total duration including delay\n      * @return {number} Total duration\n      * @example\n  animator.getTotalDuration();\n      */\n    public getTotalDuration(): number {\n        return this.getActiveDuration(true);\n    }\n    /**\n      * Get the animator's total duration excluding delay\n      * @return {number} Total duration excluding delay\n      * @example\n  animator.getActiveDuration();\n      */\n    public getActiveDuration(delay?: boolean): number {\n        const state = this.state;\n        const count = state[ITERATION_COUNT];\n        if (count === INFINITE) {\n            return Infinity;\n        }\n        return (delay ? state[DELAY] : 0) + this.getDuration() * count;\n    }\n    /**\n      * Check if the animator has reached the end.\n      * @return {boolean} ended\n      * @example\n  animator.isEnded(); // true or false\n      */\n    public isEnded(): boolean {\n        if (this.state[TICK_TIME] === 0 && this.state[PLAY_STATE] === PAUSED) {\n            return true;\n        } else if (this.getTime() < this.getActiveDuration()) {\n            return false;\n        }\n        return true;\n    }\n    /**\n      *Check if the animator is paused:\n      * @return {boolean} paused\n      * @example\n  animator.isPaused(); // true or false\n      */\n    public isPaused(): boolean {\n        return this.state[PLAY_STATE] === PAUSED;\n    }\n    public start(delay: number = this.state[DELAY]): void {\n        const state = this.state;\n\n        state[PLAY_STATE] = RUNNING;\n        if (state[TICK_TIME] >= delay) {\n            /**\n             * This event is fired when play animator.\n             * @event Animator#play\n             */\n            this.trigger(PLAY);\n        }\n    }\n    /**\n      * play animator\n      * @return {Animator} An instance itself.\n      */\n    public play(toTime?: number) {\n        const state = this.state;\n        const delay = state[DELAY];\n        const currentTime = this.getTime();\n\n        state[PLAY_STATE] = RUNNING;\n\n        if (this.isEnded() && (currentTime === 0 || currentTime >= this.getActiveDuration())) {\n            this.setTime(-delay, true);\n        }\n        state[TICK_TIME] = this.getTime();\n\n        requestAnimationFrame((time: number) => {\n            state[PREV_TIME] = time;\n            tick(this, time, toTime);\n        });\n        this.start();\n        return this;\n    }\n    /**\n      * pause animator\n      * @return {Animator} An instance itself.\n      */\n    public pause(): this {\n        const state = this.state;\n\n        if (state[PLAY_STATE] !== PAUSED) {\n            state[PLAY_STATE] = PAUSED;\n            /**\n             * This event is fired when animator is paused.\n             * @event Animator#paused\n             */\n            this.trigger(PAUSED);\n        }\n        return this;\n    }\n    /**\n       * end animator\n       * @return {Animator} An instance itself.\n      */\n    public finish() {\n        this.setTime(0);\n        this.state[TICK_TIME] = 0;\n        this.end();\n        return this;\n    }\n    /**\n       * end animator\n       * @return {Animator} An instance itself.\n      */\n    public end() {\n        this.pause();\n        /**\n             * This event is fired when animator is ended.\n             * @event Animator#ended\n             */\n        this.trigger(ENDED);\n        return this;\n    }\n    /**\n      * set currentTime\n      * @param {Number|String} time - currentTime\n      * @return {Animator} An instance itself.\n      * @example\n\n  animator.setTime(\"from\"); // 0\n  animator.setTime(\"to\"); // 100%\n  animator.setTime(\"50%\");\n  animator.setTime(10);\n  animator.getTime() // 10\n      */\n    public setTime(time: number | string, isTick?: boolean) {\n        const activeDuration = this.getActiveDuration();\n        const state = this.state;\n        const prevTime = state[TICK_TIME];\n        const delay = state[DELAY];\n        let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n        state[TICK_TIME] = delay + currentTime;\n        if (currentTime < 0) {\n            currentTime = 0;\n        } else if (currentTime > activeDuration) {\n            currentTime = activeDuration;\n        }\n        state[CURRENT_TIME] = currentTime;\n        this.calculate();\n\n        if (isTick) {\n            const tickTime = state[TICK_TIME];\n\n            if (prevTime < delay && time >= 0 ||\n                state[PLAY_STATE] !== RUNNING && tickTime >= delay && !this.isEnded()) {\n                this.start(0);\n            }\n            if (tickTime < prevTime || this.isEnded()) {\n                this.end();\n                return;\n            }\n        }\n        if (this.isDelay()) {\n            return this;\n        }\n        /**\n             * This event is fired when the animator updates the time.\n             * @event Animator#timeupdate\n             * @param {Object} param The object of data to be sent to an event.\n             * @param {Number} param.currentTime The total time that the animator is running.\n             * @param {Number} param.time The iteration time during duration that the animator is running.\n             * @param {Number} param.iterationCount The iteration count that the animator is running.\n             */\n        this.trigger(TIMEUPDATE, {\n            currentTime,\n            time: this.getIterationTime(),\n            iterationCount: state[ITERATION],\n        });\n\n        return this;\n    }\n    /**\n      * Get the animator's current time\n      * @return {number} current time\n      * @example\n  animator.getTime();\n      */\n    public getTime(): number {\n        return this.state[CURRENT_TIME];\n    }\n    public getUnitTime(time: string | number) {\n        if (isString(time)) {\n            const duration = this.getDuration() || 100;\n\n            if (time === \"from\") {\n                return 0;\n            } else if (time === \"to\") {\n                return duration;\n            }\n            const { unit, value } = splitUnit(time);\n\n            if (unit === \"%\") {\n                !this.getDuration() && (this.state[DURATION] = duration);\n                return toFixed(parseFloat(time) / 100 * duration);\n            } else if (unit === \">\") {\n                return value + THRESHOLD;\n            } else {\n                return value;\n            }\n        } else {\n            return toFixed(time);\n        }\n    }\n    /**\n       * Check if the current state of animator is delayed.\n       * @return {boolean} check delay state\n       */\n    public isDelay() {\n        const state = this.state;\n        const delay = state[DELAY];\n        const tickTime = state[TICK_TIME];\n\n        return delay > 0 && (tickTime < delay);\n    }\n    public setIteration(iterationCount: number): this {\n        const state = this.state;\n        const passIterationCount = Math.floor(iterationCount);\n        const maxIterationCount = state[ITERATION_COUNT] === INFINITE ? Infinity : state[ITERATION_COUNT];\n\n        if (state[ITERATION] < passIterationCount && passIterationCount < maxIterationCount) {\n            /**\n                  * The event is fired when an iteration of an animation ends.\n                  * @event Animator#iteration\n                  * @param {Object} param The object of data to be sent to an event.\n                  * @param {Number} param.currentTime The total time that the animator is running.\n                  * @param {Number} param.iterationCount The iteration count that the animator is running.\n                  */\n            this.trigger(\"iteration\", {\n                currentTime: state[CURRENT_TIME],\n                iterationCount: passIterationCount,\n            });\n        }\n        state[ITERATION] = iterationCount;\n        return this;\n    }\n    protected calculate() {\n        const state = this.state;\n        const iterationCount = state[ITERATION_COUNT];\n        const fillMode = state[FILL_MODE];\n        const direction = state[DIRECTION];\n        const duration = this.getDuration();\n        const time = this.getTime();\n        const iteration = duration === 0 ? 0 : time / duration;\n        let currentIterationTime = duration ? time % duration : 0;\n\n        if (!duration) {\n            this.setIterationTime(0);\n            return this;\n        }\n        this.setIteration(iteration);\n\n        // direction : normal, reverse, alternate, alternate-reverse\n        // fillMode : forwards, backwards, both, none\n        const isReverse = isDirectionReverse(iteration, iterationCount, direction);\n\n        const isFiniteDuration = isFinite(duration);\n        if (isFiniteDuration && isReverse) {\n            currentIterationTime = duration - currentIterationTime;\n        }\n        if (isFiniteDuration && iterationCount !== INFINITE) {\n            const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n            // fill forwards\n            if (iteration >= iterationCount) {\n                currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n                isReverse && (currentIterationTime = duration - currentIterationTime);\n            }\n        }\n        this.setIterationTime(currentIterationTime);\n        return this;\n    }\n}\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#setId\n * @param {number | string} - String or number of id to be set in the animator\n * @return {Animator} An instance itself.\n */\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#getId\n * @return {number | string} the indicator of the item.\n */\n/**\n * Get a delay for the start of an animation.\n * @method Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Animator#setDelay\n * @param {number} delay - delay\n * @return {Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#getFillMode\n * @return {FillModeType} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#setFillMode\n * @param {FillModeType} fillMode - fillMode\n * @return {Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Animator#getIterationCount\n * @return {IterationCountType} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Animator#setIterationCount\n * @param {IterationCountType} iterationCount - iterationCount\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#getDirection\n * @return {DirectionType} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#setDirection\n * @param {DirectionType} direction - direction\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Animator#getPlayState\n * @return {PlayStateType} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Animator#setPlayState\n * @param {PlayStateType} playState - playState\n * @return {Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Animator#setDuration\n * @param {number} duration - duration\n * @return {Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Animator#getEasing\n * @return {EasingType} easing\n */\n/**\n * Get the speed curve's name\n * @method Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\n// tslint:disable-next-line:interface-name\ninterface Animator<T extends AnimatorState> {\n    setId(id: number | string): this;\n    getId(): number | string;\n    getIterationTime(): number;\n    setIterationTime(time: number): this;\n    setDelay(delay: number): this;\n    getDelay(): number;\n    setFillMode(fillMode: FillModeType): this;\n    getFillMode(): FillModeType;\n    setIterationCount(iterationCount: IterationCountType): this;\n    getIterationCount(): IterationCountType;\n    setDirection(direction: DirectionType): this;\n    getDirection(): DirectionType;\n    setPlayState(playState: PlayStateType): this;\n    getPlayState(): PlayStateType;\n    setPlaySpeed(playSpeed: number): this;\n    getPlaySpeed(): number;\n    setDuration(duration: number): this;\n    getDuration(): number;\n    getEasing(): EasingType;\n    getEasingName(): string;\n}\nexport default Animator;\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {\n  COLOR_MODELS, isString,\n  splitComma, splitSpace, stringToRGBA,\n  RGBA, splitBracket, IObject, isArray\n} from \"@daybrush/utils\";\n\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const obj: IObject<string | PropertyObject> = {};\n  let length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      --length;\n      continue;\n    }\n    obj[matches[1].trim()] = toPropertyObject(matches[2].trim());\n  }\n  return {styles: obj, length};\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(text: string) {\n  // [prefix, value, other]\n  const { prefix: model, value, suffix: afterModel } = splitBracket(text);\n\n  if (typeof value === \"undefined\") {\n    return text;\n  }\n  if (COLOR_MODELS.indexOf(model) !== -1) {\n    return arrayToColorObject(stringToRGBA(text));\n  }\n  // divide comma(,)\n  const obj = toPropertyObject(value);\n\n  let arr = [value];\n  let separator = \",\";\n  let prefix = `${model}(`;\n  let suffix = `)${afterModel}`;\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.separator;\n    arr = obj.value;\n    prefix += obj.prefix;\n    suffix = obj.suffix + suffix;\n  }\n  return new PropertyObject(arr, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  const result = stringToRGBA(value);\n\n  return result ? arrayToColorObject(result) : value;\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: any[]): PropertyObject;\nexport function toPropertyObject(value: IObject<any>): IObject<any>;\nexport function toPropertyObject(value: string): PropertyObject | string;\nexport function toPropertyObject(value: string | IObject<any> | any[]) {\n  if (!isString(value)) {\n    if (isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: IObject<any> = {}) {\n  const model = object.model;\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => {\n      toObject(obj, result);\n    });\n  }\n  return result;\n}\n","import {\n    ALIAS, TIMING_FUNCTION, TRANSFORM_NAME, EASING_NAME\n} from \"./consts\";\nimport { isRole, getType, isPropertyObject, getValueByNames, isFixed } from \"./utils\";\nimport { toPropertyObject, splitStyle, toObject } from \"./utils/property\";\nimport {\n    isObject, isArray, isString,\n    ANIMATION, TRANSFORM, FILTER, PROPERTY, FUNCTION, ARRAY, OBJECT, IObject, isUndefined\n} from \"@daybrush/utils\";\nimport { NameType } from \"./types\";\n\nfunction toInnerProperties(obj: IObject<string>) {\n    if (!obj) {\n        return \"\";\n    }\n    const arrObj = [];\n\n    for (const name in obj) {\n        arrObj.push(`${name.replace(/\\d/g, \"\")}(${obj[name]})`);\n    }\n    return arrObj.join(\" \");\n}\n\n/* eslint-disable */\nfunction clone(target: IObject<any>, toValue = false) {\n    return merge({}, target, toValue);\n}\nfunction merge(to: IObject<any>, from: IObject<any>, toValue = false) {\n    for (const name in from) {\n        const value = from[name];\n        const type = getType(value);\n\n        if (type === PROPERTY) {\n            to[name] = toValue ? value.toValue() : value.clone();\n        } else if (type === FUNCTION) {\n            to[name] = toValue ? getValue([name], value) : value;\n        } else if (type === ARRAY) {\n            to[name] = value.slice();\n        } else if (type === OBJECT) {\n            if (isObject(to[name]) && !isPropertyObject(to[name])) {\n                merge(to[name], value, toValue);\n            } else {\n                to[name] = clone(value, toValue);\n            }\n        } else {\n            to[name] = from[name];\n        }\n    }\n    return to;\n}\n/* eslint-enable */\n\nfunction getPropertyName(args: NameType[]) {\n    return args[0] in ALIAS ? ALIAS[args[0]] : args;\n}\nfunction getValue(names: NameType[], value: any): any {\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n        return value.toValue();\n    } else if (type === FUNCTION) {\n        if (names[0] !== TIMING_FUNCTION) {\n            return getValue(names, value());\n        }\n    } else if (type === OBJECT) {\n        return clone(value, true);\n    }\n    return value;\n}\n/**\n* Animation's Frame\n*/\nclass Frame {\n    public properties: IObject<any>;\n    /**\n     * @param - properties\n     * @example\n  const frame = new Scene.Frame({\n      display: \"none\"\n      transform: {\n          translate: \"50px\",\n          scale: \"5, 5\",\n      }\n  });\n     */\n    constructor(properties: IObject<any> = {}) {\n        this.properties = {};\n        this.set(properties);\n    }\n    /**\n      * get property value\n      * @param {...Number|String|PropertyObject} args - property name or value\n      * @example\n      frame.get(\"display\") // => \"none\", \"block\", ....\n      frame.get(\"transform\", \"translate\") // => \"10px,10px\"\n      */\n    public get(...args: NameType[]) {\n        const value = this.raw(...args);\n\n        return getValue(getPropertyName(args), value);\n    }\n\n    public raw(...args: NameType[]) {\n        return getValueByNames(getPropertyName(args), this.properties);\n    }\n    /**\n      * remove property value\n      * @param {...String} args - property name\n      * @return {Frame} An instance itself\n      * @example\n      frame.remove(\"display\")\n      */\n    public remove(...args: NameType[]) {\n        const params = getPropertyName(args);\n        const length = params.length;\n\n        if (!length) {\n            return this;\n        }\n        const value = getValueByNames(params, this.properties, length - 1);\n\n        if (isObject(value)) {\n            delete value[params[length - 1]];\n        }\n        return this;\n    }\n    /**\n      * set property\n      * @param {...Number|String|PropertyObject} args - property names or values\n      * @return {Frame} An instance itself\n      * @example\n  // one parameter\n  frame.set({\n      display: \"none\",\n      transform: {\n          translate: \"10px, 10px\",\n          scale: \"1\",\n      },\n      filter: {\n          brightness: \"50%\",\n          grayscale: \"100%\"\n      }\n  });\n\n  // two parameters\n  frame.set(\"transform\", {\n      translate: \"10px, 10px\",\n      scale: \"1\",\n  });\n\n  // three parameters\n  frame.set(\"transform\", \"translate\", \"50px\");\n    */\n    public set(...args: any[]) {\n        const self = this;\n        const length = args.length;\n        const params = args.slice(0, -1);\n        const value = args[length - 1];\n\n        if (params[0] in ALIAS) {\n            self._set(ALIAS[params[0]], value);\n        } else if (length === 2 && isArray(params[0])) {\n            self._set(params[0], value);\n        } else if (isArray(value)) {\n            self._set(params, value);\n        } else if (isPropertyObject(value)) {\n            if (isRole(params)) {\n                self.set(...params, toObject(value));\n            } else {\n                self._set(params, value);\n            }\n        } else if (isObject(value)) {\n            for (const name in value) {\n                self.set(...params, name, value[name]);\n            }\n        } else if (isString(value)) {\n            if (isRole(params, true)) {\n                if (isFixed(params) || !isRole(params)) {\n                    this._set(params, value);\n                } else  {\n                    const obj = toPropertyObject(value);\n\n                    if (isObject(obj)) {\n                        self.set(...params, obj);\n                    }\n                }\n                return this;\n            } else {\n                const { styles, length: stylesLength } = splitStyle(value);\n\n                for (const name in styles) {\n                    self.set(...params, name, styles[name]);\n                }\n                if (stylesLength) {\n                    return this;\n                }\n            }\n            self._set(params, value);\n        } else {\n            self._set(params, value);\n        }\n        return self;\n    }\n    /**\n      * check that has property.\n      * @param {...String} args - property name\n      * @example\n      frame.has(\"property\", \"display\") // => true or false\n      */\n    public has(...args: NameType[]) {\n        const params = getPropertyName(args);\n        const length = params.length;\n\n        if (!length) {\n            return false;\n        }\n        return !isUndefined(getValueByNames(params, this.properties, length));\n    }\n    /**\n      * clone frame.\n      * @return {Frame} An instance of clone\n      * @example\n      frame.clone();\n      */\n    public clone() {\n        const frame = new Frame();\n\n        return frame.merge(this);\n    }\n    /**\n      * merge one frame to other frame.\n      * @param - target frame.\n      * @return {Frame} An instance itself\n      * @example\n      frame.merge(frame2);\n      */\n    public merge(frame: Frame) {\n        const properties = this.properties;\n        const frameProperties = frame.properties;\n\n        if (!frameProperties) {\n            return this;\n        }\n        merge(properties, frameProperties);\n\n        return this;\n    }\n    /**\n      * Specifies an css object that coverted the frame.\n      * @return {object} cssObject\n      */\n    public toCSSObject() {\n        const properties = this.get();\n        const cssObject: IObject<string> = {};\n\n        for (const name in properties) {\n            if (isRole([name], true)) {\n                continue;\n            }\n            const value = properties[name];\n\n            if (name === TIMING_FUNCTION) {\n                cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n                    (isString(value) ? value : value[EASING_NAME]) || \"initial\";\n                continue;\n            }\n            cssObject[name] = value;\n        }\n        const transform = toInnerProperties(properties[TRANSFORM_NAME]);\n        const filter = toInnerProperties(properties.filter);\n\n        TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n        FILTER && filter && (cssObject[FILTER] = filter);\n        return cssObject;\n    }\n    /**\n      * Specifies an css text that coverted the frame.\n      * @return {string} cssText\n      */\n    public toCSS() {\n        const cssObject = this.toCSSObject();\n        const cssArray = [];\n\n        for (const name in cssObject) {\n            cssArray.push(`${name}:${cssObject[name]};`);\n        }\n        return cssArray.join(\"\");\n    }\n    private _set(args: NameType[], value: any) {\n        let properties = this.properties;\n        const length = args.length;\n\n        for (let i = 0; i < length - 1; ++i) {\n            const name = args[i];\n\n            !(name in properties) && (properties[name] = {});\n            properties = properties[name];\n        }\n        if (!length) {\n            return;\n        }\n        properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n    }\n}\nexport default Frame;\n","\nimport PropertyObject from \"../PropertyObject\";\nimport { getType } from \"../utils\";\nimport { toPropertyObject } from \"./property\";\nimport { splitUnit, PROPERTY, FUNCTION, ARRAY } from \"@daybrush/utils\";\nimport { EasingType } from \"../types\";\n\nfunction dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\nfunction dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.model;\n  const model2 = color2.model;\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n\nfunction dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.type;\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.separator || a2.separator,\n    prefix: a1.prefix || a2.prefix,\n    suffix: a1.suffix || a2.suffix,\n    model: a1.model || a2.model,\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === ARRAY) {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = dotNumber(v1.value, v2.value, b1, b2);\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\nexport function dotNumber(a1: number, a2: number, b1: number, b2: number) {\n  return (a1 * b2 + a2 * b1) / (b1 + b2);\n}\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import Animator, { isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n    toFixed,\n    isFixed,\n    playCSS,\n    toId,\n    exportCSS,\n    getRealId,\n    makeId,\n    isPausedCSS,\n    isRole,\n    isInProperties,\n    getValueByNames,\n    isEndedCSS,\n    setPlayCSS,\n    find,\n    findIndex,\n} from \"./utils\";\nimport { dotValue, dotNumber } from \"./utils/dot\";\nimport {\n    START_ANIMATION,\n    PREFIX, THRESHOLD,\n    TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, NORMAL, INFINITE,\n    REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n    EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION, DATA_SCENE_ID, PLAY_CSS, SELECTOR, ROLES, CURRENT_TIME\n} from \"./consts\";\nimport {\n    isObject, isArray, isUndefined, decamelize,\n    ANIMATION, fromCSS, addClass, removeClass, hasClass,\n    KEYFRAMES, requestAnimationFrame, isFunction,\n    IObject, $, splitComma, toArray, isString, IArrayFormat, TRANSFORM\n} from \"@daybrush/utils\";\nimport {\n    NameType, RoleObject, AnimateElement, AnimatorState,\n    SceneItemState, SceneItemOptions, EasingType, PlayCondition, DirectionType\n} from \"./types\";\n\nfunction getNearTimeIndex(times: number[], time: number) {\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n        if (times[i] === time) {\n            return [i, i];\n        } else if (times[i] > time) {\n            return [i > 0 ? i - 1 : 0, i];\n        }\n    }\n    return [length - 1, length - 1];\n}\nfunction makeAnimationProperties(properties: object) {\n    const cssArray = [];\n\n    for (const name in properties) {\n        cssArray.push(`${ANIMATION}-${decamelize(name)}:${properties[name]};`);\n    }\n    return cssArray.join(\"\");\n}\nfunction isPureObject(obj: any): obj is object {\n    return isObject(obj) && obj.constructor === Object;\n}\nfunction getNames(names: IObject<any>, stack: string[]) {\n    let arr: string[][] = [];\n\n    if (isPureObject(names)) {\n        for (const name in names) {\n            stack.push(name);\n            arr = arr.concat(getNames(names[name], stack));\n            stack.pop();\n        }\n    } else {\n        arr.push(stack.slice());\n    }\n    return arr;\n}\nfunction updateFrame(names: IObject<any>, properties: IObject<any>) {\n    for (const name in properties) {\n        const value = properties[name];\n\n        if (!isPureObject(value)) {\n            names[name] = true;\n            continue;\n        }\n        if (!isObject(names[name])) {\n            names[name] = {};\n        }\n        updateFrame(names[name], properties[name]);\n    }\n    return names;\n}\nfunction addTime(times: number[], time: number) {\n    const length = times.length;\n    for (let i = 0; i < length; ++i) {\n        if (time < times[i]) {\n            times.splice(i, 0, time);\n            return;\n        }\n    }\n    times[length] = time;\n}\nfunction addEntry(entries: number[][], time: number, keytime: number) {\n    const prevEntry = entries[entries.length - 1];\n\n    (!prevEntry || prevEntry[0] !== time || prevEntry[1] !== keytime) &&\n        entries.push([toFixed(time), toFixed(keytime)]);\n}\nexport function getEntries(times: number[], states: AnimatorState[]) {\n    let entries = times.map(time => ([time, time]));\n    let nextEntries = [];\n\n    states.forEach(state => {\n        const iterationCount = state[ITERATION_COUNT] as number;\n        const delay = state[DELAY];\n        const playSpeed = state[PLAY_SPEED];\n        const direction = state[DIRECTION];\n        const intCount = Math.ceil(iterationCount);\n        const currentDuration = entries[entries.length - 1][0];\n        const length = entries.length;\n        const lastTime = currentDuration * iterationCount;\n\n        for (let i = 0; i < intCount; ++i) {\n            const isReverse =\n                direction === REVERSE ||\n                direction === ALTERNATE && i % 2 ||\n                direction === ALTERNATE_REVERSE && !(i % 2);\n\n            for (let j = 0; j < length; ++j) {\n                const entry = entries[isReverse ? length - j - 1 : j];\n                const time = entry[1];\n                const currentTime = currentDuration * i + (isReverse ? currentDuration - entry[0] : entry[0]);\n                const prevEntry = entries[isReverse ? length - j : j - 1];\n\n                if (currentTime > lastTime) {\n                    if (j !== 0) {\n                        const prevTime = currentDuration * i +\n                            (isReverse ? currentDuration - prevEntry[0] : prevEntry[0]);\n                        const divideTime = dotNumber(prevEntry[1], time, lastTime - prevTime, currentTime - lastTime);\n\n                        addEntry(nextEntries, (delay + currentDuration * iterationCount) / playSpeed, divideTime);\n                    }\n                    break;\n                } else if (currentTime === lastTime && nextEntries[nextEntries.length - 1][0] === lastTime + delay) {\n                    break;\n                }\n                addEntry(nextEntries, (delay + currentTime) / playSpeed, time);\n            }\n        }\n        // delay time\n        delay && nextEntries.unshift([0, nextEntries[0][1]]);\n\n        entries = nextEntries;\n        nextEntries = [];\n    });\n\n    return entries;\n}\n/**\n* manage Frame Keyframes and play keyframes.\n* @extends Animator\n* @example\nconst item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator<SceneItemState> {\n    public times: number[] = [];\n    public items: IObject<Frame> = {};\n    public names: RoleObject = {};\n    public elements: AnimateElement[] = [];\n    public temp: Frame;\n    private needUpdate: boolean = false;\n    private target: any;\n    private targetFunc: (frame: Frame) => void;\n\n    /**\n      * @param - properties\n      * @param - options\n      * @example\n      const item = new SceneItem({\n          0: {\n              display: \"none\",\n          },\n          1: {\n              display: \"block\",\n              opacity: 0,\n          },\n          2: {\n              opacity: 1,\n          }\n      });\n       */\n    constructor(properties?: IObject<any>, options?: Partial<SceneItemOptions>) {\n        super();\n        this.load(properties, options);\n    }\n    public getDuration() {\n        const times = this.times;\n        const length = times.length;\n\n        return Math.max(this.state[DURATION], length === 0 ? 0 : times[length - 1]);\n    }\n    /**\n      * get size of list\n      * @return {Number} length of list\n      */\n    public size() {\n        return this.times.length;\n    }\n    public setDuration(duration: number) {\n        if (!duration) {\n            return this;\n        }\n        const originalDuration = this.getDuration();\n\n        if (originalDuration > 0) {\n            const ratio = duration / originalDuration;\n            const { times, items } = this;\n            const obj: IObject<Frame> = {};\n\n            this.times = times.map(time => {\n                const time2 = toFixed(time * ratio);\n\n                obj[time2] = items[time];\n\n                return time2;\n            });\n            this.items = obj;\n        }\n        super.setDuration(toFixed(duration));\n        return this;\n    }\n    public setId(id?: number | string) {\n        const state = this.state;\n\n        state.id = id || makeId(!!length);\n        const elements = this.elements;\n\n        if (elements.length && !state[SELECTOR]) {\n            const sceneId = toId(this.getId());\n\n            state[SELECTOR] = `[${DATA_SCENE_ID}=\"${sceneId}\"]`;\n            elements.forEach(element => {\n                element.setAttribute(DATA_SCENE_ID, sceneId);\n            });\n        }\n        return this;\n    }\n\n    /**\n      * Set properties to the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {SceneItem} An instance itself\n      * @example\n  item.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\n  console.log(item.get(0, \"a\")); // \"b\"\n      */\n    public set(time: any, ...args: any[]) {\n        if (isArray(time)) {\n            const length = time.length;\n\n            for (let i = 0; i < length; ++i) {\n                const t = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n                this.set(t, time[i]);\n            }\n        } else if (isObject(time)) {\n            for (const t in time) {\n                const value = time[t];\n                const realTime = this.getUnitTime(t);\n\n                if (isNaN(realTime)) {\n                    getNames(value, [t]).forEach(names => {\n                        const innerValue = getValueByNames(names.slice(1), value);\n                        const arr = isArray(innerValue) ?\n                        innerValue : [getValueByNames(names, this.target), innerValue];\n                        const length = arr.length;\n\n                        for (let i = 0; i < length; ++i) {\n                            this.newFrame(`${i / (length - 1) * 100}%`).set(names, arr[i]);\n                        }\n                    });\n                } else {\n                    this.set(realTime, value);\n                }\n            }\n        } else {\n            const value = args[0];\n\n            if (value instanceof Frame) {\n                this.setFrame(time, value);\n            } else if (value instanceof SceneItem) {\n                const delay = value.getDelay();\n                const realTime = this.getUnitTime(time);\n                const frames = value.toObject(!this.hasFrame(realTime + delay), realTime);\n\n                for (const frameTime in frames) {\n                    this.set(frameTime, frames[frameTime]);\n                }\n            } else if (args.length === 1 && isArray(value)) {\n                value.forEach((item: any) => {\n                    this.set(time, item);\n                });\n            } else {\n                const frame = this.newFrame(time);\n\n                frame.set(...args);\n            }\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * Get properties of the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} args property's name or properties\n      * @return {Number|String|PropertyObejct} property value\n      * @example\n  item.get(0, \"a\"); // item.getFrame(0).get(\"a\");\n  item.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n      */\n    public get(time: string | number, ...args: NameType[]) {\n        const frame = this.getFrame(time);\n\n        return frame && frame.get(...args);\n    }\n    /**\n      * remove properties to the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {SceneItem} An instance itself\n      * @example\n  item.remove(0, \"a\");\n      */\n    public remove(time: number, ...args: NameType[]) {\n        const frame = this.getFrame(time);\n\n        frame && frame.remove(...args);\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * Append the item or object at the last time.\n      * @param - the scene item or item object\n      * @return An instance itself\n      * @example\n  item.append(new SceneItem({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  }));\n  item.append({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n  item.set(item.getDuration(), {\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n      */\n    public append(item: SceneItem | IObject<any>) {\n        this.set(this.getDuration(), item);\n        return this;\n    }\n    /**\n      * Push the front frames for the time and prepend the scene item or item object.\n      * @param - the scene item or item object\n      * @return An instance itself\n      */\n    public prepend(item: SceneItem | IObject<any>) {\n        if (item instanceof SceneItem) {\n            const unshiftTime = item.getDuration() + item.getDelay();\n            const firstFrame = this.getFrame(0);\n            // remove first frame\n            this.removeFrame(0);\n            this.unshift(unshiftTime);\n            this.set(0, item);\n            this.set(unshiftTime + THRESHOLD, firstFrame);\n        } else {\n            this.prepend(new SceneItem(item));\n        }\n        return this;\n    }\n    /**\n   * Push out the amount of time.\n   * @param - time to push\n     * @return {}\n     * @example\n   item.get(0); // frame 0\n   item.unshift(3);\n   item.get(3) // frame 0\n     */\n    public unshift(time: number) {\n        const { times, items } = this;\n        const obj: IObject<Frame> = {};\n\n        this.times = times.map(t => {\n            const time2 = toFixed(time + t);\n\n            obj[time2] = items[t];\n            return time2;\n        });\n        this.items = obj;\n    }\n    /**\n     * Get the frames in the item in object form.\n     * @return {}\n     * @example\n item.toObject();\n // {0: {display: \"none\"}, 1: {display: \"block\"}}\n     */\n    public toObject(isStartZero = true, startTime = 0): IObject<Frame> {\n        const obj: IObject<Frame> = {};\n        const delay = this.getDelay();\n\n        this.forEach((frame: Frame, time: number) => {\n            obj[(!time && !isStartZero ? THRESHOLD : 0) + delay + startTime + time] = frame.clone();\n        });\n        return obj;\n    }\n    /**\n     * Specifies an element to synchronize items' keyframes.\n     * @param {string} selectors - Selectors to find elements in items.\n     * @return {SceneItem} An instance itself\n     * @example\n item.setSelector(\"#id.class\");\n     */\n    public setSelector(target: string | boolean) {\n        this.setElement(target);\n    }\n    /**\n      * Specifies an element to synchronize item's keyframes.\n    * @param - elements to synchronize item's keyframes.\n    * @param - Make sure that you have peusdo.\n      * @return {SceneItem} An instance itself\n      * @example\n  item.setElement(document.querySelector(\"#id.class\"));\n  item.setElement(document.querySelectorAll(\".class\"));\n      */\n    public setElement(target: boolean | string | AnimateElement | IArrayFormat<AnimateElement>) {\n        const state = this.state;\n        let elements: AnimateElement[] = [];\n\n        if (!target) {\n            return this;\n        } else if (target === true || isString(target)) {\n            const selector = target === true ? `${state.id}` : target;\n            const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(selector);\n\n            elements = toArray($(matches ? matches[1] : selector, true));\n            state[SELECTOR] = selector;\n        } else {\n            elements = (target instanceof Element) ? [target] : toArray(target);\n        }\n        if (!elements.length) {\n            return this;\n        }\n        this.elements = elements;\n        this.setId(this.getId());\n        this.target = elements[0].style;\n        this.targetFunc = (frame: Frame) => {\n            const attributes = frame.get(\"attribute\");\n\n            if (attributes) {\n                for (const name in attributes) {\n                    elements.forEach(el => {\n                        el.setAttribute(name, attributes[name]);\n                    });\n                }\n            }\n            const cssText = frame.toCSS();\n\n            if (state.cssText !== cssText) {\n                state.cssText = cssText;\n\n                elements.forEach(el => {\n                    el.style.cssText += cssText;\n                });\n                return frame;\n            }\n        };\n        return this;\n    }\n    public setTarget(target: any): this {\n        this.target = target;\n        this.targetFunc = (frame: Frame) => {\n            const obj = frame.get();\n\n            for (const name in obj) {\n                target[name] = obj[name];\n            }\n        };\n        return this;\n    }\n    /**\n      * add css styles of items's element to the frame at that time.\n      * @param {Array} properties - elements to synchronize item's keyframes.\n      * @return {SceneItem} An instance itself\n      * @example\n  item.setElement(document.querySelector(\"#id.class\"));\n  item.setCSS(0, [\"opacity\"]);\n  item.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n      */\n    public setCSS(time: number, properties: string[]) {\n        this.set(time, fromCSS(this.elements, properties));\n        return this;\n    }\n    public setTime(time: number | string, isTick?: boolean, parentEasing?: EasingType) {\n        super.setTime(time, isTick);\n\n        const iterationTime = this.getIterationTime();\n        const easing = this.getEasing() || parentEasing;\n        const frame = this.getNowFrame(iterationTime, easing);\n        const currentTime = this.getTime();\n\n        this.temp = frame;\n        /**\n             * This event is fired when timeupdate and animate.\n             * @event SceneItem#animate\n             * @param {Number} param.currentTime The total time that the animator is running.\n             * @param {Number} param.time The iteration time during duration that the animator is running.\n             * @param {Frame} param.frame frame of that time.\n             */\n        this.trigger(\"animate\", {\n            frame,\n            currentTime,\n            time: iterationTime,\n        });\n        this.targetFunc && this.targetFunc(frame);\n        return this;\n    }\n    /**\n      * update property names used in frames.\n      * @return {SceneItem} An instance itself\n      * @example\n  item.update();\n      */\n    public update() {\n        const names = this.names;\n        this.forEach(frame => {\n            updateFrame(names, frame.properties);\n        });\n        this.needUpdate = false;\n        return this;\n    }\n    /**\n      * Create and add a frame to the sceneItem at that time\n      * @param {Number} time - frame's time\n      * @return {Frame} Created frame.\n      * @example\n  item.newFrame(time);\n      */\n    public newFrame(time: string | number) {\n        let frame = this.getFrame(time);\n\n        if (frame) {\n            return frame;\n        }\n        frame = new Frame();\n        this.setFrame(time, frame);\n        return frame;\n    }\n    /**\n      * Add a frame to the sceneItem at that time\n      * @param {Number} time - frame's time\n      * @return {SceneItem} An instance itself\n      * @example\n  item.setFrame(time, frame);\n      */\n    public setFrame(time: string | number, frame: Frame) {\n        const realTime = this.getUnitTime(time);\n\n        this.items[realTime] = frame;\n        addTime(this.times, realTime);\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * get sceneItem's frame at that time\n      * @param {Number} time - frame's time\n      * @return {Frame} sceneItem's frame at that time\n      * @example\n  const frame = item.getFrame(time);\n      */\n    public getFrame(time: number | string) {\n        return this.items[this.getUnitTime(time)];\n    }\n    /**\n      * check if the item has a frame at that time\n      * @param {Number} time - frame's time\n      * @return {Boolean} true: the item has a frame // false: not\n      * @example\n  if (item.hasFrame(10)) {\n      // has\n  } else {\n      // not\n  }\n      */\n    public hasFrame(time: number | string) {\n        return this.getUnitTime(time) in this.items;\n    }\n    /**\n      * Check if keyframes has propery's name\n      * @param - property's time\n      * @return {boolean} true: if has property, false: not\n      * @example\n    item.hasName([\"transform\", \"translate\"]); // true or not\n      */\n    public hasName(args: string[]) {\n        this.needUpdate && this.update();\n        return isInProperties(this.names, args, true);\n    }\n    /**\n      * remove sceneItem's frame at that time\n      * @param {Number} time - frame's time\n      * @return {SceneItem} An instance itself\n      * @example\n  item.removeFrame(time);\n      */\n    public removeFrame(time: number) {\n        const items = this.items;\n        const index = this.times.indexOf(time);\n\n        delete items[time];\n\n        // remove time\n        if (index > -1) {\n            this.times.splice(index, 1);\n        }\n        return this;\n    }\n    /**\n      * merge frame of the previous time at the next time.\n    * @param - The time of the frame to merge\n    * @param - The target frame\n      * @return {SceneItem} An instance itself\n      * @example\n  // getFrame(1) contains getFrame(0)\n  item.merge(0, 1);\n      */\n    public mergeFrame(time: number | string, frame: Frame) {\n        if (frame) {\n            const toFrame = this.newFrame(time);\n\n            toFrame.merge(frame);\n        }\n        return this;\n    }\n    /**\n      * Get frame of the current time\n      * @param {Number} time - the current time\n      * @param {function} easing - the speed curve of an animation\n      * @return {Frame} frame of the current time\n      * @example\n  let item = new SceneItem({\n      0: {\n          display: \"none\",\n      },\n      1: {\n          display: \"block\",\n          opacity: 0,\n      },\n      2: {\n          opacity: 1,\n      }\n  });\n  // opacity: 0.7; display:\"block\";\n  const frame = item.getNowFrame(1.7);\n      */\n    public getNowFrame(time: number, easing?: EasingType, isAccurate?: boolean) {\n        this.needUpdate && this.update();\n        const frame = new Frame();\n        const [left, right] = getNearTimeIndex(this.times, time);\n        let realEasing = this.getEasing() || easing;\n        let nameObject = this.names;\n\n        if (this.hasName([TIMING_FUNCTION])) {\n            const nowEasing = this._getNowValue(time, [TIMING_FUNCTION], left, right, false, 0, true);\n\n            isFunction(nowEasing) && (realEasing = nowEasing);\n        }\n        if (isAccurate) {\n            const prevFrame = this.getFrame(time);\n            const prevNames = updateFrame({}, prevFrame.properties);\n\n            for (const name in ROLES) {\n                if (name in prevNames) {\n                    prevNames[name] = nameObject[name];\n                }\n            }\n            nameObject = prevNames;\n        }\n        const names = getNames(nameObject, []);\n\n        names.forEach(properties => {\n            const value = this._getNowValue(time, properties, left, right, isAccurate, realEasing, isFixed(properties));\n\n            if (isUndefined(value)) {\n                return;\n            }\n            frame.set(properties, value);\n        });\n        return frame;\n    }\n    public load(properties: any = {}, options = properties.options) {\n        options && this.setOptions(options);\n        if (isArray(properties)) {\n            this.set(properties);\n        } else if (properties.keyframes) {\n            this.set(properties.keyframes);\n        } else {\n            for (const time in properties) {\n                if (time !== \"options\") {\n                    this.set({\n                        [time]: properties[time],\n                    });\n                }\n            }\n        }\n        if (options && options[DURATION]) {\n            this.setDuration(options[DURATION]);\n        }\n        return this;\n    }\n    /**\n       * clone SceneItem.\n       * @return {SceneItem} An instance of clone\n       * @example\n       * item.clone();\n       */\n    public clone() {\n        const item = new SceneItem();\n\n        item.setOptions(this.state);\n        this.forEach((frame: Frame, time: number) => {\n            item.setFrame(time, frame.clone());\n        });\n        return item;\n    }\n    /**\n       * executes a provided function once for each scene item.\n       * @param - Function to execute for each element, taking three arguments\n       * @return {Keyframes} An instance itself\n       */\n    public forEach(callback: (item: Frame, time: number, items: IObject<Frame>) => void) {\n        const times = this.times;\n        const items = this.items;\n\n        times.forEach(time => {\n            callback(items[time], time, items);\n        });\n        return this;\n    }\n    public setOptions(options: Partial<SceneItemOptions> = {}) {\n        super.setOptions(options);\n        const { id, selector, elements, element, target } = options;\n\n        id && this.setId(id);\n        if (target) {\n            this.setTarget(target);\n        } else if (elements || element || selector) {\n            this.setElement(elements || element || selector);\n        }\n        return this;\n    }\n    public toCSS(\n        playCondition: PlayCondition = { className: START_ANIMATION },\n        parentDuration = this.getDuration(), states: AnimatorState[] = []) {\n        const itemState = this.state;\n        const selector = itemState[SELECTOR];\n\n        if (!selector) {\n            return \"\";\n        }\n        const originalDuration = this.getDuration();\n        itemState[DURATION] = originalDuration;\n        states.push(itemState);\n\n        const reversedStates = toArray(states).reverse();\n        const id = toId(getRealId(this));\n        const superParent = states[0];\n        const infiniteIndex = findIndex(reversedStates, state => {\n            return state[ITERATION_COUNT] === INFINITE || !isFinite(state[DURATION]);\n        }, states.length - 1);\n        const finiteStates = reversedStates.slice(0, infiniteIndex);\n        const duration = parentDuration || finiteStates.reduce((prev, cur) => {\n            return (cur[DELAY] + prev * (cur[ITERATION_COUNT] as number)) / cur[PLAY_SPEED];\n        }, originalDuration);\n        const delay = reversedStates.slice(infiniteIndex).reduce((prev, cur) => {\n            return (prev + cur[DELAY]) / cur[PLAY_SPEED];\n        }, 0);\n        const easingName = find(reversedStates, state => (state[EASING] && state[EASING_NAME]), itemState)[EASING_NAME];\n        const iterationCount = reversedStates[infiniteIndex][ITERATION_COUNT];\n        const fillMode = superParent[FILL_MODE];\n        const direction = reversedStates[infiniteIndex][DIRECTION];\n        const cssText = makeAnimationProperties({\n            fillMode,\n            direction,\n            iterationCount,\n            delay: `${delay}s`,\n            name: `${PREFIX}KEYFRAMES_${id}`,\n            duration: `${duration / superParent[PLAY_SPEED]}s`,\n            timingFunction: easingName,\n        });\n        const selectors = splitComma(selector).map(sel => {\n            const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(sel);\n\n            if (matches) {\n                return [matches[0], matches[1]];\n            } else {\n                return [sel, \"\"];\n            }\n        });\n        const className = playCondition.className;\n        const selectorCallback = playCondition.selector;\n        const preselector = isFunction(selectorCallback) ? selectorCallback(this, selector) : selectorCallback;\n\n        return `\n    ${preselector || selectors.map(([sel, peusdo]) => `${sel}.${className}${peusdo}`)} {${cssText}}\n    ${selectors.map(([sel, peusdo]) => `${sel}.${PAUSE_ANIMATION}${peusdo}`)} {${ANIMATION}-play-state: paused;}\n    @${KEYFRAMES} ${PREFIX}KEYFRAMES_${id}{${this._toKeyframes(duration, finiteStates, direction)}}`;\n    }\n    /**\n     * Export the CSS of the items to the style.\n     * @param - Add a selector or className to play.\n     * @return {SceneItem} An instance itself\n     */\n    public exportCSS(\n        playCondition?: PlayCondition,\n        duration?: number, options?: AnimatorState[]) {\n        if (!this.elements.length) {\n            return \"\";\n        }\n        const css = this.toCSS(playCondition, duration, options);\n        const isParent = options && !isUndefined(options[ITERATION_COUNT]);\n\n        !isParent && exportCSS(getRealId(this), css);\n        return this;\n    }\n    public pause() {\n        super.pause();\n        isPausedCSS(this) && this.pauseCSS();\n        return this;\n    }\n    public pauseCSS() {\n        this.elements.forEach(element => {\n            addClass(element, PAUSE_ANIMATION);\n        });\n        return this;\n    }\n    public endCSS() {\n        this.elements.forEach(element => {\n            removeClass(element, PAUSE_ANIMATION);\n            removeClass(element, START_ANIMATION);\n        });\n        setPlayCSS(this, false);\n        return this;\n    }\n    public end() {\n        isEndedCSS(this) && this.endCSS();\n        super.end();\n        return this;\n    }\n    /**\n      * Play using the css animation and keyframes.\n      * @param - Check if you want to export css.\n      * @param [playClassName=\"startAnimation\"] - Add a class name to play.\n      * @param - The shorthand properties for six of the animation properties.\n      * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n      * @example\n  item.playCSS();\n  item.playCSS(false, \"startAnimation\", {\n      direction: \"reverse\",\n      fillMode: \"forwards\",\n  });\n      */\n    public playCSS(isExportCSS = true, playClassName?: string, properties: object = {}) {\n        playCSS(this, isExportCSS, playClassName, properties);\n        return this;\n    }\n    public addPlayClass(isPaused: boolean, playClassName?: string, properties: object = {}) {\n        const elements = this.elements;\n        const length = elements.length;\n        const cssText = makeAnimationProperties(properties);\n\n        if (!length) {\n            return;\n        }\n        if (isPaused) {\n            elements.forEach(element => {\n                removeClass(element, PAUSE_ANIMATION);\n            });\n        } else {\n            elements.forEach(element => {\n                element.style.cssText += cssText;\n                if (hasClass(element, START_ANIMATION)) {\n                    removeClass(element, START_ANIMATION);\n                    requestAnimationFrame(() => {\n                        requestAnimationFrame(() => {\n                            addClass(element, START_ANIMATION);\n                        });\n                    });\n                } else {\n                    addClass(element, START_ANIMATION);\n                }\n            });\n        }\n        return elements[0];\n    }\n    private _toKeyframes(duration: number, states: AnimatorState[], direction: DirectionType) {\n        const frames: IObject<string> = {};\n        const times = this.times.slice();\n\n        if (!times.length) {\n            return \"\";\n        }\n        const originalDuration = this.getDuration();\n        (!this.getFrame(0)) && times.unshift(0);\n        (!this.getFrame(originalDuration)) && times.push(originalDuration);\n        const entries = getEntries(times, states);\n        const lastEntry = entries[entries.length - 1];\n\n        // end delay time\n        lastEntry[0] < duration && addEntry(entries, duration, lastEntry[1]);\n        let prevTime = -1;\n\n        return entries.map(([time, keytime]) => {\n            if (!frames[keytime]) {\n                frames[keytime] =\n                    (!this.hasFrame(keytime) || keytime === 0 || keytime === originalDuration ?\n                        this.getNowFrame(keytime) : this.getNowFrame(keytime, 0, true)).toCSS();\n            }\n\n            let frameTime = time / duration * 100;\n\n            if (frameTime - prevTime < THRESHOLD) {\n                frameTime += THRESHOLD;\n            }\n            prevTime = frameTime;\n            return `${Math.min(frameTime, 100)}%{\n                ${time === 0 && !isDirectionReverse(0, 1, direction) ? \"\" : frames[keytime]}\n            }`;\n        }).join(\"\");\n    }\n    private _getNowValue(\n        time: number,\n        properties: string[],\n        left: number,\n        right: number,\n        isAccurate?: boolean,\n        easing?: EasingType,\n        usePrevValue?: boolean,\n    ) {\n        const times = this.times;\n        const length = times.length;\n\n        let prevTime: number;\n        let nextTime: number;\n        let prevFrame: Frame;\n        let nextFrame: Frame;\n\n        for (let i = left; i >= 0; --i) {\n            const frame = this.getFrame(times[i]);\n\n            if (frame.has(...properties)) {\n                prevTime = times[i];\n                prevFrame = frame;\n                break;\n            }\n        }\n        const prevValue = prevFrame && prevFrame.raw(...properties);\n\n        if (isAccurate && !isRole([properties[0]])) {\n            return prevTime === time ? prevValue : undefined;\n        }\n        if (usePrevValue) {\n            return prevValue;\n        }\n        for (let i = right; i < length; ++i) {\n            const frame = this.getFrame(times[i]);\n\n            if (frame.has(...properties)) {\n                nextTime = times[i];\n                nextFrame = frame;\n                break;\n            }\n        }\n        const nextValue = nextFrame && nextFrame.raw(...properties);\n\n        if (!prevFrame || isUndefined(prevValue)) {\n            return nextValue;\n        }\n        if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n            return prevValue;\n        }\n        if (prevTime < 0) {\n            prevTime = 0;\n        }\n        return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n    }\n}\n\nexport default SceneItem;\n","import Animator from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { DATA_SCENE_ID, SELECTOR, DURATION, START_ANIMATION } from \"./consts\";\nimport { playCSS, exportCSS, getRealId, makeId, isPausedCSS, isEndedCSS, setPlayCSS } from \"./utils\";\nimport { isFunction, IS_WINDOW, IObject, $, IArrayFormat } from \"@daybrush/utils\";\nimport {\n    AnimateElement, SceneState, SceneOptions, EasingType,\n    AnimatorState, SceneItemOptions, PlayCondition\n} from \"./types\";\nimport Frame from \"./Frame\";\n\n/**\n * manage sceneItems and play Scene.\n * @sort 1\n */\nclass Scene extends Animator<SceneState> {\n    /**\n    * version info\n    * @type {string}\n    * @example\n    * Scene.VERSION // #__VERSION__#\n    */\n    public static VERSION: string = \"#__VERSION__#\";\n    public items: IObject<Scene | SceneItem>;\n    public temp: IObject<Frame>;\n    /**\n    * @param - properties\n    * @param - options\n    * @example\n    const scene = new Scene({\n      item1: {\n        0: {\n          display: \"none\",\n        },\n        1: {\n          display: \"block\",\n          opacity: 0,\n        },\n        2: {\n          opacity: 1,\n        },\n      },\n      item2: {\n        2: {\n          opacity: 1,\n        },\n      }\n    });\n      */\n    constructor(properties?: IObject<any>, options?: Partial<SceneOptions>) {\n        super();\n        this.items = {};\n        this.load(properties, options);\n    }\n    public getDuration() {\n        const items = this.items;\n        let time = 0;\n\n        for (const id in items) {\n            const item = items[id];\n\n            time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n        }\n        return Math.max(time, this.state[DURATION]);\n    }\n    public setDuration(duration: number) {\n        const items = this.items;\n        const sceneDuration = this.getDuration();\n\n        if (duration === 0 || !isFinite(sceneDuration)) {\n            return this;\n        }\n        if (sceneDuration === 0) {\n            for (const id in items) {\n                const item = items[id];\n\n                item.setDuration(duration);\n            }\n        } else {\n            const ratio = duration / sceneDuration;\n\n            for (const id in items) {\n                const item = items[id];\n\n                item.setDelay(item.getDelay() * ratio);\n                item.setDuration(item.getDuration() * ratio);\n            }\n        }\n        super.setDuration(duration);\n        return this;\n    }\n    public getItem<T extends (Scene | SceneItem) = Scene | SceneItem>(name: number | string): T;\n    public getItem(name: number | string, index: number): SceneItem;\n    /**\n    * get item in scene by name\n    * @param - The item's name\n    * @param - If item is added as function, it can be imported via index.\n    * @return {Scene | SceneItem} item\n    * @example\n    const item = scene.getItem(\"item1\")\n    */\n    public getItem(name: number | string, index?: number) {\n        if (index != null) {\n            return (this.items[name] as Scene).getItem(index) as SceneItem;\n        }\n        return this.items[name];\n    }\n    /**\n    * create item in scene\n    * @param {} name - name of item to create\n    * @param {} options - The option object of SceneItem\n    * @return {} Newly created item\n    * @example\n    const item = scene.newItem(\"item1\")\n    */\n    public newItem(name: number | string, options: Partial<SceneItemOptions> = {}): SceneItem {\n        if (name in this.items) {\n            return;\n        }\n        const item = new SceneItem();\n\n        this.setItem(name, item);\n        item.setOptions(options);\n\n        return item;\n    }\n    /**\n    * add a sceneItem to the scene\n    * @param - name of item to create\n    * @param - sceneItem\n    * @example\n    const item = scene.newItem(\"item1\")\n    */\n    public setItem(name: number | string, item: Scene | SceneItem) {\n        item.setId(name);\n        this.items[name] = item;\n        return this;\n    }\n    public setTime(time: number | string, isTick?: boolean, parentEasing?: EasingType) {\n        super.setTime(time, isTick);\n\n        const iterationTime = this.getIterationTime();\n        const items = this.items;\n        const easing = this.getEasing() || parentEasing;\n        const frames: IObject<any> = {};\n\n        for (const id in items) {\n            const item = items[id];\n\n            item.setTime(iterationTime * item.getPlaySpeed() - item.getDelay(), isTick, easing);\n\n            frames[item.getId()] = item.temp;\n        }\n        this.temp = frames;\n\n        /**\n             * This event is fired when timeupdate and animate.\n             * @event Scene#animate\n         * @param {object} param The object of data to be sent to an event.\n             * @param {number} param.currentTime The total time that the animator is running.\n             * @param {number} param.time The iteration time during duration that the animator is running.\n             * @param {object} param.frames frames of that time.\n         * @example\n    const scene = new Scene({\n      a: {\n        0: {\n          opacity: 0,\n        },\n        1: {\n          opacity: 1,\n        }\n      },\n      b: {\n        0: {\n          opacity: 0,\n        },\n        1: {\n          opacity: 1,\n        }\n      }\n    }).on(\"animate\", e => {\n      console.log(e);\n      // {a: Frame, b: Frame}\n      console.log(e.a.get(\"opacity\"));\n    });\n             */\n        this.trigger(\"animate\", {\n            frames,\n            currentTime: this.getTime(),\n            time: iterationTime,\n        });\n\n        return this;\n    }\n    /**\n     * executes a provided function once for each scene item.\n     * @param - Function to execute for each element, taking three arguments\n     * @return {Scene} An instance itself\n     */\n    public forEach(func: (item: Scene | SceneItem, name: string, items: IObject<Scene | SceneItem>) => void) {\n        const items = this.items;\n\n        for (const name in items) {\n            func(items[name], name, items);\n        }\n        return this;\n    }\n    public toCSS(\n        playCondition?: PlayCondition,\n        duration: number = this.getDuration(), parentStates: AnimatorState[] = []) {\n        const totalDuration = !duration || !isFinite(duration) ? 0 : duration;\n        const styles: string[] = [];\n        const state = this.state;\n\n        state[DURATION] = this.getDuration();\n\n        this.forEach(item => {\n            styles.push(item.toCSS(playCondition, totalDuration, parentStates.concat(state)));\n        });\n        return styles.join(\"\");\n    }\n    /**\n     * Export the CSS of the items to the style.\n     * @param - Add a selector or className to play.\n     * @return {Scene} An instance itself\n     */\n    public exportCSS(\n        playCondition?: PlayCondition, duration?: number, parentStates?: AnimatorState[]) {\n        const css = this.toCSS(playCondition, duration, parentStates);\n\n        (!parentStates || !parentStates.length) && exportCSS(getRealId(this), css);\n        return this;\n    }\n    public append(item: SceneItem | Scene) {\n        item.setDelay(item.getDelay() + this.getDuration());\n        this.setItem(getRealId(item), item);\n    }\n    public pauseCSS() {\n        return this.forEach(item => {\n            item.pauseCSS();\n        });\n    }\n    public pause() {\n        super.pause();\n\n        isPausedCSS(this) && this.pauseCSS();\n        this.forEach(item => {\n            item.pause();\n        });\n        return this;\n    }\n    public endCSS() {\n        const items = this.items;\n\n        for (const id in items) {\n            items[id].endCSS();\n        }\n        setPlayCSS(this, false);\n    }\n    public end() {\n        isEndedCSS(this) && this.endCSS();\n        super.end();\n        return this;\n    }\n    public addPlayClass(isPaused: boolean, playClassName?: string, properties: object = {}) {\n        const items = this.items;\n        let animtionElement: AnimateElement;\n\n        for (const id in items) {\n            const el = items[id].addPlayClass(isPaused, playClassName, properties);\n\n            !animtionElement && (animtionElement = el);\n        }\n        return animtionElement;\n    }\n    /**\n    * Play using the css animation and keyframes.\n    * @param - Check if you want to export css.\n    * @param [playClassName=\"startAnimation\"] - Add a class name to play.\n    * @param - The shorthand properties for six of the animation properties.\n    * @return {Scene} An instance itself\n    * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n    * @example\n    scene.playCSS();\n    scene.playCSS(false, {\n    direction: \"reverse\",\n    fillMode: \"forwards\",\n    });\n    */\n    public playCSS(isExportCSS = true, playClassName?: string, properties: Partial<AnimatorState> = {}) {\n        playCSS(this, isExportCSS, playClassName, properties);\n        return this;\n    }\n    public set(properties: any, ...args: any[]): this;\n    public set(properties: any) {\n        this.load(properties);\n        return this;\n    }\n    public load(properties: any = {}, options = properties.options) {\n        if (!properties) {\n            return this;\n        }\n        const isSelector = options && options[SELECTOR] || this.state[SELECTOR];\n\n        for (const name in properties) {\n            if (name === \"options\") {\n                continue;\n            }\n            const object = properties[name];\n            let item;\n\n            if (object instanceof Scene || object instanceof SceneItem) {\n                this.setItem(name, object);\n                item = object;\n            } else if (isFunction(object) && isSelector) {\n                const elements = IS_WINDOW ? $(name, true) as IArrayFormat<AnimateElement> : ([] as AnimateElement[]);\n                const length = elements.length;\n                const scene = new Scene();\n\n                for (let i = 0; i < length; ++i) {\n                    const id = makeId();\n\n                    scene.newItem(`${i}`, {\n                        id,\n                        selector: `[${DATA_SCENE_ID}=\"${id}\"]`,\n                        elements: elements[i],\n                    }).load(object(i, elements[i]));\n                }\n                this.setItem(name, scene);\n                continue;\n            } else {\n                item = this.newItem(name);\n                item.load(object);\n            }\n            isSelector && item.setSelector(name);\n        }\n        this.setOptions(options);\n    }\n    public setOptions(options: Partial<SceneState> = {}): this {\n        super.setOptions(options);\n\n        if (options.selector) {\n            this.state[SELECTOR] = true;\n        }\n        return this;\n    }\n    public setSelector(target: string | boolean) {\n        const state = this.state;\n        const isSelector = target || state[SELECTOR];\n\n        state[SELECTOR] = target;\n        this.forEach((item, name) => {\n            item.setSelector(isSelector ? name : false);\n        });\n    }\n    public start(delay: number) {\n        super.start(delay);\n        this.forEach(item => {\n            item.start(delay);\n        });\n    }\n}\n\nexport default Scene;\n","import { $, addClass, removeClass, toArray } from \"@daybrush/utils\";\nimport { pages } from \"./Store\";\nimport { scroll } from \"./utils\";\n\nconst header = $(\"header\");\nconst menus = $(`header [data-item] a`, true);\n\ntoArray(menus).forEach((menu, i) => {\n    const page = pages[i];\n\n    page.range([\"window - 1\", \"window\"]).on({\n        enter: e => {\n            addClass(menu, \"enter\");\n        },\n        exit: e => {\n            removeClass(menu, \"enter\");\n        },\n    });\n    menu.addEventListener(\"click\", e => {\n        e.preventDefault();\n        scroll(page.getRect(true).top);\n    });\n});\npages.forEach((page, i) => {\n    if (i % 2 === 0) {\n        return;\n    }\n    page.range([\"window - 80\", \"100% - 80\"]).on({\n        enter: e => {\n            addClass(header, \"white\");\n        },\n        exit: e => {\n            removeClass(header, \"white\");\n        },\n    });\n});\n","import {SceneItem, EASE} from \"../../src\";\n\nexport function scroll(to: number) {\n  return new SceneItem({\n    scrollTop: to,\n  }, {\n    target: document.documentElement,\n    duration: 1,\n    easing: EASE,\n  }).play();\n}\n"],"names":["UNDEFINED","document","addClass","element","className","classList","add","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","CLASS_NAME","makeDOM","tag","createElementNS","makeSVGDOM","el","setAttributes","attributes","name","setAttribute","getAbsoluteValue","value","pos","size","info","text","matches","exec","prefix","unit","NaN","parseFloat","splitUnit","setViewBox","container","_a","width","height","left","right","bottom","top","strokeWidth","contains","match","RegExp","split","forEach","_b","getAttribute","map","_c","boxWidth","_d","boxHeight","Math","max","be","path","_e","side","rotate","innerRadius","_f","fill","_g","strokeLinejoin","_h","_j","css","_k","_l","xPoints","yPoints","sideCos","cos","PI","startRad","rad","sin","push","minX","min","minY","maxX","maxY","scale","isOuter","sideSin","innerCos","innerScale","diagonal","atan","outerScale","xp","yp","pathWidth","pathHeight","points","x1","y1","x2","y2","j","x","y","getRect","d","point","join","styles","cssText","style","setStyles","poly","options","appendChild","oval","r","rx","ry","_m","_o","origin","ellipse","halfStroke","ox","oy","transformOrigin","setOrigin","isUndefined","Component","_eventHandler","_proto","trigger","eventName","customEvent","handlerList","concat","eventType","isCanceled","arg","stop","currentTarget","_len","restParam","Array","_key","once","handlerToAttach","eventHash","self","on","listener","_len2","_key2","off","hasOn","handlerToDetach","undefined","k","handlerFunction","splice","VERSION","OBJECT","doc","isArray","extendStatics","b","setPrototypeOf","__proto__","__extends","__","constructor","create","resize","window","innerWidth","innerHeight","addEventListener","WindowSize","Page","_super","selectors","multi","_this","ranges","_range","horizontal","margin","pages","state","enter","firstEnter","firstExit","scroll","triggerEvent","onCheck","querySelectorAll","querySelector","range","rangeArr","events","__proto","page","id","target","onEnter","rect","onExit","calcSize","sizeInfos","stack","sign","v","pop","_calcSize","reduce","prev","cur","isAbsolute","getBoundingClientRect","width$$1","height$$1","body","scrollLeft","documentElement","scrollTop","containerSize","rangeStart","rangeEnd","marginStart","sizeName","suffix","Pages","manager","RGB","RGBA","HSL","HSLA","COLOR_MODELS","FUNCTION","PROPERTY","ARRAY","STRING","NUMBER","IS_WINDOW","prefixes","getCrossBrowserProperty","property","TRANSFORM","FILTER","ANIMATION","KEYFRAMES","replace","isObject","isString","isFunction","splitComma","str","trim","splitBracket","camelize","all","letter","toUpperCase","decamelize","separator","letter2","toLowerCase","toArray","slice","now","Date","getTime","requestAnimationFrame","firstTime","raf","webkitRequestAnimationFrame","mozRequestAnimationFrame","bind","callback","currTime","setTimeout","hexToRGBA","hex","h","parseInt","substring","g","a","isNaN","stringToRGBA","color","charAt","arr","colorArr","hsl","l","floor","abs","rgb","c","m","round","hslToRGBA","$","removeClass","remove","reg","addEvent","type","removeEvent","removeEventListener","clapper","func","opacity","stroke","radius","makeShadow","nextStep3","nextStep","EASE_IN_OUT","Scene","scene","transform","delay","index","skew","easing","translateX","translateY","selector","clapperSound","mediaScene","MediaScene","getDuration","seek","playSpeed","volume","playCSS","play","page1","exportCSS","finish","direction","iterationCount","setTime","_","translate","translate2","EASE_IN","LINEAR","valueFeatureElement","setRole","icon5Scene","descriptionElements","getItem","innerHTML","frame","get","toFixed","elements","getPlayState","pause","PREFIX","DATA_SCENE_ID","TIMING_FUNCTION","ROLES","filter","attribute","ALIAS","FIXED","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","PAUSED","ENDED","PLAY","RUNNING","ITERATION","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","INFINITE","PLAY_STATE","PLAY_CSS","PREV_TIME","TICK_TIME","CURRENT_TIME","SELECTOR","OPTIONS","_on","_i","args","callback2","callbacks","data","t2","dx","cubic","solveFromX","easingName","EASE","bezier","setOptions","newOptions","model","PropertyObject","clone","toValue","isPropertyObject","num","names","properties","roles","isCheckTrue","role","isInProperties","item","isActivate","isPaused","isEnded","styleId","toId","styleElement","innerText","insertAdjacentHTML","random","getId","setId","makeId","isExportCSS","playClassName","isPausedCSS","addPlayClass","duration","isZeroDuration","isFinite","animationend","setPlayCSS","animationstart","animationiteration","elapsedTime","currentTime","setIteration","addAnimationEvent","setPlayState","defaultIndex","iteration","iteraiontCount","setters","getters","fillMode","iterationTime","tickTime","prevTime","playState","tslib_1","getter","setter","parent","curveArray","setDuration","setEasing","getActiveDuration","count","Infinity","toTime","time","animator","to","tick","start","end","isTick","activeDuration","getUnitTime","calculate","isDelay","getIterationTime","passIterationCount","maxIterationCount","currentIterationTime","setIterationTime","isReverse","isDirectionReverse","isFiniteDuration","Animator","EventTrigger","arrayToPropertyObject","result","values","toPropertyObject","afterModel","arrayToColorObject","obj","stringToBracketObject","arrObj","merge","from","getType","getValue","set","raw","getPropertyName","getValueByNames","params","_set","isRole","object","toObject","isFixed","stylesLength","Frame","frameProperties","cssObject","toInnerProperties","toCSSObject","cssArray","a1","a2","b1","b2","v1","dot","a1Type","color1","color2","value1","value2","model1","dotArray","colorModel","dotColor","type1","type2","isFunction1","isFunction2","dotObject","v2","dotNumber","isPureObject","getNames","updateFrame","entries","keytime","prevEntry","load","times","originalDuration","ratio_1","items_1","obj_1","time2","items","sceneId_1","realTime","this_1","innerValue","newFrame","setFrame","SceneItem","getDelay","frames","hasFrame","frameTime","needUpdate","getFrame","unshiftTime","firstFrame","removeFrame","unshift","prepend","isStartZero","startTime","setElement","Element","targetFunc","toCSS","getComputedStyle","fromCSS","parentEasing","getEasing","getNowFrame","temp","addTime","update","isAccurate","realEasing","nameObject","hasName","nowEasing","_getNowValue","prevNames","keyframes","setTarget","playCondition","parentDuration","states","itemState","defalutValue","reversedStates","reverse","getRealId","superParent","infiniteIndex","findIndex","finiteStates","makeAnimationProperties","timingFunction","sel","selectorCallback","peusdo","_toKeyframes","pauseCSS","isEndedCSS","endCSS","nextEntries","intCount","ceil","currentDuration","lastTime","entry","divideTime","addEntry","lastEntry","usePrevValue","nextTime","prevFrame","nextFrame","has","prevValue","nextValue","ratio","dotValue","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","setItem","parentStates","totalDuration","animtionElement","isSelector","newItem","setSelector","header","menu","exit","preventDefault"],"mappings":"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"}