{"version":3,"file":"scene.common.js","sources":["../node_modules/tslib/tslib.es6.js","../src/consts.ts","../node_modules/@daybrush/utils/dist/utils.esm.js","../src/EventTrigger.ts","../src/easing.ts","../src/PropertyObject.ts","../src/utils.ts","../src/Animator.ts","../src/utils/property.ts","../src/Frame.ts","../src/Keyframes.ts","../src/utils/dot.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type Role = true | RoleInterface;\nexport interface RoleInterface {\n  [role: string]: Role;\n}\nexport interface ObjectInterface<T> {\n  [name: string]: T;\n}\nexport type NameType = string | number;\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleInterface = { transform: {}, filter: {}, attribute: {} };\nexport const ALIAS: ObjectInterface<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { \"animation-timing-function\": true, \"contents\": true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\ntype OptionType = [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"];\ntype EventType = [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const FUNCTION = \"function\";\nexport const PROPERTY = \"property\";\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n","var prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\n\nvar checkProperties =\n/*#__PURE__*/\nfunction (property) {\n  var styles = (document.body || document.documentElement).style;\n  var length = prefixes.length;\n\n  if (typeof styles[property] !== \"undefined\") {\n    return property;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var name = \"-\" + prefixes[i] + \"-\" + property;\n\n    if (typeof styles[name] !== \"undefined\") {\n      return name;\n    }\n  }\n\n  return \"\";\n};\n\nvar RGB = \"rgb\";\nvar RGBA = \"rgba\";\nvar HSL = \"hsl\";\nvar HSLA = \"hsla\";\nvar TRANSFORM =\n/*#__PURE__*/\ncheckProperties(\"transform\");\nvar FILTER =\n/*#__PURE__*/\ncheckProperties(\"filter\");\nvar ANIMATION =\n/*#__PURE__*/\ncheckProperties(\"animation\");\nvar KEYFRAMES =\n/*#__PURE__*/\nANIMATION.replace(\"animation\", \"keyframes\");\n\nfunction isUndefined(value) {\n  return typeof value === \"undefined\";\n}\nfunction isObject(value) {\n  return value && typeof value === \"object\";\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isString(value) {\n  return typeof value === \"string\";\n}\n/**\n* divide text by space.\n* @memberof Property\n* @function splitSpace\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitSpace(text) {\n  // divide comma(,)\n  var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Property\n* @function splitComma\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\n\nfunction splitComma(text) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n  return matches ? matches.map(function (str) {\n    return str.trim();\n  }) : [];\n}\nfunction splitBracket(text) {\n  var matches = /([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g.exec(text);\n\n  if (!matches || matches.length < 4) {\n    return {};\n  } else {\n    return {\n      prefix: matches[1],\n      value: matches[2],\n      suffix: matches[3]\n    };\n  }\n}\nfunction splitUnit(text) {\n  var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return {\n      prefix: \"\",\n      unit: \"\",\n      value: NaN\n    };\n  }\n\n  var prefix = matches[1];\n  var value = matches[2];\n  var unit = matches[3];\n  return {\n    prefix: prefix,\n    unit: unit,\n    value: parseFloat(value)\n  };\n}\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\nfunction decamelize(str) {\n  return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) {\n    return letter + \"-\" + letter2.toLowerCase();\n  });\n}\n\n/**\n* @namespace\n* @name Color\n*/\n\nvar COLOR_MODELS = [RGB, RGBA, HSL, HSLA];\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {String} hex color\n* @example\nconsole.log(cutHex(\"#000000\"))\n// \"000000\"\n*/\n\nfunction cutHex(hex) {\n  return hex.charAt(0) === \"#\" ? hex.substring(1) : hex;\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {Array} rgb color\n* @example\nconsole.log(hexToRGB(\"#000000\"));\n// [0, 0, 0]\nconsole.log(hexToRGB(\"#201045\"));\n// [32, 16, 69]\n*/\n\nfunction hexToRGBA(hex) {\n  var h = cutHex(hex);\n  var r = parseInt(h.substring(0, 2), 16);\n  var g = parseInt(h.substring(2, 4), 16);\n  var b = parseInt(h.substring(4, 6), 16);\n  var a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n\n  return [r, g, b, a];\n}\n/**\n* convert 3-digit hex color to 6-digit hex color.\n* @memberof Color\n* @param {String} hex - 3-digit hex color\n* @return {String} 6-digit hex color\n* @example\nconsole.log(hex3to6(\"#123\"));\n// \"#112233\"\n*/\n\nfunction hex3to6(h) {\n  var r = h.charAt(1);\n  var g = h.charAt(2);\n  var b = h.charAt(3);\n  var arr = [\"#\", r, r, g, g, b, b];\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgb color.\n* @memberof Color\n* @param {Array} hsl(a) - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1, alpha: 0 ~ 1)\n* @return {Array} rgb color\n* @example\nconsole.log(hslToRGB([150, 0.5, 0.4]));\n// [51, 153, 102]\n*/\n\nfunction hslToRGBA(hsl) {\n  var h = hsl[0];\n  var s = hsl[1];\n  var l = hsl[2];\n\n  if (h < 0) {\n    h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n\n  h %= 360;\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2;\n  var rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n\n  var result = [Math.round((rgb[0] + m) * 255), Math.round((rgb[1] + m) * 255), Math.round((rgb[2] + m) * 255), hsl.length > 3 ? hsl[3] : 1];\n  return result;\n}\n/**\n* convert string to rgba color.\n* @memberof Color\n* @param {String} - Hex(rgb, rgba) or RGB(A), or HSL(A)\n* @return {Array} rgba color\n*/\n\nfunction stringToRGBA(color) {\n  if (color.charAt(0) === \"#\") {\n    if (color.length === 4) {\n      return hexToRGBA(hex3to6(color));\n    } else {\n      return hexToRGBA(color);\n    }\n  } else if (color.indexOf(\"(\") !== -1) {\n    // in bracket.\n    var _a = splitBracket(color),\n        prefix = _a.prefix,\n        value = _a.value;\n\n    if (!prefix || !value) {\n      return;\n    }\n\n    var arr = splitComma(value);\n    var colorArr = [];\n    var length = arr.length;\n\n    switch (prefix) {\n      case RGB:\n      case RGBA:\n        for (var i = 0; i < length; ++i) {\n          colorArr[i] = parseFloat(arr[i]);\n        }\n\n        return colorArr;\n\n      case HSL:\n      case HSLA:\n        for (var i = 0; i < length; ++i) {\n          if (arr[i].indexOf(\"%\") !== -1) {\n            colorArr[i] = parseFloat(arr[i]) / 100;\n          } else {\n            colorArr[i] = parseFloat(arr[i]);\n          }\n        } // hsl, hsla to rgba\n\n\n        return hslToRGBA(colorArr);\n    }\n  }\n\n  return;\n}\n\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n\n  return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += \" \" + className;\n  }\n}\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n    element.className = element.className.replace(reg, \" \");\n  }\n}\nfunction fromCSS(elements, properties) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n\n  var element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n\n  var cssObject = {};\n  var styles = window.getComputedStyle(element);\n  var length = properties.length;\n\n  for (var i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n\n  return cssObject;\n}\n\nexport { COLOR_MODELS, cutHex, hexToRGBA, hex3to6, hslToRGBA, stringToRGBA, RGB, RGBA, HSL, HSLA, TRANSFORM, FILTER, ANIMATION, KEYFRAMES, isUndefined, isObject, isArray, isString, splitSpace, splitComma, splitBracket, splitUnit, camelize, decamelize, hasClass, addClass, removeClass, fromCSS };\n//# sourceMappingURL=utils.esm.js.map\n","import { isObject } from \"@daybrush/utils\";\n\ntype CallbackType = (...args: any[]) => any;\ninterface EventParamterType {\n  [name: string]: CallbackType | CallbackType[];\n}\n/**\n* attach and trigger event handlers.\n* @memberof Scene\n*/\nclass EventTrigger {\n  private events: { [name: string]: CallbackType[] };\n  /**\n\t* @example\nconst et = new Scene.EventTrigger();\nconst scene = new Scene();\n\nscene.on(\"call\", e => {\n\tconsole.log(e.param);\n});\net.on(\"call\", e => {\n\tconsole.log(e.param);\n});\nscene.trigger(\"call\", {param: 1});\net.trigger(\"call\", {param: 1});\n\t */\n  constructor() {\n    this.events = {};\n  }\n  /**\n\t* Attach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function() {\n\tconsole.log(\"animate\");\n});\n\ntarget.trigger(\"animate\");\n\n\t*/\n  public on(name: string | EventParamterType, callback?: CallbackType | CallbackType[]) {\n    const events = this.events;\n\n    if (isObject(name)) {\n      for (const i in name) {\n        this.on(i, name[i]);\n      }\n      return this;\n    }\n    if (!(name in events)) {\n      events[name] = [];\n    }\n    if (!callback) {\n      return this;\n    }\n    if (isObject(callback)) {\n      (callback as CallbackType[]).forEach(func => this.on(name, func));\n      return this;\n    }\n    const event = events[name];\n\n    event.push(callback);\n    return this;\n  }\n  /**\n\t* Dettach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\nconst callback = function() {\n\tconsole.log(\"animate\");\n};\ntarget.on(\"animate\", callback);\n\ntarget.off(\"animate\", callback);\ntarget.off(\"animate\");\n\n\t*/\n  public off(name?: string, callback?: CallbackType) {\n    if (!name) {\n      this.events = {};\n    } else if (!callback) {\n      this.events[name] = [];\n    } else {\n      const callbacks = this.events[name];\n\n      if (!callbacks) {\n        return this;\n      }\n      const index = callbacks.indexOf(callback);\n\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n  /**\n\t* execute event handler\n\t* @param {String} name - event's name\n\t* @param {Function} [...data] - event handler's additional parameter\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function(a1, a2) {\n\tconsole.log(\"animate\", a1, a2);\n});\n\ntarget.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n\t*/\n  public trigger(name: string, ...data: any[]) {\n    const events = this.events;\n\n    if (!(name in events)) {\n      return this;\n    }\n\n    const event = events[name];\n\n    if (data.length) {\n      const target = data[0];\n\n      target.type = name;\n      target.currentTarget = this;\n      !target.target && (target.target = this);\n    }\n    event.forEach(callback => {\n      callback.apply(this, data);\n    });\n\n    return this;\n  }\n}\nexport default EventTrigger;\n","export interface EasingFunctionInterface extends Function {\n  easingName?: string;\n}\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunctionInterface = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunctionInterface = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","interface PropertyObjectInterface {\n  prefix?: string;\n  suffix?: string;\n  model?: string;\n  type?: string;\n  separator?: string;\n  [key: string]: any;\n}\n/**\n* Make string, array to PropertyObject for the dot product\n* @memberof Scene\n*/\nclass PropertyObject {\n  public value: any[];\n  public options: PropertyObjectInterface;\n\n  /**\n\t* @param {String|Array} value - This value is in the array format ..\n\t* @param {String} separator - Array separator.\n\t* @example\nvar obj1 = new PropertyObject(\"1,2,3\", \",\");\nvar obj2 = new PropertyObject([1,2,3], \" \");\nvar obj3 = new PropertyObject(\"1$2$3\", \"$\");\n\n// rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\t */\n  constructor(value: string | any[], options: PropertyObjectInterface = {}) {\n    this.options = {\n      prefix: \"\",\n      suffix: \"\",\n      model: \"\",\n      type: \"\",\n      separator: \",\",\n    };\n    this.setOptions(options);\n    this.init(value);\n  }\n  public setOptions(options: PropertyObjectInterface) {\n    (Object as any).assign(this.options, options);\n    return this;\n  }\n  public getOption(name: string) {\n    return this.options[name];\n  }\n  /**\n\t* the number of values.\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.length);\n// 3\n\t */\n  public size() {\n    return this.value.length;\n  }\n  /**\n\t* retrieve one of values at the index\n\t* @param {Number} index - index\n\t* @return {Object} one of values at the index\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.get(0));\n// 1\n\t */\n  public get(index: number) {\n    return this.value[index];\n  }\n  /**\n\t* Set the value at that index\n\t* @param {Number} index - index\n\t* @param {Object} value - text, a number, object to set\n\t* @return {PropertyObject} An instance itself\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nobj1.set(0, 2);\nconsole.log(obj1.toValue());\n// 2,2,3\n\t */\n  public set(index: number, value: any) {\n    this.value[index] = value;\n    return this;\n  }\n  /**\n\t* create a copy of an instance itself.\n\t* @return {PropertyObject} clone\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nconst obj2 = obj1.clone();\n\t */\n  public clone(): PropertyObject {\n    const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n\n    return new PropertyObject(arr, {\n      separator: this.options.separator,\n      prefix: this.options.prefix,\n      suffix: this.options.suffix,\n      model: this.options.model,\n      type: this.options.type,\n    });\n  }\n  /**\n\t* Make Property Object to String\n\t* @return {String} Make Property Object to String\n\t* @example\n//rgba(100, 100, 100, 0.5)\nconst obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\",\n});\nconsole.log(obj4.toValue());\n// \"rgba(100,100,100,0.5)\"\n\t*/\n  public toValue(): string {\n    return this.options.prefix + this.join() + this.options.suffix;\n  }\n  /**\n\t* Make Property Object's array to String\n\t* @return {String} Join the elements of an array into a string\n\t* @example\n\t//rgba(100, 100, 100, 0.5)\n\tvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\t\"separator\" : \",\",\n\t\t\"prefix\" : \"rgba(\",\n\t\t\"suffix\" : \")\"\n\t});\n\tobj4.join();  // =>   \"100,100,100,0.5\"\n\t */\n  public join() {\n    return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.options.separator);\n  }\n  /**\n\t* executes a provided function once per array element.\n\t* @param {Function} callback - Function to execute for each element, taking three arguments\n\t* @param {All} [callback.currentValue] The current element being processed in the array.\n\t* @param {Number} [callback.index] The index of the current element being processed in the array.\n\t* @param {Array} [callback.array] the array.\n\t* @return {PropertyObject} An instance itself\n\t* @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n\t* @example\n//rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\nobj4.forEach(t => {\n\tconsole.log(t);\n});  // =>   \"100,100,100,0.5\"\n\t*/\n  public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n    this.value.forEach(func);\n    return this;\n  }\n  private init(value: string | any[]) {\n    const type = typeof value;\n\n    if (type === \"string\") {\n      this.value = (value as string).split(this.options.separator);\n    } else if (type === \"object\") {\n      this.value = (value as any[]);\n    } else {\n      this.value = [value];\n    }\n    return this;\n  }\n}\nexport default PropertyObject;\n","import { ROLES, ObjectInterface, MAXIMUM, FIXED, ALIAS, PAUSED, RUNNING, PLAY, ENDED } from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport { isArray, ANIMATION } from \"@daybrush/utils\";\n\nexport function setAlias(name: string, alias: string[]) {\n  ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n  const length = names.length;\n  let roles: any = ROLES;\n  let fixed: any = FIXED;\n\n  for (let i = 0; i < length - 1; ++i) {\n    !roles[names[i]] && (roles[names[i]] = {});\n    roles = roles[names[i]];\n    if (isFixedProperty) {\n      !fixed[names[i]] && (fixed[names[i]] = {});\n      fixed = fixed[names[i]];\n    }\n  }\n  isFixedProperty && (fixed[names[length - 1]] = true);\n  roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n  const type = typeof value;\n\n  if (type === \"object\") {\n    if (isArray(value)) {\n      return \"array\";\n    } else if (value instanceof PropertyObject) {\n      return \"property\";\n    }\n  } else if (type === \"string\" || type === \"number\") {\n    return \"value\";\n  }\n  return type;\n}\nexport function toFixed(num: number) {\n  return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function isInProperties(roles: ObjectInterface<any>, args: any[], isCheckTrue?: boolean) {\n  const length = args.length;\n  let role: any = roles;\n\n  if (length === 0) {\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    if (role === true) {\n      return false;\n    }\n    role = role[args[i]];\n    if (!role || (!isCheckTrue && role === true)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isRole(args: any[], isCheckTrue?: boolean) {\n  return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: any[]) {\n  return isInProperties(FIXED, args, true);\n}\n\nexport interface IterationInterface {\n  currentTime: number;\n  iterationCount: number;\n  elapsedTime: number;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n  return item.state.playCSS && item.getPlayState() === PAUSED;\n}\nexport function playCSS(item: Scene | SceneItem, exportCSS: boolean, properties = {}) {\n  if (!ANIMATION || item.getPlayState() === RUNNING) {\n    return;\n  }\n  if (isPausedCSS(item)) {\n    item.addPlayClass(true, properties);\n  } else {\n    if (item.isEnded()) {\n      item.setTime(0);\n    }\n    exportCSS && item.exportCSS();\n    const el = item.addPlayClass(false, properties);\n\n    if (!el) {\n      return;\n    }\n    addAnimationEvent(item, el);\n    item.setState({ playCSS: true });\n  }\n  item.setPlayState(RUNNING);\n  item.trigger(PLAY);\n}\n\nexport function addAnimationEvent(item: Scene | SceneItem, el: HTMLElement) {\n  const duration = item.getDuration();\n  const isZeroDuration = !duration || !isFinite(duration);\n\n  const animationend = () => {\n    if (!isZeroDuration) {\n      item.setState({ playCSS: false });\n      item.finish();\n    }\n  };\n  item.on(ENDED, () => {\n    el.removeEventListener(\"animationend\", animationend);\n    el.removeEventListener(\"animationiteration\", animationiteration);\n  });\n  const animationiteration = ({elapsedTime}: any) => {\n    const currentTime = elapsedTime;\n    const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n    item.state.currentTime = currentTime;\n    item.setCurrentIterationCount(iterationCount);\n  };\n  el.addEventListener(\"animationend\", animationend);\n  el.addEventListener(\"animationiteration\", animationiteration);\n}\n","import {\n  ObjectInterface, THRESHOLD,\n  ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n  ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n  DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED, RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE } from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, EasingFunctionInterface } from \"./easing\";\nimport { toFixed } from \"./utils\";\nimport { splitUnit, isString, camelize } from \"@daybrush/utils\";\n\nlet lastTime = 0;\n\nfunction GetterSetter<T extends { new(...args: any[]): {} }>(\n  getter: string[], setter: string[], parent: string) {\n  return (constructor: T) => {\n    const prototype = constructor.prototype;\n\n    getter.forEach(name => {\n      prototype[camelize(`get ${name}`)] = function() {\n        return this[parent][name];\n      };\n    });\n    setter.forEach(name => {\n      prototype[camelize(`set ${name}`)] = function(value: any) {\n        this[parent][name] = value;\n        return this;\n      };\n    });\n  };\n}\nconst requestAnimFrame = /*#__PURE__*/(() => {\n  return (window as any).requestAnimationFrame ||\n    (window as any).webkitRequestAnimationFrame ||\n    (window as any).mozRequestAnimationFrame ||\n    ((callback: (time: number) => void) => {\n      const currTime = Date.now();\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      const id = window.setTimeout(() => {\n        callback(currTime + timeToCall);\n      }, 1000 / 60);\n      lastTime = currTime + timeToCall;\n      return id;\n    });\n})();\n\nexport type FillModeType = \"forwards\" | \"backwards\" | \"both\";\nexport type IterationCountType = number | \"infinite\";\nexport type EasingType = 0 | EasingFunctionInterface;\nexport type DirectionType = \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\";\nexport type PlayStateType = \"paused\" | \"running\";\n\nexport interface StateInterface {\n  id?: string;\n  easing?: EasingType;\n  easingName?: string;\n  iterationCount?: IterationCountType;\n  delay?: number;\n  fillMode?: FillModeType;\n  direction?: DirectionType;\n  playSpeed?: number;\n  iterationTime?: number;\n  currentTime?: number;\n  tickTime?: number;\n  currentIterationCount?: number;\n  prevTime?: number;\n  playState?: PlayStateType;\n  duration?: number;\n  [key: string]: any;\n}\nexport function isDirectionReverse(currentIterationCount: number,\n                                   iteraiontCount: IterationCountType, direction: DirectionType) {\n  if (direction === REVERSE) {\n    return true;\n  } else if (iteraiontCount !== \"infinite\" && currentIterationCount === iteraiontCount && iteraiontCount % 1 === 0) {\n    return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n  }\n  return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorOptions The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n/**\n* play video, animation, the others\n* @memberof Scene\n* @class Animator\n* @extends Scene.EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n* @param {AnimatorOptions} [options] - animator's options\n* @example\nconst animator = new Animator({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n*/\n\nconst setters = [ITERATION_COUNT, DELAY, FILL_MODE,\n  DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n@GetterSetter(getters, setters, \"state\")\nclass Animator extends EventTrigger {\n  public state: StateInterface;\n  public options: ObjectInterface<any>;\n\n  constructor(options?: StateInterface) {\n    super();\n    this.options = {};\n    this.state = {\n      id: \"\",\n      easing: 0,\n      easingName: \"linear\",\n      iterationCount: 1,\n      delay: 0,\n      fillMode: \"forwards\",\n      direction: NORMAL,\n      playSpeed: 1,\n      currentTime: 0,\n      iterationTime: -1,\n      currentIterationCount: 0,\n      tickTime: 0,\n      prevTime: 0,\n      playState: PAUSED,\n      duration: 0,\n    };\n    this.setOptions(options);\n  }\n  /**\n\t* set animator's easing.\n\t* @method Scene.Animator#setEasing\n\t* @param {array| function} curverArray - The speed curve of an animation.\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n\t*/\n  public setEasing(curveArray: [number, number, number, number] | EasingFunctionInterface): this {\n    const easing = Array.isArray(curveArray) ?\n      bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]) : curveArray;\n    const easingName = easing[EASING_NAME] || \"linear\";\n\n    this.setState({ easing, easingName });\n    return this;\n  }\n  /**\n\t* set animator's options.\n\t* @method Scene.Animator#setOptions\n\t* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n\t* @param {Object} [AnimatorOptions] - animator's options\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n\t*/\n  public setOptions(options: StateInterface = {}): this {\n    for (const name in options) {\n      const value = options[name];\n\n      if (name === EASING) {\n        this.setEasing(value);\n        continue;\n      } else if (name === DURATION) {\n        value && this.setDuration(value);\n        continue;\n      }\n      ((name in this.state ? this.state : this.options) as StateInterface)[name] = value;\n    }\n\n    return this;\n  }\n  /**\n\t* Get the animator's total duration including delay\n\t* @method Scene.Animator#getTotalDuration\n\t* @return {number} Total duration\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getTotalDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.state[DELAY] + this.getActiveDuration();\n  }\n  /**\n\t* Get the animator's total duration excluding delay\n\t* @method Scene.Animator#getActiveDuration\n\t* @return {number} Total duration excluding delay\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getActiveDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.getDuration() * (this.state[ITERATION_COUNT] as number);\n  }\n  /**\n\t* Check if the animator has reached the end.\n\t* @method Scene.Animator#isEnded\n\t* @return {boolean} ended\n\t* @example\nanimator.isEnded(); // true or false\n\t*/\n  public isEnded(): boolean {\n    if (this.state.tickTime === 0 && this.state[PLAY_STATE] === PAUSED) {\n      return true;\n    } else if (this.getTime() < this.getActiveDuration()) {\n      return false;\n    }\n    return true;\n  }\n  /**\n\t*Check if the animator is paused:\n\t* @method Scene.Animator#isPaused\n\t* @return {boolean} paused\n\t* @example\nanimator.isPaused(); // true or false\n\t*/\n  public isPaused(): boolean {\n    return this.state[PLAY_STATE] === PAUSED;\n  }\n  public setNext(animator: Animator): this {\n    this.on(ENDED, () => {\n      animator.play();\n    });\n    return this;\n  }\n  /**\n\t* play animator\n\t* @method Scene.Animator#play\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public play() {\n    this.state[PLAY_STATE] = RUNNING;\n    if (this.isEnded()) {\n      this.setTickTime(0);\n    }\n    this.state.tickTime = this.getTime();\n\n    requestAnimFrame((time: number) => {\n      this.state.prevTime = time;\n      this.tick(time);\n    });\n    /**\n\t\t * This event is fired when play animator.\n\t\t * @event Scene.Animator#play\n\t\t */\n    this.trigger(PLAY);\n\n    return this;\n  }\n  /**\n\t* pause animator\n\t* @method Scene.Animator#pause\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public pause(): this {\n    this.state[PLAY_STATE] = PAUSED;\n    /**\n\t\t * This event is fired when animator is paused.\n\t\t * @event Scene.Animator#paused\n\t\t */\n    this.trigger(PAUSED);\n    return this;\n  }\n  /**\n\t * end animator\n\t * @method Scene.Animator#finish\n\t * @return {Scene.Animator} An instance itself.\n\t*/\n  public finish() {\n    this.end();\n    return this;\n  }\n  /**\n\t * end animator\n\t * @method Scene.Animator#end\n\t * @return {Scene.Animator} An instance itself.\n\t*/\n  public end() {\n    this.pause();\n    /**\n\t\t * This event is fired when animator is ended.\n\t\t * @event Scene.Animator#ended\n\t\t */\n    this.trigger(ENDED);\n    return this;\n  }\n  /**\n\t* reset animator\n\t* @method Scene.Animator#reset\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public reset() {\n    this.state.tickTime = 0;\n    this.setTime(0);\n    this.pause();\n    return this;\n  }\n  /**\n\t* set currentTime\n\t* @method Scene.Animator#setTime\n\t* @param {Number|String} time - currentTime\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\n\nanimator.setTime(\"from\"); // 0\nanimator.setTime(\"to\"); // 100%\nanimator.setTime(\"50%\");\nanimator.setTime(10);\nanimator.getTime() // 10\n\t*/\n  public setTime(time: number | string, isTick?: boolean) {\n    const activeDuration = this.getActiveDuration();\n    let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n    this.state.tickTime = this.state.delay + currentTime;\n    if (currentTime < 0) {\n      currentTime = 0;\n    } else if (currentTime > activeDuration) {\n      currentTime = activeDuration;\n    }\n    this.state.currentTime = currentTime;\n    this.calculateIterationTime();\n\n    if (this.isDelay()) {\n      return this;\n    }\n    /**\n\t\t * This event is fired when the animator updates the time.\n\t\t * @event Scene.Animator#timeupdate\n\t\t * @param {Object} param The object of data to be sent to an event.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t */\n    this.trigger(TIMEUPDATE, {\n      currentTime,\n      time: this.getIterationTime(),\n      iterationCount: this.getIterationCount(),\n    });\n\n    return this;\n  }\n  public getState(name: string): any {\n    return this.state[name];\n  }\n  public setState(object: StateInterface) {\n    for (const name in object) {\n      this.state[name] = object[name];\n    }\n    return this;\n  }\n  /**\n\t* Get the animator's current time\n\t* @method Scene.Animator#getTime\n\t* @return {number} current time\n\t* @example\nanimator.getTime();\n\t*/\n  public getTime(): number {\n    return this.state.currentTime;\n  }\n  public getUnitTime(time: string | number) {\n    if (isString(time)) {\n      const duration = this.getDuration() || 100;\n\n      if (time === \"from\") {\n        return 0;\n      } else if (time === \"to\") {\n        return duration;\n      }\n      const { unit, value } = splitUnit(time);\n\n      if (unit === \"%\") {\n        !this.getDuration() && (this.state.duration = duration);\n        return parseFloat(time) / 100 * duration;\n      } else if (unit === \">\") {\n        return value + THRESHOLD;\n      } else {\n        return value;\n      }\n    } else {\n      return toFixed(time);\n    }\n  }\n  /**\n\t * Check if the current state of animator is delayed.\n\t * @method Scene.Animator#isDelay\n\t * @return {boolean} check delay state\n\t */\n  public isDelay() {\n    const { delay, tickTime } = this.state;\n\n    return delay > 0 && (tickTime < delay);\n  }\n  public setCurrentIterationCount(iterationCount: number): this {\n    const state = this.state;\n    const passIterationCount = Math.floor(iterationCount);\n\n    if (state.currentIterationCount < passIterationCount) {\n      /**\n\t\t\t* The event is fired when an iteration of an animation ends.\n\t\t\t* @event Scene.Animator#iteration\n\t\t\t* @param {Object} param The object of data to be sent to an event.\n\t\t\t* @param {Number} param.currentTime The total time that the animator is running.\n\t\t\t* @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t\t*/\n      this.trigger(\"iteration\", {\n        currentTime: state.currentTime,\n        iterationCount: passIterationCount,\n      });\n    }\n    state.currentIterationCount = iterationCount;\n    return this;\n  }\n  protected calculateIterationTime() {\n    const { iterationCount, fillMode, direction } = this.state;\n    const duration = this.getDuration();\n    const time = this.getTime();\n    const currentIterationCount = duration === 0 ? 0 : time / duration;\n    let currentIterationTime = duration ? time % duration : 0;\n\n    if (!duration) {\n      this.setIterationTime(0);\n      return this;\n    }\n    this.setCurrentIterationCount(currentIterationCount);\n\n    // direction : normal, reverse, alternate, alternate-reverse\n    // fillMode : forwards, backwards, both, none\n    const isReverse = isDirectionReverse(currentIterationCount, iterationCount, direction);\n\n    if (isReverse) {\n      currentIterationTime = duration - currentIterationTime;\n    }\n    if (iterationCount !== INFINITE) {\n      const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n      // fill forwards\n      if (currentIterationCount >= iterationCount) {\n        currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n        isReverse && (currentIterationTime = duration - currentIterationTime);\n      }\n    }\n    this.setIterationTime(currentIterationTime);\n    return this;\n  }\n  protected tick(now: number) {\n    const state = this.state;\n    const { playSpeed, prevTime } = state;\n    const currentTime = this.state.tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n    state.prevTime = now;\n    this.setTickTime(currentTime);\n    if (this.isEnded()) {\n      this.end();\n      return;\n    }\n    if (state[PLAY_STATE] === PAUSED) {\n      return;\n    }\n\n    requestAnimFrame((time: number) => {\n      this.tick(time);\n    });\n  }\n  private setTickTime(time: number) {\n    this.setTime(time - this.state.delay, true);\n  }\n}\n\n/**\n * Get a delay for the start of an animation.\n * @method Scene.Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Scene.Animator#setDelay\n * @param {number} delay - delay\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#getFillMode\n * @return {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#setFillMode\n * @param {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode - fillMode\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Scene.Animator#getIterationCount\n * @return {\"inifnite\"|number} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Scene.Animator#setIterationCount\n * @param {\"inifnite\"|number} iterationCount - iterationCount\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#getDirection\n * @return {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#setDirection\n * @param {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction - direction\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Scene.Animator#getPlayState\n * @return {\"paused\"|\"running\"} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Scene.Animator#setPlayState\n * @param {\"paused\"|\"running\"} playState - playState\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Scene.Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Scene.Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Scene.Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Scene.Animator#setDuration\n * @param {number} duration - duration\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Scene.Animator#getEasing\n * @return {0|function} easing\n */\n/**\n * Get the speed curve's name\n * @method Scene.Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Scene.Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\ninterface Animator {\n  getIterationTime(): number;\n  setIterationTime(time: number): this;\n  setDelay(delay: number): this;\n  getDelay(): number;\n  setFillMode(fillMode: FillModeType): this;\n  getFillMode(): FillModeType;\n  setIterationCount(iterationCount: IterationCountType): this;\n  getIterationCount(): IterationCountType;\n  setDirection(direction: IterationCountType): this;\n  getDirection(): IterationCountType;\n  setPlayState(playState: PlayStateType): this;\n  getPlayState(): PlayStateType;\n  setPlaySpeed(playSpeed: number): this;\n  getPlaySpeed(): number;\n  setDuration(duration: number): this;\n  getDuration(): number;\n  getEasing(): EasingType;\n  getEasingName(): string;\n}\nexport default Animator;\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport { COLOR_MODELS, isString, splitComma, splitSpace, stringToRGBA, RGBA, splitBracket } from \"@daybrush/utils\";\nimport { ObjectInterface } from \"../consts\";\n\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const length = properties.length;\n  const obj = [];\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      continue;\n    }\n    obj.push({ [matches[1].trim()]: toPropertyObject(matches[2].trim()) });\n  }\n  return obj;\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(text: string) {\n  // [prefix, value, other]\n  const { prefix: model, value, suffix: afterModel } = splitBracket(text);\n\n  if (typeof value === \"undefined\") {\n    return text;\n  }\n  if (COLOR_MODELS.indexOf(model) !== -1) {\n    return arrayToColorObject(stringToRGBA(text));\n  }\n  // divide comma(,)\n  const obj = toPropertyObject(value);\n\n  let arr = [value];\n  let separator = \",\";\n  let prefix = `${model}(`;\n  let suffix = `)${afterModel}`;\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.getOption(\"separator\");\n    arr = obj.value;\n    prefix += obj.getOption(\"prefix\");\n    suffix = obj.getOption(\"suffix\") + suffix;\n  }\n  return new PropertyObject(arr, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  const result = stringToRGBA(value);\n\n  return result ? arrayToColorObject(result) : value;\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: string | ObjectInterface<any> | any[]): any {\n  if (!isString(value)) {\n    if (Array.isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: ObjectInterface<any> = {}) {\n  const model = object.getOption(\"model\");\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => toObject(obj, result));\n  }\n  return result;\n}\n","import {\n  ObjectInterface, NameType,\n  ALIAS, TIMING_FUNCTION, PROPERTY, FUNCTION\n} from \"./consts\";\nimport { isRole, getType } from \"./utils\";\nimport { toPropertyObject, splitStyle, toObject } from \"./utils/property\";\nimport PropertyObject from \"./PropertyObject\";\nimport { isObject, isArray, isString, ANIMATION, TRANSFORM, FILTER } from \"@daybrush/utils\";\n\nfunction toInnerProperties(obj: ObjectInterface<string>) {\n  if (!obj) {\n    return \"\";\n  }\n  const arrObj = [];\n\n  for (const name in obj) {\n    arrObj.push(`${name.replace(/\\d/g, \"\")}(${obj[name]})`);\n  }\n  return arrObj.join(\" \");\n}\nfunction isPropertyObject(value: any): value is PropertyObject {\n  return value instanceof PropertyObject;\n}\n/* eslint-disable */\nfunction clone(target: ObjectInterface<any>, toValue = false) {\n  return merge({}, target, toValue);\n}\nfunction merge(to: ObjectInterface<any>, from: ObjectInterface<any>, toValue = false) {\n  for (const name in from) {\n    const value = from[name];\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n      to[name] = toValue ? value.toValue() : value.clone();\n    } else if (type === FUNCTION) {\n      to[name] = toValue ? getValue([name], value()) : value;\n    } else if (type === \"array\") {\n      to[name] = value.slice();\n    } else if (type === \"object\") {\n      if (isObject(to[name]) && !isPropertyObject(to[name])) {\n        merge(to[name], value, toValue);\n      } else {\n        to[name] = clone(value, toValue);\n      }\n    } else {\n      to[name] = from[name];\n    }\n  }\n  return to;\n}\n/* eslint-enable */\n\nfunction getValue(names: NameType[], value: any): any {\n  const type = getType(value);\n\n  if (type === PROPERTY) {\n    return value.toValue();\n  } else if (type === FUNCTION) {\n    if (names[0] !== TIMING_FUNCTION) {\n      return getValue(names, value());\n    }\n  } else if (type === \"object\") {\n    return clone(value, true);\n  }\n  return value;\n}\n/**\n* Animation's Frame\n* @class Scene.Frame\n* @param {Object} properties - properties\n* @example\nconst frame = new Scene.Frame({\n\tdisplay: \"none\"\n\ttransform: {\n\t\ttranslate: \"50px\",\n\t\tscale: \"5, 5\",\n\t}\n});\n */\nclass Frame {\n  public properties: ObjectInterface<any>;\n  constructor(properties: ObjectInterface<any> = {}) {\n    this.properties = {};\n    this.set(properties);\n  }\n  /**\n\t* get property value\n\t* @method Scene.Frame#get\n\t* @param {...Number|String|Scene.PropertyObject} args - property name or value\n\t* @example\n\tframe.get(\"display\") // => \"none\", \"block\", ....\n\tframe.get(\"transform\", \"translate\") // => \"10px,10px\"\n\t*/\n  public get(...args: NameType[]) {\n    const value = this.raw(...args);\n\n    return getValue(args[0] in ALIAS ? ALIAS[args[0]] : args, value);\n  }\n\n  public raw(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties)) {\n        return undefined;\n      }\n      properties = properties[params[i]];\n    }\n    return properties;\n  }\n  /**\n\t* remove property value\n\t* @method Scene.Frame#remove\n\t* @param {...String} args - property name\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.remove(\"display\")\n\t*/\n  public remove(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length - 1; ++i) {\n      if (!isObject(properties)) {\n        return this;\n      }\n      properties = properties[params[i]];\n    }\n    delete properties[params[length - 1]];\n    return this;\n  }\n  /**\n\t* set property\n\t* @method Scene.Frame#set\n\t* @param {...Number|String|Scene.PropertyObject} args - property names or values\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n// one parameter\nframe.set({\n\tdisplay: \"none\",\n\ttransform: {\n\t\ttranslate: \"10px, 10px\",\n\t\tscale: \"1\",\n\t},\n\tfilter: {\n\t\tbrightness: \"50%\",\n\t\tgrayscale: \"100%\"\n\t}\n});\n\n// two parameters\nframe.set(\"transform\", {\n\ttranslate: \"10px, 10px\",\n\tscale: \"1\",\n});\n\n// three parameters\nframe.set(\"transform\", \"translate\", \"50px\");\n\t*/\n  public set(...args: any[]) {\n    const length = args.length;\n    const params = args.slice(0, -1);\n    const value = args[length - 1];\n\n    if (params[0] in ALIAS) {\n      this._set(ALIAS[params[0]], value);\n    } else if (length === 2 && isArray(params[0])) {\n      this._set(params[0], value);\n    } else if (isObject(value)) {\n      if (isArray(value)) {\n        this._set(params, value);\n      } else if (isPropertyObject(value)) {\n        if (isRole(params)) {\n          this.set(...params, toObject(value));\n        } else {\n          this._set(params, value);\n        }\n      } else if (value instanceof Frame) {\n        this.merge(value);\n      } else {\n        for (const name in value) {\n          this.set(...params, name, value[name]);\n        }\n      }\n    } else if (isString(value)) {\n      if (isRole(params)) {\n        const obj = toPropertyObject(value);\n\n        if (isObject(obj)) {\n          this.set(...params, obj);\n        }\n        return this;\n      } else {\n        const styles = splitStyle(value);\n\n        styles.forEach(style => {\n          this.set(...params, style);\n        });\n        if (styles.length) {\n          return this;\n        }\n      }\n      this._set(params, value);\n    } else {\n      this._set(params, value);\n    }\n    return this;\n  }\n  /**\n\t* check that has property.\n\t* @method Scene.Frame#has\n\t* @param {...String} args - property name\n\t* @example\n\tframe.has(\"property\", \"display\") // => true or false\n\t*/\n  public has(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    if (!length) {\n      return false;\n    }\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties) || !(params[i] in properties)) {\n        return false;\n      }\n      properties = properties[params[i]];\n    }\n    return true;\n  }\n  /**\n\t* clone frame.\n\t* @method Scene.Frame#clone\n\t* @return {Scene.Frame} An instance of clone\n\t* @example\n\tframe.clone();\n\t*/\n  public clone() {\n    const frame = new Frame();\n\n    frame.merge(this);\n    return frame;\n  }\n  /**\n\t* merge one frame to other frame.\n\t* @method Scene.Frame#merge\n\t* @param {Scene.Frame} frame - target frame.\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.merge(frame2);\n\t*/\n  public merge(frame: Frame) {\n    const properties = this.properties;\n    const frameProperties = frame.properties;\n\n    if (!frameProperties) {\n      return this;\n    }\n    merge(properties, frameProperties);\n\n    return this;\n  }\n  public toObject() {\n    return clone(this.properties, true);\n  }\n  /**\n\t* Specifies an css object that coverted the frame.\n\t* @method Scene.Frame#toCSSObject\n\t* @return {object} cssObject\n\t*/\n  public toCSSObject() {\n    const properties = this.toObject();\n    const cssObject: ObjectInterface<string> = {};\n\n    for (const name in properties) {\n      if (isRole([name], true)) {\n        continue;\n      }\n      const value = properties[name];\n\n      if (name === TIMING_FUNCTION) {\n        cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n          (isString(value) ? value : value.easingName) || \"initial\";\n        continue;\n      }\n      cssObject[name] = value;\n    }\n    const transform = toInnerProperties(properties.transform);\n    const filter = toInnerProperties(properties.filter);\n\n    TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n    FILTER && filter && (cssObject[FILTER] = filter);\n    return cssObject;\n  }\n  /**\n\t* Specifies an css text that coverted the frame.\n\t* @method Scene.Frame#toCSS\n\t* @return {string} cssText\n\t*/\n  public toCSS() {\n    const cssObject = this.toCSSObject();\n    const cssArray = [];\n\n    for (const name in cssObject) {\n      cssArray.push(`${name}:${cssObject[name]};`);\n    }\n    return cssArray.join(\"\");\n  }\n  private _set(args: NameType[], value: any) {\n    let properties = this.properties;\n    const length = args.length;\n\n    for (let i = 0; i < length - 1; ++i) {\n      const name = args[i];\n\n      !(name in properties) && (properties[name] = {});\n      properties = properties[name];\n    }\n    if (!length) {\n      return;\n    }\n    properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n  }\n}\nexport default Frame;\n","import { ObjectInterface, RoleInterface } from \"./consts\";\nimport { isInProperties, toFixed } from \"./utils\";\nimport PropertyObject from \"./PropertyObject\";\nimport Frame from \"./Frame\";\nimport { isObject, isArray } from \"@daybrush/utils\";\n\nfunction getNames(names: ObjectInterface<any>, stack: string[]) {\n  let arr: string[][] = [];\n\n  for (const name in names) {\n    stack.push(name);\n\n    if (isObject(names[name])) {\n      arr = arr.concat(getNames(names[name], stack));\n    } else {\n      arr.push(stack.slice());\n    }\n    stack.pop();\n  }\n  return arr;\n}\nfunction updateFrame(names: ObjectInterface<any>, properties: ObjectInterface<any>) {\n  for (const name in properties) {\n    const value = properties[name];\n\n    if (!isObject(value) || isArray(value) || value instanceof PropertyObject) {\n      names[name] = true;\n      continue;\n    }\n    if (!isObject(names[name])) {\n      names[name] = {};\n    }\n    updateFrame(names[name], properties[name]);\n  }\n}\n/**\n* a list of objects in chronological order.\n* @memberof Scene\n*/\nclass Keyframes {\n  public times: number[];\n  public items: ObjectInterface<any>;\n  public names: RoleInterface;\n  /**\n\t */\n  constructor() {\n    this.times = [];\n    this.items = {};\n    this.names = {};\n  }\n  /**\n\t* A list of names\n\t* @return {string[][]} names\n\t* @example\nkeyframes.getNames(); // [[\"a\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n\t*/\n  public getNames() {\n    const names = this.names;\n\n    return getNames(names, []);\n  }\n  /**\n\t* Check if keyframes has propery's name\n\t* @param {...string[]} name - property's time\n\t* @return {Boolean} true: if has property, false: not\n\t* @example\nkeyframes.hasName(\"transform\", \"translate\"); // true or not\n\t*/\n  public hasName(...args: string[]) {\n    return isInProperties(this.names, args, true);\n  }\n  /**\n\t * update property names used in frames.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public update() {\n    const items = this.items;\n\n    for (const time in items) {\n      this.updateFrame(items[time]);\n    }\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} callback Function to execute for each element, taking three arguments\n\t * @param {Scene.Frame} [callback.item] The value of the item being processed in the keyframes.\n\t * @param {string} [callback.time] The time of the item being processed in the keyframes.\n\t * @param {object} [callback.items] The object that forEach() is being applied to.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public forEach(callback: (item: any, time: number, items: ObjectInterface<any>) => void) {\n    const times = this.times;\n    const items = this.items;\n\n    times.forEach(time => {\n      callback(items[time], time, items);\n    });\n  }\n  /**\n\t* update property names used in frame.\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.Keyframes} An instance itself\n\t* @example\nkeyframes.updateFrame(frame);\n\t*/\n  public updateFrame(frame: Frame) {\n    if (!frame) {\n      return this;\n    }\n    const properties = frame.properties;\n    const names = this.names;\n\n    updateFrame(names, properties);\n    return this;\n  }\n  /**\n\t * Get how long an animation should take to complete one cycle.\n\t * @return {number} duration\n\t */\n  public getDuration() {\n    const times = this.times;\n\n    return times.length === 0 ? 0 : times[times.length - 1];\n  }\n  /**\n\t * Set how long an animation should take to complete one cycle.\n\t * @param {number} duration - duration\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public setDuration(duration: number, originalDuration: number = this.getDuration()) {\n    const ratio = duration / originalDuration;\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(time => {\n      const time2 = toFixed(time * ratio);\n\n      obj[time2] = items[time];\n\n      return time2;\n    });\n    this.items = obj;\n  }\n  /**\n\t * Set how much time you want to push ahead.\n\t * @param {number} time - time\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public unshift(time: number) {\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(t => {\n      const time2 = toFixed(time + t);\n\n      obj[time2] = items[t];\n      return time2;\n    });\n    this.items = obj;\n    return this;\n  }\n  /**\n\t* get size of list\n\t* @return {Number} length of list\n\t*/\n  public size() {\n    return this.times.length;\n  }\n  /**\n\t* add object in list\n\t* @param {Number} time - frame's time\n\t* @param {Object} object - target\n\t* @return {Scene.Keyframes} An instance itself\n\t*/\n  public add(time: number, object: any) {\n    this.items[time] = object;\n    this.addTime(time);\n    return this;\n  }\n  /**\n\t* Check if keyframes has object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Boolean} true: if has time, false: not\n\t*/\n  public has(time: number) {\n    return time in this.items;\n  }\n  /**\n\t* get object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Object} object at that time\n\t*/\n  public get(time: number) {\n    return this.items[time];\n  }\n  /**\n\t* remove object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Keyframes} An instance itself\n\t*/\n  public remove(time: number) {\n    const items = this.items;\n\n    delete items[time];\n    this.removeTime(time);\n    return this;\n  }\n  private addTime(time: number) {\n    const times = this.times;\n    const length = times.length;\n    let pushIndex = length;\n\n    for (let i = 0; i < length; ++i) {\n      // if time is smaller than times[i], add time to index\n      if (time === times[i]) {\n        return this;\n      } else if (time < times[i]) {\n        pushIndex = i;\n        break;\n      }\n    }\n    this.times.splice(pushIndex, 0, time);\n    return this;\n  }\n  private removeTime(time: number) {\n    const index = this.times.indexOf(time);\n\n    if (index > -1) {\n      this.times.splice(index, 1);\n    }\n    return this;\n  }\n}\nexport default Keyframes;\n","/**\n* @namespace\n* @name Dot\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport { EasingType } from \"../Animator\";\nimport { getType } from \"../utils\";\nimport { PROPERTY, FUNCTION } from \"../consts\";\nimport { toPropertyObject } from \"./property\";\nimport { isArray, splitUnit } from \"@daybrush/utils\";\n\n/**\n* The dot product of Arrays\n* @memberof Dot\n* @function dotArray\n* @param {Array} a1 value1\n* @param {Array} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {Array|Object} Array.\n* @example\ndotArray([0, 0, 0, 1],[50, 50, 50, 1],0.5, 0.5);\n// => [25, 25, 25, 1]\n*/\nexport function dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  }\n  if (!isArray(a2)) {\n    return a1;\n  }\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\n/**\n* The dot product of PropertyObject(type=color)\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Dot\n* @function dotColor\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} PropertyObject(type=color).\n* @example\nvar colorObject = ......; //PropertyObject(type=color, model=\"rgba\", value=[254, 254, 254, 1]);\ndotColor(\"#000\",  colorObject, 0.5, 0.5);\n// \"#000\" => PropertyObject(type=color, model=\"rgba\", value=[0, 0, 0, 1]);\n// return => PropertyObject(type=color, model=\"rgba\", value=[127, 127, 127, 1]);\n*/\nexport function dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  if (b2 === 0) {\n    return color2;\n  }\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.getOption(\"model\");\n  const model2 = color2.getOption(\"model\");\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n/**\n* The dot product of Objects\n* @memberof Dot\n* @function dotObject\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} Array with Separator.\n* @example\ndotObject(PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)]),\nPropertyObject([\"9px\", \"solid\", rgba(50, 50, 50, 1)]),\n0.5, 0.5);\n// => PropertyObject([\"5px\", \"solid\", rgba(25, 25, 25, 1)])\n*/\nexport function dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.getOption(\"type\");\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.getOption(\"separator\") || a2.getOption(\"separator\"),\n    prefix: a1.getOption(\"prefix\") || a2.getOption(\"prefix\"),\n    suffix: a1.getOption(\"suffix\") || a2.getOption(\"suffix\"),\n    model: a1.getOption(\"model\") || a2.getOption(\"model\"),\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === \"array\") {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  // split number and unit of the value.\n  const r1 = b1 / (b1 + b2);\n  const r2 = 1 - r1;\n\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = v1.value * r2 + v2.value * r1;\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import Animator, { StateInterface, EasingType, isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n  toFixed,\n  isFixed,\n  playCSS,\n} from \"./utils\";\nimport Keyframes from \"./Keyframes\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n  START_ANIMATION,\n  PREFIX, THRESHOLD, ObjectInterface, NameType,\n  TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, NORMAL, INFINITE,\n  REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n  EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION\n} from \"./consts\";\nimport { isObject, isArray, isUndefined, decamelize,\n  ANIMATION, fromCSS, addClass, removeClass, hasClass, KEYFRAMES } from \"@daybrush/utils\";\n\nfunction toId(text: string) {\n  return text.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nfunction makeId(selector?: boolean) {\n  for (; ;) {\n    const id = `${Math.floor(Math.random() * 100000)}`;\n\n    if (!selector) {\n      return id;\n    }\n    const checkElement = document.querySelector(`[data-scene-id=\"${id}\"]`);\n\n    if (!checkElement) {\n      return id;\n    }\n  }\n}\nfunction makeAnimationProperties(properties: ObjectInterface<string | number>) {\n  const cssArray = [];\n\n  for (const name in properties) {\n    cssArray.push(`${ANIMATION}-${decamelize(name)} : ${properties[name]};`);\n  }\n  return cssArray.join(\"\");\n}\n\ntype ElementsType = HTMLElement[] | NodeListOf<HTMLElement>;\n/**\n* manage Frame Keyframes and play keyframes.\n* @memberof Scene\n* @extends Scene.Animator\n* @example\nconst item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator {\n  public keyframes: Keyframes;\n  private elements: ElementsType;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst item = new Scene.SceneItem({\n\t\t0: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\t1: {\n\t\t\tdisplay: \"block\",\n\t\t\topacity: 0,\n\t\t},\n\t\t2: {\n\t\t\topacity: 1,\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.keyframes = new Keyframes();\n    this.elements = [];\n    this.load(properties, options);\n  }\n  public getDuration() {\n    return Math.max(this.state[DURATION], this.keyframes.getDuration());\n  }\n  public setDuration(duration: number) {\n    if (duration === 0) {\n      return this;\n    }\n    const originalDuration = this.getDuration();\n\n    if (originalDuration > 0) {\n      this.keyframes.setDuration(duration, originalDuration);\n    }\n    super.setDuration(toFixed(duration));\n    return this;\n  }\n  /**\n\t* set the unique indicator of the item.\n\t* @method Scene.SceneItem#setId\n\t* @param {String} [id] - the indicator of the item.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nconst item = new SceneItem();\n\nitem.setId(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public setId(id?: string) {\n    const elements = this.elements;\n    const length = elements.length;\n\n    this.setState({ id: id || makeId(!!length) });\n    const sceneId = toId(this.getId());\n\n    this.options.selector || (this.options.selector = `[data-scene-id=\"${sceneId}\"]`);\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      elements[i].setAttribute(\"data-scene-id\", sceneId);\n    }\n    return this;\n  }\n  /**\n\t* Specifies the unique indicator of the item.\n\t* @method Scene.SceneItem#getId\n\t* @return {String} the indicator of the item.\n\t* @example\nconst item = scene.newItem(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public getId() {\n    return this.state.id;\n  }\n  /**\n\t* Set properties to the sceneItem at that time\n\t* @method Scene.SceneItem#set\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\nconsole.log(item.get(0, \"a\")); // \"b\"\n\t*/\n  public set(time: any[] | number | string | ObjectInterface<any>, ...args: any[]) {\n    if (isObject(time)) {\n      this.load(time);\n      return this;\n    } else if (args[0]) {\n      if (args[0] instanceof SceneItem) {\n        const item: SceneItem = args[0];\n        const delay = item.getDelay();\n        const realTime = this.getUnitTime(time) + delay;\n        const { keys, values, frames } = item.getAllTimes(!!delay || !this.hasFrame(time));\n        const easing = this.getEasingName() !== item.getEasingName() ? item.getEasing() : 0;\n\n        keys.forEach(t => {\n          this.set(realTime + t, frames[values[t]]);\n        });\n        if (easing) {\n          this.set(realTime + keys[0], EASING, easing);\n          this.set(realTime + keys[keys.length - 1], EASING, \"initial\");\n        }\n        return this;\n      } else if (args.length === 1 && isArray(args[0])) {\n        args[0].forEach((item: any) => {\n          this.set(time, item);\n        });\n        return this;\n      }\n    }\n    const frame = this.newFrame(time);\n\n    frame.set(...args);\n    this.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Get properties of the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} args property's name or properties\n\t* @return {Number|String|Scene.PropertyObejct} property value\n\t* @example\nitem.get(0, \"a\"); // item.getFrame(0).get(\"a\");\nitem.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n\t*/\n  public get(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    return frame && frame.get(...args);\n  }\n  /**\n\t* remove properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.remove(0, \"a\");\n\t*/\n  public remove(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    frame && frame.remove(...args);\n    this.update();\n    return this;\n  }\n  /**\n\t* Append the item or object at the last time.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.append(new SceneItem({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n}));\nitem.append({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\nitem.set(item.getDuration(), {\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\n\t*/\n  public append(item: SceneItem | object) {\n    this.set(this.getDuration(), item);\n    return this;\n  }\n  /**\n\t* Push the front frames for the time and prepend the scene item or item object.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t*/\n  public prepend(item: SceneItem | object) {\n    if (item instanceof SceneItem) {\n      const delay = item.getDelay();\n      const duration = item.getIterationCount() === INFINITE ? item.getDuration() : item.getActiveDuration();\n      const unshiftTime = duration + delay;\n      const firstFrame = this.keyframes.get(0);\n\n      if (firstFrame) {\n        this.keyframes.remove(0);\n      }\n      this.keyframes.unshift(unshiftTime);\n      this.set(0, item);\n      this.set(unshiftTime + THRESHOLD, firstFrame);\n    } else {\n      this.prepend(new SceneItem(item));\n    }\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize items' keyframes.\n\t* @method Scene.SceneItem#setSelector\n\t* @param {string} selectors - Selectors to find elements in items.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setSelector(\"#id.class\");\n\t*/\n  public setSelector(selector: boolean | string) {\n    this.options.selector = selector === true ? this.state.id :\n      (selector || `[data-scene-id=\"${this.state.id}\"]`);\n    this.setElement(document.querySelectorAll(this.options.selector));\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize item's keyframes.\n\t* @method Scene.SceneItem#setElement\n\t* @param {Element|Array|string} elements - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n\t*/\n  public setElement(elements: HTMLElement | ElementsType) {\n    if (!elements) {\n      return this;\n    }\n    this.elements = (elements instanceof Element) ? [elements] : elements;\n    this.setId(this.getId());\n    return this;\n  }\n  /**\n\t* add css styles of items's element to the frame at that time.\n\t* @method Scene.SceneItem#setCSS\n\t* @param {Array} properties - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public setCSS(time: number, properties: string[]) {\n    this.set(time, fromCSS(this.elements, properties));\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t* update property names used in frames.\n\t* @method Scene.SceneItem#update\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.update();\n\t*/\n  public update() {\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* update property names used in frame.\n\t* @method Scene.SceneItem#updateFrame\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.updateFrame(time, this.get(time));\n\t*/\n  public updateFrame(frame: Frame) {\n    this.keyframes.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Create and add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#newFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} Created frame.\n\t* @example\nitem.newFrame(time);\n\t*/\n  public newFrame(time: string | number) {\n    let frame = this.getFrame(time);\n\n    if (frame) {\n      return frame;\n    }\n    frame = new Frame();\n    this.setFrame(time, frame);\n    return frame;\n  }\n  /**\n\t* Add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#setFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setFrame(time, frame);\n\t*/\n  public setFrame(time: string | number, frame: Frame) {\n    this.keyframes.add(this.getUnitTime(time), frame);\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* get sceneItem's frame at that time\n\t* @method Scene.SceneItem#getFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} sceneItem's frame at that time\n\t* @example\nconst frame = item.getFrame(time);\n\t*/\n  public getFrame(time: number | string) {\n    return this.keyframes.get(this.getUnitTime(time));\n  }\n  /**\n\t* check if the item has a frame at that time\n\t* @method Scene.SceneItem#hasFrame\n\t* @param {Number} time - frame's time\n\t* @return {Boolean} true: the item has a frame // false: not\n\t* @example\nif (item.hasFrame(10)) {\n\t// has\n} else {\n\t// not\n}\n\t*/\n  public hasFrame(time: number | string) {\n    return this.keyframes.has(this.getUnitTime(time));\n  }\n  /**\n\t* remove sceneItem's frame at that time\n\t* @method Scene.SceneItem#removeFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.removeFrame(time);\n\t*/\n  public removeFrame(time: number) {\n    const keyframes = this.keyframes;\n\n    keyframes.remove(time);\n    keyframes.update();\n\n    return this;\n  }\n  /**\n\t* Copy frame of the previous time at the next time.\n\t* @method Scene.SceneItem#copyFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(0) equal getFrame(1)\nitem.copyFrame(0, 1);\n\t*/\n  public copyFrame(fromTime: ObjectInterface<number> | number | string, toTime: number) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.copyFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const copyFrame = frame.clone();\n\n    this.setFrame(toTime, copyFrame);\n    return this;\n  }\n  /**\n\t* merge frame of the previous time at the next time.\n\t* @method Scene.SceneItem#mergeFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number|string} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(1) contains getFrame(0)\nitem.merge(0, 1);\n\t*/\n  public mergeFrame(fromTime: ObjectInterface<number> | number | string, toTime: number | string) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.mergeFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const toFrame = this.newFrame(toTime);\n\n    toFrame.merge(frame);\n    return this;\n  }\n  /**\n\t* Get frame of the current time\n\t* @method Scene.SceneItem#getNowFrame\n\t* @param {Number} time - the current time\n\t* @param {function} easing - the speed curve of an animation\n\t* @return {Scene.Frame} frame of the current time\n\t* @example\nlet item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n// opacity: 0.7; display:\"block\";\nconst frame = item.getNowFrame(1.7);\n\t*/\n  public getNowFrame(time: number, easing?: EasingType) {\n    const frame = new Frame();\n    const names = this.keyframes.getNames();\n    const { left, right } = this._getNearTimeIndex(time);\n    const realEasing = this._getEasing(time, left, right, this.getEasing() || easing);\n\n    names.forEach(properties => {\n      const value = this._getNowValue(time, left, right, properties, realEasing);\n\n      if (isUndefined(value)) {\n        return;\n      }\n      frame.set(properties, value);\n    });\n    return frame;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (isArray(properties)) {\n      const length = properties.length;\n\n      for (let i = 0; i < length; ++i) {\n        const time = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n        this.set(time, properties[i]);\n      }\n    } else if (properties.keyframes) {\n      this.set(properties.keyframes);\n    } else {\n      for (const time in properties) {\n        if (time === \"options\" || time === \"keyframes\") {\n          continue;\n        }\n        const value = properties[time];\n        const realTime = this.getUnitTime(time);\n\n        if (typeof value === \"number\") {\n          this.mergeFrame(value, realTime);\n          continue;\n        }\n        this.set(realTime, value);\n      }\n    }\n    options && this.setOptions(options);\n    return this;\n  }\n  /**\n\t * clone SceneItem.\n\t * @method Scene.SceneItem#clone\n\t * @param {AnimatorOptions} [options] animator options\n\t * @return {Scene.SceneItem} An instance of clone\n\t * @example\n\t * item.clone();\n\t */\n  public clone(options = {}) {\n    const item = new SceneItem();\n\n    item.setOptions(this.state);\n    item.setOptions(options);\n    this.keyframes.forEach((frame: Frame, time: number) => item.setFrame(time, frame.clone()));\n    return item;\n  }\n  public setOptions(options: StateInterface = {}) {\n    super.setOptions(options);\n    const { id, selector, duration, elements } = options;\n\n    duration && this.setDuration(duration);\n    id && this.setId(id);\n    if (elements) {\n      this.setElement(elements);\n    } else if (selector) {\n      this.setSelector(selector === true ? this.state.id : selector);\n    }\n    return this;\n  }\n  public getAllTimes(isStartZero = true, options: StateInterface = {}) {\n    const times = this.keyframes.times.slice();\n    let length = times.length;\n    const keys: number[] = [];\n    const values: ObjectInterface<number> = {};\n\n    if (!length) {\n      return { keys: [], values: {}, frames: {} };\n    }\n    const frames: ObjectInterface<Frame> = {};\n    const duration = this.getDuration();\n    const direction = options[DIRECTION] || this.state[DIRECTION];\n    const isShuffle = direction === ALTERNATE || direction === ALTERNATE_REVERSE;\n    (!this.getFrame(0)) && times.unshift(0);\n    (!this.getFrame(duration)) && times.push(duration);\n    length = times.length;\n    let iterationCount = options[ITERATION_COUNT] || this.state[ITERATION_COUNT];\n\n    iterationCount = iterationCount !== INFINITE ? iterationCount : 1;\n    const totalDuration = iterationCount * duration;\n\n    for (let i = 0; i < iterationCount; ++i) {\n      const isReverse = isDirectionReverse(i, iterationCount, direction);\n      const start = i * duration;\n\n      for (let j = 0; j < length; ++j) {\n        if (isShuffle && i !== 0 && j === 0) {\n          // pass duplicate\n          continue;\n        }\n        // isStartZero is keytimes[0] is 0 (i === 0 & j === 0)\n        const threshold = j === 0 && (i === 0 ? !isStartZero : !isShuffle) ? THRESHOLD : 0;\n        const keyvalue = toFixed(isReverse ? times[length - 1 - j] : times[j]);\n        const time = toFixed(isReverse ? duration - keyvalue : keyvalue);\n        const keytime = toFixed(start + time + threshold);\n\n        if (totalDuration < keytime) {\n          break;\n        }\n        keys.push(keytime);\n        values[keytime] = keyvalue;\n\n        if (!frames[keyvalue]) {\n          const frame = this.getFrame(keyvalue);\n\n          if (!frame || j === 0 || j === length - 1 || frame.has(\"transform\") || frame.has(\"filter\")) {\n            frames[keyvalue] = this.getNowFrame(keyvalue);\n          } else {\n            frames[keyvalue] = frame;\n          }\n        }\n      }\n    }\n    if (keys[keys.length - 1] < totalDuration) {\n      // last time === totalDuration\n      const isReverse = isDirectionReverse(iterationCount, iterationCount, direction);\n      const keyvalue = toFixed(duration * (isReverse ? 1 - iterationCount % 1 : iterationCount % 1));\n\n      keys.push(totalDuration);\n      values[totalDuration] = keyvalue;\n      !frames[keyvalue] && (frames[keyvalue] = this.getNowFrame(keyvalue));\n    }\n    return { keys, values, frames };\n  }\n  /**\n\t* Specifies an css text that coverted the keyframes of the item.\n\t* @param {Array} [duration=this.getDuration()] - elements to synchronize item's keyframes.\n\t* @param {Array} [options={}] - parent options to unify options of items.\n\t* @example\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public toCSS(parentDuration = this.getDuration(), options: StateInterface = {}) {\n    const state = this.state;\n    const selector = state.selector || this.options.selector;\n\n    if (!selector) {\n      return \"\";\n    }\n    const id = this._getId();\n    // infinity or zero\n    const isParent = !isUndefined(options[ITERATION_COUNT]);\n    const isZeroDuration = parentDuration === 0;\n    const duration = isZeroDuration ? this.getDuration() : parentDuration;\n    const playSpeed = (options[PLAY_SPEED] || 1);\n    const delay = ((options[DELAY] || 0) + (isZeroDuration ? state[DELAY] : 0)) / playSpeed;\n    const easingName = (state[EASING] && state[EASING_NAME]) ||\n      (isParent && options[EASING] && options[EASING_NAME]) || state[EASING_NAME];\n    const iterationCount = (!isZeroDuration && options[ITERATION_COUNT]) || state[ITERATION_COUNT];\n    const fillMode = (options[FILL_MODE] !== \"forwards\" && options[FILL_MODE]) || state[FILL_MODE];\n    const direction = options[DIRECTION] || state[DIRECTION];\n    const cssText = makeAnimationProperties({\n      fillMode,\n      direction,\n      iterationCount,\n      delay: `${delay}s`,\n      name: `${PREFIX}KEYFRAMES_${toId(id)}`,\n      duration: `${duration / playSpeed}s`,\n      timingFunction: easingName,\n    });\n\n    const css = `${selector}.${START_ANIMATION} {\n\t\t\t${cssText}\n\t\t}${selector}.${PAUSE_ANIMATION} {\n      ${ANIMATION}-play-state: paused;\n    }\n\t\t${this._toKeyframes(duration, !isZeroDuration && isParent)}`;\n\n    return css;\n  }\n  public exportCSS(duration = this.getDuration(), options: StateInterface = {}) {\n    if (!this.elements.length) {\n      return;\n    }\n    const id = `${PREFIX}STYLE_${toId(this._getId())}`;\n    const styleElement: HTMLElement = document.querySelector(`#${id}`);\n    const css = this.toCSS(duration, options);\n\n    if (styleElement) {\n      styleElement.innerText = css;\n    } else {\n      document.body.insertAdjacentHTML(\"beforeend\",\n        `<style id=\"${id}\">${css}</style>`);\n    }\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      addClass(elements[i], PAUSE_ANIMATION);\n    }\n  }\n  public endCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      const element = elements[i];\n\n      removeClass(element, PAUSE_ANIMATION);\n      removeClass(element, START_ANIMATION);\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nitem.playCSS();\nitem.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(exportCSS = true, properties = {}) {\n    playCSS(this, exportCSS, properties);\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const elements = this.elements;\n    const length = elements.length;\n    const cssText = makeAnimationProperties(properties);\n\n    if (!length) {\n      return;\n    }\n    if (isPaused) {\n      for (let i = 0; i < length; ++i) {\n        removeClass(elements[i], PAUSE_ANIMATION);\n      }\n    } else {\n      for (let i = 0; i < length; ++i) {\n        const element = elements[i];\n\n        element.style.cssText += cssText;\n        if (hasClass(element, START_ANIMATION)) {\n          removeClass(element, START_ANIMATION);\n          (el => {\n            requestAnimationFrame(() => {\n              requestAnimationFrame(() => {\n                addClass(el, START_ANIMATION);\n              });\n            });\n          })(element);\n        } else {\n          addClass(element, START_ANIMATION);\n        }\n      }\n    }\n    return elements[0];\n  }\n  private _getId() {\n    return this.state.id || this.setId().getId();\n  }\n  private _getEasing(time: number, left: number, right: number, easing: EasingType) {\n    if (this.keyframes.hasName(TIMING_FUNCTION)) {\n      const nowEasing = this._getNowValue(time, left, right, [TIMING_FUNCTION], 0, true);\n\n      return typeof nowEasing === \"function\" ? nowEasing : easing;\n    }\n    return easing;\n  }\n  private _toKeyframes(duration = this.getDuration(), isParent: boolean) {\n    const id = this._getId();\n    const state = this.state;\n    const playSpeed = state[PLAY_SPEED];\n    const iterationCount = state[ITERATION_COUNT];\n    const fillMode = state[FILL_MODE];\n    const delay = isParent ? state[DELAY] : 0;\n    const direction = isParent ? state[DIRECTION] : NORMAL;\n    const isReverse = direction === REVERSE || direction === ALTERNATE_REVERSE;\n    const { keys, values, frames } = this.getAllTimes(true, {\n      duration,\n      delay,\n      direction,\n      iterationCount: isParent && iterationCount !== INFINITE ? iterationCount : 1,\n      isCSS: true,\n    });\n    const length = keys.length;\n    const css: ObjectInterface<string> = {};\n    const keyframes: string[] = [];\n\n    if (!keys.length) {\n      return \"\";\n    }\n    for (const time in frames) {\n      css[time] = frames[time].toCSS();\n    }\n    const lastTime = keys[length - 1];\n    const lastCSS = css[values[lastTime]];\n\n    if (delay) {\n      const delayCSS = isReverse && (fillMode === \"both\" || fillMode === \"backwards\") ? lastCSS : css[0];\n      keyframes.push(`0%{${delayCSS}}`);\n      isReverse && keyframes.push(`${delay / playSpeed / duration * 100 - THRESHOLD}%{${delayCSS}}`);\n    }\n    keys.forEach(time => {\n      keyframes.push(`${(delay + time) / playSpeed / duration * 100}%{${css[values[time]]}}`);\n    });\n    // if (afterDelay) {\n    //   keyframes.push(`${lastTime / playSpeed / duration * 100 + THRESHOLD}%{${lastCSS}}`);\n    //   keyframes.push(`100%{${lastCSS}`);\n    // } else {\n    if ((delay + lastTime) / playSpeed < duration) {\n      // not 100%\n      keyframes.push(`100%{${lastCSS}`);\n    }\n    // }\n    return `@${KEYFRAMES} ${PREFIX}KEYFRAMES_${toId(id)}{\n\t\t\t${keyframes.join(\"\\n\")}\n\t\t}`;\n  }\n  private _getNowValue(\n    time: number,\n    left: number,\n    right: number,\n    properties: string[],\n    easing: EasingType = this.getEasing(),\n    usePrevValue: boolean = isFixed(properties),\n  ) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    let prevTime;\n    let nextTime;\n    let prevFrame;\n    let nextFrame;\n\n    for (let i = left; i >= 0; --i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        prevTime = times[i];\n        prevFrame = frame;\n        break;\n      }\n    }\n    const prevValue = prevFrame && prevFrame.raw(...properties);\n\n    if (usePrevValue) {\n      return prevValue;\n    }\n    for (let i = right; i < length; ++i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        nextTime = times[i];\n        nextFrame = frame;\n        break;\n      }\n    }\n    const nextValue = nextFrame && nextFrame.raw(...properties);\n\n    if (!prevFrame || isUndefined(prevValue)) {\n      return nextValue;\n    }\n    if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n      return prevValue;\n    }\n    if (prevTime < 0) {\n      prevTime = 0;\n    }\n    return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n  }\n  private _getNearTimeIndex(time: number) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (times[i] === time) {\n        return { left: i, right: i };\n      } else if (times[i] > time) {\n        return { left: i === 0 ? 0 : i - 1, right: i };\n      }\n    }\n    return { left: length - 1, right: length - 1 };\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const easing = this.getEasing() || parentEasing;\n    const frame = this.getNowFrame(iterationTime, easing);\n    const currentTime = this.getTime();\n\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @event Scene.SceneItem#animate\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Scene.Frame} param.frame frame of that time.\n\t\t */\n    this.trigger(\"animate\", {\n      frame,\n      currentTime,\n      time: iterationTime,\n    });\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return frame;\n    }\n    const attributes = frame.get(\"attribute\");\n\n    if (attributes) {\n      for (const name in (attributes as any)) {\n        for (let i = 0; i < length; ++i) {\n          elements[i].setAttribute(name, attributes[name]);\n        }\n      }\n    }\n    const cssText = frame.toCSS();\n\n    if (this.state.cssText !== cssText) {\n      this.state.cssText = cssText;\n\n      for (let i = 0; i < length; ++i) {\n        elements[i].style.cssText += cssText;\n      }\n      return frame;\n    }\n  }\n}\n\nexport default SceneItem;\n","import Animator, { StateInterface, EasingType } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface, ANIMATE } from \"./consts\";\nimport Frame from \"./Frame\";\nimport { playCSS } from \"./utils\";\n\n/**\n* manage sceneItems and play Scene.\n* @extends Scene.Animator\n*/\nclass Scene extends Animator {\n\n  public items: ObjectInterface<Scene | SceneItem>;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst scene = new Scene({\n\t\titem1: {\n\t\t\t0: {\n\t\t\t\tdisplay: \"none\",\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tdisplay: \"block\",\n\t\t\t\topacity: 0,\n\t\t\t},\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t},\n\t\titem2: {\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.items = {};\n    this.load(properties, options);\n  }\n  public setId(id: string = `scene${Math.floor(Math.random() * 100000)}`) {\n    this.state.id = id;\n    return this;\n  }\n  public getId() {\n    return this.state.id;\n  }\n  public getDuration() {\n    const items = this.items;\n    let time = 0;\n\n    for (const id in items) {\n      const item = items[id];\n\n      time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n    }\n    return time;\n  }\n  public setDuration(duration: number) {\n    const items = this.items;\n    const sceneDuration = this.getDuration();\n\n    if (duration === 0 || !isFinite(sceneDuration)) {\n      return this;\n    }\n    if (sceneDuration === 0) {\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDuration(duration);\n      }\n    } else {\n      const ratio = duration / sceneDuration;\n\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDelay(item.getDelay() * ratio);\n        item.setDuration(item.getDuration() * ratio);\n      }\n    }\n    return this;\n  }\n  /**\n\t* get item in scene by name\n\t* @method Scene#getItem\n\t* @param {string} name - item's name\n\t* @return {Scene.SceneItem} item\n\t* @example\nconst item = scene.getItem(\"item1\")\n\t*/\n  public getItem(name: string) {\n    return this.items[name];\n  }\n  /**\n\t* create item in scene\n\t* @method Scene#newItem\n\t* @param {String} name - name of item to create\n\t* @param {StateOptions} options - The option object of SceneItem\n\t* @return {Sceme.SceneItem} Newly created item\n\t* @example\nconst item = scene.newItem(\"item1\")\n\t*/\n  public newItem(name: string, options = {}) {\n    if (name in this.items) {\n      return this.items[name];\n    }\n    const item = new SceneItem();\n\n    this.setItem(name, item);\n    item.setOptions(options);\n\n    return item;\n  }\n  /**\n\t* add a sceneItem to the scene\n\t* @param {String} name - name of item to create\n\t* @param {Scene.SceneItem} item - sceneItem\n\t* @example\nconst item = scene.newItem(\"item1\")\n\t*/\n  public setItem(name: string, item?: Scene | SceneItem) {\n    if (item instanceof Animator) {\n      item.setId(name);\n    }\n    this.items[name] = item;\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} func Function to execute for each element, taking three arguments\n\t * @param {Scene | Scene.SceneItem} [func.item] The value of the item being processed in the scene.\n\t * @param {string} [func.name] The name of the item being processed in the scene.\n\t * @param {object} [func.items] The object that forEach() is being applied to.\n\t * @return {Scene} An instance itself\n\t */\n  public forEach(func: (item?: Scene | SceneItem, name?: string, items?: ObjectInterface<Scene | SceneItem>) => void) {\n    const items = this.items;\n\n    for (const name in items) {\n      func(items[name], name, items);\n    }\n    return this;\n  }\n  /**\n\t * Export the CSS of the items to the style.\n\t * @return {Scene} An instance itself\n\t */\n  public exportCSS(duration: number = this.getDuration(), state?: StateInterface) {\n    const items = this.items;\n    let totalDuration = state ? this.getDuration() : duration;\n\n    if (!totalDuration || !isFinite(totalDuration)) {\n      totalDuration = 0;\n    }\n    for (const id in items) {\n      const item = items[id];\n\n      item.exportCSS(totalDuration, this.state);\n    }\n    return this;\n  }\n  public append(item: SceneItem | Scene) {\n    item.setDelay(item.getDelay() + this.getDuration());\n    this.setItem(item.getId() || item.setId().getId(), item);\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].pauseCSS();\n    }\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public endCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].endCSS();\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const items = this.items;\n    let animtionElement: HTMLElement;\n\n    for (const id in items) {\n      const el = items[id].addPlayClass(isPaused, properties);\n\n      !animtionElement && (animtionElement = el);\n    }\n    return animtionElement;\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @return {Scene} An instance itself\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nscene.playCSS();\nscene.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(exportCSS = true, properties = {}) {\n    playCSS(this, exportCSS, properties);\n    return this;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (!properties) {\n      return this;\n    }\n    const isSelector = options && options.selector;\n\n    for (const name in properties) {\n      if (name === \"options\") {\n        continue;\n      }\n      const object = properties[name];\n      let item;\n\n      if (object instanceof Scene || object instanceof SceneItem) {\n        this.setItem(name, object);\n        item = object;\n      } else {\n        item = this.newItem(name);\n        item.load(object);\n      }\n      isSelector && item.setSelector(name);\n    }\n    this.setOptions(options);\n  }\n  public setSelector(_: string | boolean) {\n    const isSelector = this.options.selector;\n\n    this.forEach((item, name) => {\n      item.setSelector(isSelector ? name : false);\n    });\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const items = this.items;\n    const easing = this.getEasing() || parentEasing;\n    const frames: ObjectInterface<ObjectInterface<any> | Frame> = {};\n\n    for (const id in items) {\n      const item = items[id];\n\n      frames[id] = item.animate(Math.max(iterationTime * item.getPlaySpeed() - item.getDelay(), 0), easing);\n    }\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Frame} param.frames frame of that time.\n\t\t */\n    this.trigger(ANIMATE, {\n      currentTime: this.getTime(),\n      time: iterationTime,\n      frames,\n    });\n    return frames;\n  }\n}\n\nexport default Scene;\n","\nimport { StateInterface } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface } from \"./consts\";\n\n/**\n * @namespace presets\n */\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func set\n * @param {string | string[]} property - property to set effect\n * @param {any[]} values - values of 100%\n * @param {AnimatorOptions} [options]\n * @example\n// import {set, blink} from \"scenejs\";\n// set(\"opacity\", [0, 1, 0], {duration: 2});\nScene.set(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\nScene.blink({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function set(property: string | string[], values: any[], options: StateInterface) {\n  const item = new SceneItem({}, options);\n  const length = values.length;\n\n  for (let i = 0; i < length; ++i) {\n    item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n  }\n  return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof presets\n * @func zoomIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {set, zoomIn} from \"scenejs\";\n// zoomIn({duration: 2});\nScene.zoomIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof presets\n * @func zoomOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {zoomOut} from \"scenejs\";\n// zoomOut({duration: 2});\nScene.zoomOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof presets\n * @func wipeIn\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeIn} from \"scenejs\";\n// wipeIn({property: \"left\", duration: 2});\nScene.wipeIn({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof presets\n * @func wipeOut\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeOut} from \"scenejs\";\n// wipeOut({property: \"left\", duration: 2});\nScene.wipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func transition\n * @param {Scene.SceneItem} item1 - Item that end effect\n * @param {Scene.SceneItem} item2 - Item that start effect\n * @param {AnimatorOptions} options\n * @param {object} options.from The starting properties of item1 and end properties of item2\n * @param {object} options.to The starting properties of item2 and end properties of item1\n * @param {number} options.duration animation's duration\n * @param {number} [options.time] start time of item1 <br/> <strong>default: item1.getDuration() - duration</strong>\n * @example\n// import {transition} from \"scenejs\";\ntransition(item1, item2, {\n\tfrom: {\n\t\topacity: 1,\n\t},\n\tto: {\n\t\topacity: 0,\n\t},\n\tduration: 0.1,\n});\n\n// Same\nitem1.set({\n\t[item1.getDuration() - 0.1]: {\n\t\topacity: 1,\n\t},\n\t[item1.getDuration()]: {\n\t\topacity: 0,\n\t}\n});\nitem2.set({\n\t0: {\n\t\topacity: 0,\n\t},\n\t0.1: {\n\t\topacity: 1,\n\t}\n});\n */\nexport function transition(item1: SceneItem, item2: SceneItem, {\n  from,\n  to,\n  duration = item1.getDuration(),\n  time = Math.max(item1.getDuration() - duration, 0),\n}: { from: ObjectInterface<any>, to: ObjectInterface<any>, duration?: number, time: number }) {\n  item1.set({\n    [time]: from,\n    [time + duration]: to,\n  });\n  item2.set({\n    0: to,\n    [duration]: from,\n  });\n}\n\n/**\n * Make a fade in effect.\n * @memberof presets\n * @func fadeIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeIn} from \"scenejs\";\n// fadeIn({duration: 2});\nScene.fadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof presets\n * @func fadeOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeOut} from \"scenejs\";\n// fadeOut({duration: 2});\nScene.fadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof presets\n * @func blink\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {blink} from \"scenejs\";\n// blink({duration: 2});\nScene.blink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to, from], arguments[0]);\n}\n","import Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport Frame from \"./Frame\";\nimport Keyframes from \"./Keyframes\";\nimport PropertyObject from \"./PropertyObject\";\nimport Animator from \"./Animator\";\nimport * as _presets from \"./presets\";\n\n/**\n* version info\n* @name Scene.VERSION\n* @memberof Scene\n* @static\n* @type {string}\n* @example\n* Scene.VERSION // #__VERSION__#\n*/\nexport const VERSION: string = \"#__VERSION__#\";\nexport { SceneItem, Frame, Animator, Keyframes, PropertyObject };\nexport { bezier, EASE_IN_OUT, EASE_IN, EASE_OUT, EASE, LINEAR, steps, STEP_START, STEP_END } from \"./easing\";\nexport { set, transition, wipeIn, wipeOut, fadeIn, fadeOut, blink, zoomIn, zoomOut} from \"./presets\";\nexport { OPTIONS, EVENTS } from \"./consts\";\nexport { setRole, setAlias } from \"./utils\";\nexport { Scene as default };\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","PREFIX","TIMING_FUNCTION","ROLES","transform","filter","attribute","ALIAS","easing","FIXED","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","ITERATION_TIME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","ITERATION","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","FUNCTION","PROPERTY","OPTIONS","EVENTS","prefixes","checkProperties","property","styles","document","body","documentElement","style","name","RGB","RGBA","HSL","HSLA","TRANSFORM","FILTER","ANIMATION","KEYFRAMES","replace","isUndefined","value","isObject","isArray","isString","splitSpace","text","matches","match","splitComma","map","str","trim","splitBracket","exec","prefix","suffix","splitUnit","unit","NaN","parseFloat","camelize","all","letter","toUpperCase","decamelize","letter2","toLowerCase","COLOR_MODELS","cutHex","hex","charAt","substring","hexToRGBA","h","parseInt","g","a","isNaN","hex3to6","arr","join","hslToRGBA","hsl","s","l","Math","floor","abs","x","m","rgb","result","round","stringToRGBA","color","indexOf","_a","colorArr","hasClass","element","className","classList","contains","RegExp","addClass","add","removeClass","remove","reg","fromCSS","elements","properties","Element","cssObject","window","getComputedStyle","events","callback","on","forEach","func","_this","event","push","callbacks","index","splice","_i","data","type","currentTarget","apply","cubic","y1","y2","t","t2","solveFromX","x1","x2","solveX","dx","bezier","max","min","easingName","steps","count","position","time","level","STEP_START","STEP_END","LINEAR","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","options","model","separator","setOptions","init","assign","v","PropertyObject","clone","toValue","split","setAlias","alias","setRole","names","isProperty","isFixedProperty","roles","fixed","getType","toFixed","num","isInProperties","args","isCheckTrue","role","isRole","isFixed","isPausedCSS","item","state","playCSS","getPlayState","exportCSS","addPlayClass","isEnded","setTime","el","addAnimationEvent","setState","setPlayState","trigger","duration","getDuration","isZeroDuration","isFinite","animationend","finish","removeEventListener","animationiteration","elapsedTime","currentTime","iterationCount","setCurrentIterationCount","addEventListener","lastTime","GetterSetter","getter","setter","parent","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","currTime","Date","now","timeToCall","id","setTimeout","isDirectionReverse","currentIterationCount","iteraiontCount","direction","setters","getters","tslib_1","_super","delay","fillMode","playSpeed","iterationTime","tickTime","prevTime","playState","curveArray","setEasing","setDuration","Infinity","getActiveDuration","getTime","animator","play","setTickTime","tick","end","pause","isTick","activeDuration","getUnitTime","calculateIterationTime","isDelay","getIterationTime","getIterationCount","object","passIterationCount","currentIterationTime","setIterationTime","isReverse","isForwards","Animator","EventTrigger","splitStyle","obj","toPropertyObject","arrayToColorObject","stringToBracketObject","afterModel","getOption","arrayToPropertyObject","stringToColorObject","values","toObject","size","get","toInnerProperties","arrObj","isPropertyObject","merge","to","from","getValue","slice","set","raw","params","undefined","_set","Frame","frame","frameProperties","toCSSObject","cssArray","getNames","stack","concat","pop","updateFrame","times","items","originalDuration","ratio","time2","addTime","removeTime","pushIndex","dotArray","a1","a2","b1","b2","v1","dot","dotColor","color1","color2","value1","value2","model1","model2","colorModel","dotObject","a1Type","type1","type2","isFunction1","isFunction2","r1","r2","v2","dotValue","nextTime","prevValue","nextValue","toId","makeId","selector","random","checkElement","querySelector","makeAnimationProperties","keyframes","Keyframes","load","sceneId","getId","setAttribute","SceneItem","getDelay","realTime_1","keys","values_1","frames_1","getEasingName","getEasing","newFrame","getFrame","update","unshiftTime","firstFrame","unshift","prepend","setElement","querySelectorAll","setId","parentEasing","_animate","isNumber","setFrame","has","fromTime","toTime","copyFrame","mergeFrame","toFrame","left","right","realEasing","_getEasing","_getNowValue","realTime","setSelector","isStartZero","frames","isShuffle","totalDuration","start","j","threshold","keyvalue","keytime","getNowFrame","parentDuration","_getId","isParent","cssText","timingFunction","css","_toKeyframes","styleElement","toCSS","innerText","insertAdjacentHTML","pauseCSS","isPaused","endCSS","hasName","nowEasing","lastCSS","delayCSS","usePrevValue","prevFrame","nextFrame","attributes","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","setItem","animtionElement","isSelector","Scene","newItem","_","animate","zoomIn","_b","_c","zoomOut","wipeIn","_d","wipeOut","transition","item1","item2","_e","fadeIn","fadeOut","blink","VERSION"],"mappings":"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"}