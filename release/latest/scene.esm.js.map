{"version":3,"file":"scene.esm.js","sources":["../src/consts.ts","../src/EventTrigger.ts","../src/easing.ts","../src/PropertyObject.ts","../src/utils.ts","../src/Animator.ts","../src/utils/property.ts","../src/Frame.ts","../src/Keyframes.ts","../src/utils/dot.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts"],"sourcesContent":["import { ObjectInterface } from \"@daybrush/utils\";\nimport { RoleInterface, OptionType, EventType } from \"./types\";\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleInterface = { transform: {}, filter: {}, attribute: {} };\nexport const ALIAS: ObjectInterface<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { \"animation-timing-function\": true, \"contents\": true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {$ts:OptionType}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {$ts:EventType}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n","import { isObject, isArray } from \"@daybrush/utils\";\nimport { EventInterface, CallbackType, EventParamterType, eachObjectF, eachArrayF } from \"fjx\";\n\n/**\n* attach and trigger event handlers.\n*/\nclass EventTrigger implements EventInterface {\n  public events: { [name: string]: CallbackType[] };\n  /**\n\t* @example\nconst et = new Scene.EventTrigger();\nconst scene = new Scene();\n\nscene.on(\"call\", e => {\n\tconsole.log(e.param);\n});\net.on(\"call\", e => {\n\tconsole.log(e.param);\n});\nscene.trigger(\"call\", {param: 1});\net.trigger(\"call\", {param: 1});\n\t */\n  constructor() {\n    this.events = {};\n  }\n  public _on(name: string | EventParamterType, callback?: CallbackType | CallbackType[], once?: boolean) {\n    const events = this.events;\n\n    if (isObject(name)) {\n      eachObjectF((f, i) => {\n        this._on(i, f, once);\n      }, name);\n      return;\n    }\n    if (!(name in events)) {\n      events[name] = [];\n    }\n    if (!callback) {\n      return;\n    }\n    if (isArray(callback)) {\n      eachArrayF(func => this._on(name, func, once), callback);\n      return;\n    }\n    const event = events[name];\n    event.push(once ? function callback2(...args) {\n      callback(...args);\n      this.off(name, callback2);\n    } : callback);\n  }\n  /**\n\t* Attach an event handler function for one or more events to target\n\t* @param - event's name\n\t* @param - function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function() {\n\tconsole.log(\"animate\");\n});\n\ntarget.trigger(\"animate\");\n\n  */\n  public on(name: string | EventParamterType, callback?: CallbackType | CallbackType[]) {\n    this._on(name, callback);\n    return this;\n  }\n  /**\n\t* Dettach an event handler function for one or more events to target\n\t* @param - event's name\n\t* @param -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\nconst callback = function() {\n\tconsole.log(\"animate\");\n};\ntarget.on(\"animate\", callback);\n\ntarget.off(\"animate\", callback);\ntarget.off(\"animate\");\n\n\t*/\n  public off(name?: string, callback?: CallbackType) {\n    if (!name) {\n      this.events = {};\n    } else if (!callback) {\n      this.events[name] = [];\n    } else {\n      const callbacks = this.events[name];\n\n      if (!callbacks) {\n        return this;\n      }\n      const index = callbacks.indexOf(callback);\n\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n  /**\n\t* execute event handler\n\t* @param - event's name\n\t* @param - event handler's additional parameter\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function(a1, a2) {\n\tconsole.log(\"animate\", a1, a2);\n});\n\ntarget.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n\t*/\n  public trigger(name: string, ...data: any[]) {\n    const events = this.events;\n\n    if (!(name in events)) {\n      return this;\n    }\n    const event = events[name];\n\n    if (data.length) {\n      const target = data[0];\n\n      target.type = name;\n      target.currentTarget = this;\n      !target.target && (target.target = this);\n    }\n    eachArrayF(callback => {\n      callback.apply(this, data);\n    }, event);\n\n    return this;\n  }\n  public once(name: string | EventParamterType, callback?: CallbackType | CallbackType[]) {\n    this._on(name, callback, true);\n    return this;\n  }\n}\nexport default EventTrigger;\n","/**\n * @typedef\n */\nexport interface EasingFunctionInterface extends Function {\n  easingName?: string;\n}\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunctionInterface = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunctionInterface = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import { OBJECT, STRING } from \"@daybrush/utils\";\n\n/**\n * @typedef\n */\ninterface PropertyObjectInterface {\n  prefix?: string;\n  suffix?: string;\n  model?: string;\n  type?: string;\n  separator?: string;\n}\n/**\n* Make string, array to PropertyObject for the dot product\n*/\nclass PropertyObject {\n  public value: any[];\n  public options: PropertyObjectInterface;\n\n  /**\n\t* @param - This value is in the array format.\n\t* @param - options\n\t* @example\nvar obj = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\t */\n  constructor(value: string | any[], options?: PropertyObjectInterface) {\n    this.options = {\n      prefix: \"\",\n      suffix: \"\",\n      model: \"\",\n      type: \"\",\n      separator: \",\",\n    };\n    options && this.setOptions(options);\n    this.init(value);\n  }\n  public setOptions(newOptions: PropertyObjectInterface) {\n    const options = this.options;\n\n    for (const name in newOptions) {\n      options[name as keyof PropertyObjectInterface] = newOptions[name as keyof PropertyObjectInterface];\n    }\n    options && (this.options = {...this.options, ...options});\n    return this;\n  }\n  public getOption(name: keyof PropertyObjectInterface) {\n    return this.options[name];\n  }\n  /**\n\t* the number of values.\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.length);\n// 3\n\t */\n  public size() {\n    return this.value.length;\n  }\n  /**\n\t* retrieve one of values at the index\n\t* @param {Number} index - index\n\t* @return {Object} one of values at the index\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.get(0));\n// 1\n\t */\n  public get(index: number) {\n    return this.value[index];\n  }\n  /**\n\t* Set the value at that index\n\t* @param {Number} index - index\n\t* @param {Object} value - text, a number, object to set\n\t* @return {PropertyObject} An instance itself\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nobj1.set(0, 2);\nconsole.log(obj1.toValue());\n// 2,2,3\n\t */\n  public set(index: number, value: any) {\n    this.value[index] = value;\n    return this;\n  }\n  /**\n\t* create a copy of an instance itself.\n\t* @return {PropertyObject} clone\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nconst obj2 = obj1.clone();\n\t */\n  public clone(): PropertyObject {\n    const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n    return new PropertyObject(arr, this.options);\n  }\n  /**\n\t* Make Property Object to String\n\t* @return {String} Make Property Object to String\n\t* @example\n//rgba(100, 100, 100, 0.5)\nconst obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\",\n});\nconsole.log(obj4.toValue());\n// \"rgba(100,100,100,0.5)\"\n\t*/\n  public toValue(): string {\n    return this.options.prefix + this.join() + this.options.suffix;\n  }\n  /**\n\t* Make Property Object's array to String\n\t* @return {String} Join the elements of an array into a string\n\t* @example\n\t//rgba(100, 100, 100, 0.5)\n\tvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\t\"separator\" : \",\",\n\t\t\"prefix\" : \"rgba(\",\n\t\t\"suffix\" : \")\"\n\t});\n\tobj4.join();  // =>   \"100,100,100,0.5\"\n\t */\n  public join() {\n    return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.options.separator);\n  }\n  /**\n\t* executes a provided function once per array element.\n\t* @param {Function} callback - Function to execute for each element, taking three arguments\n\t* @param {All} [callback.currentValue] The current element being processed in the array.\n\t* @param {Number} [callback.index] The index of the current element being processed in the array.\n\t* @param {Array} [callback.array] the array.\n\t* @return {PropertyObject} An instance itself\n\t* @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n\t* @example\n//rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\nobj4.forEach(t => {\n\tconsole.log(t);\n});  // =>   \"100,100,100,0.5\"\n\t*/\n  public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n    this.value.forEach(func);\n    return this;\n  }\n  private init(value: string | any[]) {\n    const type = typeof value;\n\n    if (type === STRING) {\n      this.value = (value as string).split(this.options.separator);\n    } else if (type === OBJECT) {\n      this.value = (value as any[]);\n    } else {\n      this.value = [value];\n    }\n    return this;\n  }\n}\nexport default PropertyObject;\n","import { ROLES, MAXIMUM, FIXED, ALIAS,\n  PAUSED, RUNNING, PLAY, ENDED, PREFIX } from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport {\n  isArray, ANIMATION, ARRAY, OBJECT,\n  PROPERTY, STRING, NUMBER, IS_WINDOW, ObjectInterface,\n} from \"@daybrush/utils\";\n\nexport function isPropertyObject(value: any): value is PropertyObject {\n  return value instanceof PropertyObject;\n}\nexport function setAlias(name: string, alias: string[]) {\n  ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n  const length = names.length;\n  let roles: any = ROLES;\n  let fixed: any = FIXED;\n\n  for (let i = 0; i < length - 1; ++i) {\n    !roles[names[i]] && (roles[names[i]] = {});\n    roles = roles[names[i]];\n    if (isFixedProperty) {\n      !fixed[names[i]] && (fixed[names[i]] = {});\n      fixed = fixed[names[i]];\n    }\n  }\n  isFixedProperty && (fixed[names[length - 1]] = true);\n  roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n  const type = typeof value;\n\n  if (type === OBJECT) {\n    if (isArray(value)) {\n      return ARRAY;\n    } else if (isPropertyObject(value)) {\n      return PROPERTY;\n    }\n  } else if (type === STRING || type === NUMBER) {\n    return \"value\";\n  }\n  return type;\n}\nexport function toFixed(num: number) {\n  return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function isInProperties(roles: ObjectInterface<any>, args: any[], isCheckTrue?: boolean) {\n  const length = args.length;\n  let role: any = roles;\n\n  if (length === 0) {\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    if (role === true) {\n      return false;\n    }\n    role = role[args[i]];\n    if (!role || (!isCheckTrue && role === true)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isRole(args: any[], isCheckTrue?: boolean) {\n  return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: any[]) {\n  return isInProperties(FIXED, args, true);\n}\n\nexport interface IterationInterface {\n  currentTime: number;\n  iterationCount: number;\n  elapsedTime: number;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n  return item.state.playCSS && item.getPlayState() === PAUSED;\n}\nexport function exportCSS(id: number | string, css: string) {\n  const styleId = `${PREFIX}STYLE_${toId(id)}`;\n  const styleElement: HTMLElement = document.querySelector(`#${styleId}`);\n\n  if (styleElement) {\n    styleElement.innerText = css;\n  } else {\n    document.body.insertAdjacentHTML(\"beforeend\",\n      `<style id=\"${styleId}\">${css}</style>`);\n  }\n}\nexport function makeId(selector?: boolean) {\n  for (; ;) {\n    const id = `${Math.floor(Math.random() * 10000000)}`;\n\n    if (!IS_WINDOW || !selector) {\n      return id;\n    }\n    const checkElement = document.querySelector(`[data-scene-id=\"${id}\"]`);\n\n    if (!checkElement) {\n      return id;\n    }\n  }\n}\nexport function getRealId(item: Scene | SceneItem) {\n  return item.state.id || item.setId().getId();\n}\nexport function toId(text: number | string) {\n  return `${text}`.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nexport function playCSS(item: Scene | SceneItem, isExportCSS: boolean, properties = {}) {\n  if (!ANIMATION || item.getPlayState() === RUNNING) {\n    return;\n  }\n  if (isPausedCSS(item)) {\n    item.addPlayClass(true, properties);\n  } else {\n    if (item.isEnded()) {\n      item.setTime(0);\n    }\n    isExportCSS && item.exportCSS();\n    const el = item.addPlayClass(false, properties);\n\n    if (!el) {\n      return;\n    }\n    !item.state.peusdo && addAnimationEvent(item, el);\n    item.setState({ playCSS: true });\n  }\n  item.setPlayState(RUNNING);\n  item.trigger(PLAY);\n}\n\nexport function addAnimationEvent(item: Scene | SceneItem, el: HTMLElement) {\n  const duration = item.getDuration();\n  const isZeroDuration = !duration || !isFinite(duration);\n\n  const animationend = () => {\n    if (!isZeroDuration) {\n      item.setState({ playCSS: false });\n      item.finish();\n    }\n  };\n  item.on(ENDED, () => {\n    el.removeEventListener(\"animationend\", animationend);\n    el.removeEventListener(\"animationiteration\", animationiteration);\n  });\n  const animationiteration = ({elapsedTime}: any) => {\n    const currentTime = elapsedTime;\n    const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n    item.state.currentTime = currentTime;\n    item.setCurrentIterationCount(iterationCount);\n  };\n  el.addEventListener(\"animationend\", animationend);\n  el.addEventListener(\"animationiteration\", animationiteration);\n}\n","import {\n  THRESHOLD,\n  ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n  ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n  DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED, RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE } from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, EasingFunctionInterface } from \"./easing\";\nimport { toFixed } from \"./utils\";\nimport { splitUnit, isString, camelize, requestAnimationFrame, ObjectInterface } from \"@daybrush/utils\";\n\nfunction GetterSetter<T extends { new(...args: any[]): {} }>(\n  getter: string[], setter: string[], parent: string) {\n  return (constructor: T) => {\n    const prototype = constructor.prototype;\n\n    getter.forEach(name => {\n      prototype[camelize(`get ${name}`)] = function() {\n        return this[parent][name];\n      };\n    });\n    setter.forEach(name => {\n      prototype[camelize(`set ${name}`)] = function(value: any) {\n        this[parent][name] = value;\n        return this;\n      };\n    });\n  };\n}\n\n/**\n * @typedef\n */\nexport type FillModeType = \"forwards\" | \"backwards\" | \"both\";\n/**\n * @typedef\n */\nexport type IterationCountType = number | \"infinite\";\n/**\n * @typedef\n */\nexport type EasingType = 0 | EasingFunctionInterface;\n/**\n * @typedef\n */\nexport type DirectionType = \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\";\n/**\n * @typedef\n */\nexport type PlayStateType = \"paused\" | \"running\";\n\nexport interface StateInterface {\n  id?: number | string;\n  easing?: EasingType;\n  easingName?: string;\n  iterationCount?: IterationCountType;\n  delay?: number;\n  fillMode?: FillModeType;\n  direction?: DirectionType;\n  playSpeed?: number;\n  iterationTime?: number;\n  currentTime?: number;\n  tickTime?: number;\n  currentIterationCount?: number;\n  prevTime?: number;\n  playState?: PlayStateType;\n  duration?: number;\n  [key: string]: any;\n}\nexport function isDirectionReverse(currentIterationCount: number,\n                                   iteraiontCount: IterationCountType, direction: DirectionType) {\n  if (direction === REVERSE) {\n    return true;\n  } else if (iteraiontCount !== \"infinite\" && currentIterationCount === iteraiontCount && iteraiontCount % 1 === 0) {\n    return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n  }\n  return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} StateInterface The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n\nconst setters = [ITERATION_COUNT, DELAY, FILL_MODE,\n  DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n/**\n* play video, animation, the others\n* @extends EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n*/\n@GetterSetter(getters, setters, \"state\")\nclass Animator extends EventTrigger {\n  public state: StateInterface;\n  public options: ObjectInterface<any>;\n\n  /**\n   * @param - animator's options\n   * @example\nconst animator = new Animator({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n   */\n  constructor(options?: StateInterface) {\n    super();\n    this.options = {};\n    this.state = {\n      id: \"\",\n      easing: 0,\n      easingName: \"linear\",\n      iterationCount: 1,\n      delay: 0,\n      fillMode: \"forwards\",\n      direction: NORMAL,\n      playSpeed: 1,\n      currentTime: 0,\n      iterationTime: -1,\n      currentIterationCount: 0,\n      tickTime: 0,\n      prevTime: 0,\n      playState: PAUSED,\n      duration: 0,\n    };\n    this.setOptions(options);\n  }\n  /**\n\t* set animator's easing.\n\t* @param curverArray - The speed curve of an animation.\n\t* @return {Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n\t*/\n  public setEasing(curveArray: [number, number, number, number] | EasingFunctionInterface): this {\n    const easing = Array.isArray(curveArray) ?\n      bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]) : curveArray;\n    const easingName = easing[EASING_NAME] || \"linear\";\n\n    this.setState({ easing, easingName });\n    return this;\n  }\n  /**\n\t* set animator's options.\n\t* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n\t* @param - animator's options\n\t* @return {Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n\t*/\n  public setOptions(options: StateInterface = {}): this {\n    for (const name in options) {\n      const value = options[name];\n\n      if (name === EASING) {\n        this.setEasing(value);\n        continue;\n      } else if (name === DURATION) {\n        value && this.setDuration(value);\n        continue;\n      }\n      ((name in this.state ? this.state : this.options) as StateInterface)[name] = value;\n    }\n\n    return this;\n  }\n  /**\n\t* Get the animator's total duration including delay\n\t* @return {number} Total duration\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getTotalDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.state[DELAY] + this.getActiveDuration();\n  }\n  /**\n\t* Get the animator's total duration excluding delay\n\t* @return {number} Total duration excluding delay\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getActiveDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.getDuration() * (this.state[ITERATION_COUNT] as number);\n  }\n  /**\n\t* Check if the animator has reached the end.\n\t* @return {boolean} ended\n\t* @example\nanimator.isEnded(); // true or false\n\t*/\n  public isEnded(): boolean {\n    if (this.state.tickTime === 0 && this.state[PLAY_STATE] === PAUSED) {\n      return true;\n    } else if (this.getTime() < this.getActiveDuration()) {\n      return false;\n    }\n    return true;\n  }\n  /**\n\t*Check if the animator is paused:\n\t* @return {boolean} paused\n\t* @example\nanimator.isPaused(); // true or false\n\t*/\n  public isPaused(): boolean {\n    return this.state[PLAY_STATE] === PAUSED;\n  }\n  public setNext(animator: Animator): this {\n    this.on(ENDED, () => {\n      animator.play();\n    });\n    return this;\n  }\n  /**\n\t* play animator\n\t* @return {Animator} An instance itself.\n\t*/\n  public play() {\n    this.state[PLAY_STATE] = RUNNING;\n    if (this.isEnded()) {\n      this.setTickTime(0);\n    }\n    this.state.tickTime = this.getTime();\n\n    requestAnimationFrame((time: number) => {\n      this.state.prevTime = time;\n      this.tick(time);\n    });\n    /**\n\t\t * This event is fired when play animator.\n\t\t * @event Animator#play\n\t\t */\n    this.trigger(PLAY);\n\n    return this;\n  }\n  /**\n\t* pause animator\n\t* @return {Animator} An instance itself.\n\t*/\n  public pause(): this {\n    this.state[PLAY_STATE] = PAUSED;\n    /**\n\t\t * This event is fired when animator is paused.\n\t\t * @event Animator#paused\n\t\t */\n    this.trigger(PAUSED);\n    return this;\n  }\n  /**\n\t * end animator\n\t * @return {Animator} An instance itself.\n\t*/\n  public finish() {\n    this.state.tickTime = 0;\n    this.setTime(0);\n    this.end();\n    return this;\n  }\n  /**\n\t * end animator\n\t * @return {Animator} An instance itself.\n\t*/\n  public end() {\n    this.pause();\n    /**\n\t\t * This event is fired when animator is ended.\n\t\t * @event Animator#ended\n\t\t */\n    this.trigger(ENDED);\n    return this;\n  }\n  /**\n\t* set currentTime\n\t* @param {Number|String} time - currentTime\n\t* @return {Animator} An instance itself.\n\t* @example\n\nanimator.setTime(\"from\"); // 0\nanimator.setTime(\"to\"); // 100%\nanimator.setTime(\"50%\");\nanimator.setTime(10);\nanimator.getTime() // 10\n\t*/\n  public setTime(time: number | string, isTick?: boolean) {\n    const activeDuration = this.getActiveDuration();\n    let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n    this.state.tickTime = this.state.delay + currentTime;\n    if (currentTime < 0) {\n      currentTime = 0;\n    } else if (currentTime > activeDuration) {\n      currentTime = activeDuration;\n    }\n    this.state.currentTime = currentTime;\n    this.calculateIterationTime();\n\n    if (this.isDelay()) {\n      return this;\n    }\n    /**\n\t\t * This event is fired when the animator updates the time.\n\t\t * @event Animator#timeupdate\n\t\t * @param {Object} param The object of data to be sent to an event.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t */\n    this.trigger(TIMEUPDATE, {\n      currentTime,\n      time: this.getIterationTime(),\n      iterationCount: this.getIterationCount(),\n    });\n\n    return this;\n  }\n  public getState(name: string): any {\n    return this.state[name];\n  }\n  public setState(object: StateInterface) {\n    for (const name in object) {\n      this.state[name] = object[name];\n    }\n    return this;\n  }\n  /**\n\t* Get the animator's current time\n\t* @return {number} current time\n\t* @example\nanimator.getTime();\n\t*/\n  public getTime(): number {\n    return this.state.currentTime;\n  }\n  public getUnitTime(time: string | number) {\n    if (isString(time)) {\n      const duration = this.getDuration() || 100;\n\n      if (time === \"from\") {\n        return 0;\n      } else if (time === \"to\") {\n        return duration;\n      }\n      const { unit, value } = splitUnit(time);\n\n      if (unit === \"%\") {\n        !this.getDuration() && (this.state.duration = duration);\n        return parseFloat(time) / 100 * duration;\n      } else if (unit === \">\") {\n        return value + THRESHOLD;\n      } else {\n        return value;\n      }\n    } else {\n      return toFixed(time);\n    }\n  }\n  /**\n\t * Check if the current state of animator is delayed.\n\t * @return {boolean} check delay state\n\t */\n  public isDelay() {\n    const { delay, tickTime } = this.state;\n\n    return delay > 0 && (tickTime < delay);\n  }\n  public setCurrentIterationCount(iterationCount: number): this {\n    const state = this.state;\n    const passIterationCount = Math.floor(iterationCount);\n\n    if (state.currentIterationCount < passIterationCount) {\n      /**\n\t\t\t* The event is fired when an iteration of an animation ends.\n\t\t\t* @event Animator#iteration\n\t\t\t* @param {Object} param The object of data to be sent to an event.\n\t\t\t* @param {Number} param.currentTime The total time that the animator is running.\n\t\t\t* @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t\t*/\n      this.trigger(\"iteration\", {\n        currentTime: state.currentTime,\n        iterationCount: passIterationCount,\n      });\n    }\n    state.currentIterationCount = iterationCount;\n    return this;\n  }\n  protected calculateIterationTime() {\n    const { iterationCount, fillMode, direction } = this.state;\n    const duration = this.getDuration();\n    const time = this.getTime();\n    const currentIterationCount = duration === 0 ? 0 : time / duration;\n    let currentIterationTime = duration ? time % duration : 0;\n\n    if (!duration) {\n      this.setIterationTime(0);\n      return this;\n    }\n    this.setCurrentIterationCount(currentIterationCount);\n\n    // direction : normal, reverse, alternate, alternate-reverse\n    // fillMode : forwards, backwards, both, none\n    const isReverse = isDirectionReverse(currentIterationCount, iterationCount, direction);\n\n    const isFiniteDuration = isFinite(duration);\n    if (isFiniteDuration && isReverse) {\n      currentIterationTime = duration - currentIterationTime;\n    }\n    if (isFiniteDuration && iterationCount !== INFINITE) {\n      const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n      // fill forwards\n      if (currentIterationCount >= iterationCount) {\n        currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n        isReverse && (currentIterationTime = duration - currentIterationTime);\n      }\n    }\n    this.setIterationTime(currentIterationTime);\n    return this;\n  }\n  protected tick(now: number) {\n    const state = this.state;\n    const { playSpeed, prevTime } = state;\n    const currentTime = this.state.tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n    state.prevTime = now;\n    this.setTickTime(currentTime);\n    if (this.isEnded()) {\n      this.end();\n      return;\n    }\n    if (state[PLAY_STATE] === PAUSED) {\n      return;\n    }\n\n    requestAnimationFrame((time: number) => {\n      this.tick(time);\n    });\n  }\n  private setTickTime(time: number) {\n    this.setTime(time - this.state.delay, true);\n  }\n}\n\n/**\n * Get a delay for the start of an animation.\n * @method Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Animator#setDelay\n * @param {number} delay - delay\n * @return {Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#getFillMode\n * @return {FillModeType} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#setFillMode\n * @param {FillModeType} fillMode - fillMode\n * @return {Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Animator#getIterationCount\n * @return {IterationCountType} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Animator#setIterationCount\n * @param {IterationCountType} iterationCount - iterationCount\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#getDirection\n * @return {DirectionType} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#setDirection\n * @param {DirectionType} direction - direction\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Animator#getPlayState\n * @return {PlayStateType} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Animator#setPlayState\n * @param {PlayStateType} playState - playState\n * @return {Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Animator#setDuration\n * @param {number} duration - duration\n * @return {Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Animator#getEasing\n * @return {EasingType} easing\n */\n/**\n * Get the speed curve's name\n * @method Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\ninterface Animator {\n  getIterationTime(): number;\n  setIterationTime(time: number): this;\n  setDelay(delay: number): this;\n  getDelay(): number;\n  setFillMode(fillMode: FillModeType): this;\n  getFillMode(): FillModeType;\n  setIterationCount(iterationCount: IterationCountType): this;\n  getIterationCount(): IterationCountType;\n  setDirection(direction: DirectionType): this;\n  getDirection(): DirectionType;\n  setPlayState(playState: PlayStateType): this;\n  getPlayState(): PlayStateType;\n  setPlaySpeed(playSpeed: number): this;\n  getPlaySpeed(): number;\n  setDuration(duration: number): this;\n  getDuration(): number;\n  getEasing(): EasingType;\n  getEasingName(): string;\n}\nexport default Animator;\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {\n  COLOR_MODELS, isString,\n  splitComma, splitSpace, stringToRGBA,\n  RGBA, splitBracket, ObjectInterface\n} from \"@daybrush/utils\";\n\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const obj: ObjectInterface<string | PropertyObject> = {};\n  let length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      --length;\n      continue;\n    }\n    obj[matches[1].trim()] = toPropertyObject(matches[2].trim());\n  }\n  return {styles: obj, length};\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(text: string) {\n  // [prefix, value, other]\n  const { prefix: model, value, suffix: afterModel } = splitBracket(text);\n\n  if (typeof value === \"undefined\") {\n    return text;\n  }\n  if (COLOR_MODELS.indexOf(model) !== -1) {\n    return arrayToColorObject(stringToRGBA(text));\n  }\n  // divide comma(,)\n  const obj = toPropertyObject(value);\n\n  let arr = [value];\n  let separator = \",\";\n  let prefix = `${model}(`;\n  let suffix = `)${afterModel}`;\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.getOption(\"separator\");\n    arr = obj.value;\n    prefix += obj.getOption(\"prefix\");\n    suffix = obj.getOption(\"suffix\") + suffix;\n  }\n  return new PropertyObject(arr, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  const result = stringToRGBA(value);\n\n  return result ? arrayToColorObject(result) : value;\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: any[]): PropertyObject;\nexport function toPropertyObject(value: ObjectInterface<any>): ObjectInterface<any>;\nexport function toPropertyObject(value: string): PropertyObject | string;\nexport function toPropertyObject(value: string | ObjectInterface<any> | any[]) {\n  if (!isString(value)) {\n    if (Array.isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: ObjectInterface<any> = {}) {\n  const model = object.getOption(\"model\");\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => toObject(obj, result));\n  }\n  return result;\n}\n","import {\n  ALIAS, TIMING_FUNCTION\n} from \"./consts\";\nimport { isRole, getType, isPropertyObject } from \"./utils\";\nimport { toPropertyObject, splitStyle, toObject } from \"./utils/property\";\nimport { isObject, isArray, isString,\n  ANIMATION, TRANSFORM, FILTER, PROPERTY, FUNCTION, ARRAY, OBJECT, ObjectInterface } from \"@daybrush/utils\";\nimport { NameType } from \"./types\";\n\nfunction toInnerProperties(obj: ObjectInterface<string>) {\n  if (!obj) {\n    return \"\";\n  }\n  const arrObj = [];\n\n  for (const name in obj) {\n    arrObj.push(`${name.replace(/\\d/g, \"\")}(${obj[name]})`);\n  }\n  return arrObj.join(\" \");\n}\n\n/* eslint-disable */\nfunction clone(target: ObjectInterface<any>, toValue = false) {\n  return merge({}, target, toValue);\n}\nfunction merge(to: ObjectInterface<any>, from: ObjectInterface<any>, toValue = false) {\n  for (const name in from) {\n    const value = from[name];\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n      to[name] = toValue ? value.toValue() : value.clone();\n    } else if (type === FUNCTION) {\n      to[name] = toValue ? getValue([name], value()) : value;\n    } else if (type === ARRAY) {\n      to[name] = value.slice();\n    } else if (type === OBJECT) {\n      if (isObject(to[name]) && !isPropertyObject(to[name])) {\n        merge(to[name], value, toValue);\n      } else {\n        to[name] = clone(value, toValue);\n      }\n    } else {\n      to[name] = from[name];\n    }\n  }\n  return to;\n}\n/* eslint-enable */\n\nfunction getPropertyName(args: NameType[]) {\n  return args[0] in ALIAS ? ALIAS[args[0]] : args;\n}\nfunction getValue(names: NameType[], value: any): any {\n  const type = getType(value);\n\n  if (type === PROPERTY) {\n    return value.toValue();\n  } else if (type === FUNCTION) {\n    if (names[0] !== TIMING_FUNCTION) {\n      return getValue(names, value());\n    }\n  } else if (type === OBJECT) {\n    return clone(value, true);\n  }\n  return value;\n}\n/**\n* Animation's Frame\n*/\nclass Frame {\n  public properties: ObjectInterface<any>;\n  /**\n   * @param - properties\n   * @example\nconst frame = new Scene.Frame({\n\tdisplay: \"none\"\n\ttransform: {\n\t\ttranslate: \"50px\",\n\t\tscale: \"5, 5\",\n\t}\n});\n   */\n  constructor(properties: ObjectInterface<any> = {}) {\n    this.properties = {};\n    this.set(properties);\n  }\n  /**\n\t* get property value\n\t* @param {...Number|String|PropertyObject} args - property name or value\n\t* @example\n\tframe.get(\"display\") // => \"none\", \"block\", ....\n\tframe.get(\"transform\", \"translate\") // => \"10px,10px\"\n\t*/\n  public get(...args: NameType[]) {\n    const value = this.raw(...args);\n\n    return getValue(getPropertyName(args), value);\n  }\n\n  public raw(...args: NameType[]) {\n    let properties = this.properties;\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties)) {\n        return undefined;\n      }\n      properties = properties[params[i]];\n    }\n    return properties;\n  }\n  /**\n\t* remove property value\n\t* @param {...String} args - property name\n\t* @return {Frame} An instance itself\n\t* @example\n\tframe.remove(\"display\")\n\t*/\n  public remove(...args: NameType[]) {\n    let properties = this.properties;\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length - 1; ++i) {\n      if (!isObject(properties)) {\n        return this;\n      }\n      properties = properties[params[i]];\n    }\n    delete properties[params[length - 1]];\n    return this;\n  }\n  /**\n\t* set property\n\t* @param {...Number|String|PropertyObject} args - property names or values\n\t* @return {Frame} An instance itself\n\t* @example\n// one parameter\nframe.set({\n\tdisplay: \"none\",\n\ttransform: {\n\t\ttranslate: \"10px, 10px\",\n\t\tscale: \"1\",\n\t},\n\tfilter: {\n\t\tbrightness: \"50%\",\n\t\tgrayscale: \"100%\"\n\t}\n});\n\n// two parameters\nframe.set(\"transform\", {\n\ttranslate: \"10px, 10px\",\n\tscale: \"1\",\n});\n\n// three parameters\nframe.set(\"transform\", \"translate\", \"50px\");\n  */\n  public set(...args: any[]) {\n    const length = args.length;\n    const params = args.slice(0, -1);\n    const value = args[length - 1];\n\n    if (params[0] in ALIAS) {\n      this._set(ALIAS[params[0]], value);\n    } else if (length === 2 && isArray(params[0])) {\n      this._set(params[0], value);\n    } else if (isObject(value)) {\n      if (isArray(value)) {\n        this._set(params, value);\n      } else if (isPropertyObject(value)) {\n        if (isRole(params)) {\n          this.set(...params, toObject(value));\n        } else {\n          this._set(params, value);\n        }\n      } else if (value instanceof Frame) {\n        this.merge(value);\n      } else {\n        for (const name in value) {\n          this.set(...params, name, value[name]);\n        }\n      }\n    } else if (isString(value)) {\n      if (isRole(params)) {\n        const obj = toPropertyObject(value);\n\n        if (isObject(obj)) {\n          this.set(...params, obj);\n        }\n        return this;\n      } else {\n        const {styles, length: stylesLength} = splitStyle(value);\n\n        for (const name in styles) {\n          this.set(...params, name, styles[name]);\n        }\n        if (stylesLength) {\n          return this;\n        }\n      }\n      this._set(params, value);\n    } else {\n      this._set(params, value);\n    }\n    return this;\n  }\n  /**\n\t* check that has property.\n\t* @param {...String} args - property name\n\t* @example\n\tframe.has(\"property\", \"display\") // => true or false\n\t*/\n  public has(...args: NameType[]) {\n    let properties = this.properties;\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    if (!length) {\n      return false;\n    }\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties) || !(params[i] in properties)) {\n        return false;\n      }\n      properties = properties[params[i]];\n    }\n    return true;\n  }\n  /**\n\t* clone frame.\n\t* @return {Frame} An instance of clone\n\t* @example\n\tframe.clone();\n\t*/\n  public clone() {\n    const frame = new Frame();\n\n    return frame.merge(this);\n  }\n  /**\n\t* merge one frame to other frame.\n\t* @param - target frame.\n\t* @return {Frame} An instance itself\n\t* @example\n\tframe.merge(frame2);\n\t*/\n  public merge(frame: Frame) {\n    const properties = this.properties;\n    const frameProperties = frame.properties;\n\n    if (!frameProperties) {\n      return this;\n    }\n    merge(properties, frameProperties);\n\n    return this;\n  }\n  public toObject() {\n    return clone(this.properties, true);\n  }\n  /**\n\t* Specifies an css object that coverted the frame.\n\t* @return {object} cssObject\n\t*/\n  public toCSSObject() {\n    const properties = this.toObject();\n    const cssObject: ObjectInterface<string> = {};\n\n    for (const name in properties) {\n      if (isRole([name], true)) {\n        continue;\n      }\n      const value = properties[name];\n\n      if (name === TIMING_FUNCTION) {\n        cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n          (isString(value) ? value : value.easingName) || \"initial\";\n        continue;\n      }\n      cssObject[name] = value;\n    }\n    const transform = toInnerProperties(properties.transform);\n    const filter = toInnerProperties(properties.filter);\n\n    TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n    FILTER && filter && (cssObject[FILTER] = filter);\n    return cssObject;\n  }\n  /**\n\t* Specifies an css text that coverted the frame.\n\t* @return {string} cssText\n\t*/\n  public toCSS() {\n    const cssObject = this.toCSSObject();\n    const cssArray = [];\n\n    for (const name in cssObject) {\n      cssArray.push(`${name}:${cssObject[name]};`);\n    }\n    return cssArray.join(\"\");\n  }\n  private _set(args: NameType[], value: any) {\n    let properties = this.properties;\n    const length = args.length;\n\n    for (let i = 0; i < length - 1; ++i) {\n      const name = args[i];\n\n      !(name in properties) && (properties[name] = {});\n      properties = properties[name];\n    }\n    if (!length) {\n      return;\n    }\n    properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n  }\n}\nexport default Frame;\n","import { isInProperties, toFixed } from \"./utils\";\nimport PropertyObject from \"./PropertyObject\";\nimport Frame from \"./Frame\";\nimport { isObject, isArray, ObjectInterface } from \"@daybrush/utils\";\nimport { RoleInterface } from \"./types\";\n\nfunction getNames(names: ObjectInterface<any>, stack: string[]) {\n  let arr: string[][] = [];\n\n  for (const name in names) {\n    stack.push(name);\n\n    if (isObject(names[name])) {\n      arr = arr.concat(getNames(names[name], stack));\n    } else {\n      arr.push(stack.slice());\n    }\n    stack.pop();\n  }\n  return arr;\n}\nfunction updateFrame(names: ObjectInterface<any>, properties: ObjectInterface<any>) {\n  for (const name in properties) {\n    const value = properties[name];\n\n    if (!isObject(value) || isArray(value) || value instanceof PropertyObject) {\n      names[name] = true;\n      continue;\n    }\n    if (!isObject(names[name])) {\n      names[name] = {};\n    }\n    updateFrame(names[name], properties[name]);\n  }\n}\n/**\n* a list of objects in chronological order.\n*/\nclass Keyframes {\n  public times: number[];\n  public items: ObjectInterface<Frame>;\n  public names: RoleInterface;\n  /**\n\t */\n  constructor() {\n    this.times = [];\n    this.items = {};\n    this.names = {};\n  }\n  /**\n\t* A list of names\n\t* @return {} names\n\t* @example\nkeyframes.getNames(); // [[\"a\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n\t*/\n  public getNames(): string[][] {\n    const names = this.names;\n\n    return getNames(names, []);\n  }\n  /**\n\t* Check if keyframes has propery's name\n\t* @param - property's time\n\t* @return {boolean} true: if has property, false: not\n\t* @example\nkeyframes.hasName(\"transform\", \"translate\"); // true or not\n\t*/\n  public hasName(...args: string[]) {\n    return isInProperties(this.names, args, true);\n  }\n  /**\n\t * update property names used in frames.\n\t * @return {Keyframes} An instance itself\n\t */\n  public update() {\n    const items = this.items;\n\n    for (const time in items) {\n      this.updateFrame(items[time]);\n    }\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param - Function to execute for each element, taking three arguments\n\t * @return {Keyframes} An instance itself\n\t */\n  public forEach(callback: (item: any, time: number, items: ObjectInterface<any>) => void) {\n    const times = this.times;\n    const items = this.items;\n\n    times.forEach(time => {\n      callback(items[time], time, items);\n    });\n    return this;\n  }\n  /**\n\t* update property names used in frame.\n\t* @param {Frame} [frame] - frame of that time.\n\t* @return {Keyframes} An instance itself\n\t* @example\nkeyframes.updateFrame(frame);\n\t*/\n  public updateFrame(frame: Frame) {\n    if (!frame) {\n      return this;\n    }\n    const properties = frame.properties;\n    const names = this.names;\n\n    updateFrame(names, properties);\n    return this;\n  }\n  /**\n\t * Get how long an animation should take to complete one cycle.\n\t * @return {number} duration\n\t */\n  public getDuration() {\n    const times = this.times;\n\n    return times.length === 0 ? 0 : times[times.length - 1];\n  }\n  /**\n\t * Set how long an animation should take to complete one cycle.\n\t * @param {number} duration - duration\n\t * @return {Keyframes} An instance itself.\n\t */\n  public setDuration(duration: number, originalDuration: number = this.getDuration()) {\n    const ratio = duration / originalDuration;\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(time => {\n      const time2 = toFixed(time * ratio);\n\n      obj[time2] = items[time];\n\n      return time2;\n    });\n    this.items = obj;\n  }\n  /**\n\t * Set how much time you want to push ahead.\n\t * @param {number} time - time\n\t * @return {Keyframes} An instance itself.\n\t */\n  public unshift(time: number) {\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(t => {\n      const time2 = toFixed(time + t);\n\n      obj[time2] = items[t];\n      return time2;\n    });\n    this.items = obj;\n    return this;\n  }\n  /**\n\t* get size of list\n\t* @return {Number} length of list\n\t*/\n  public size() {\n    return this.times.length;\n  }\n  /**\n\t* add object in list\n\t* @param {number} time - frame's time\n\t* @param {any} object - target\n\t* @return {Keyframes} An instance itself\n\t*/\n  public add(time: number, object: any) {\n    this.items[time] = object;\n    this.addTime(time);\n    return this;\n  }\n  /**\n\t* Check if keyframes has object at that time.\n\t* @param {number} time - object's time\n\t* @return {boolean} true: if has time, false: not\n\t*/\n  public has(time: number) {\n    return time in this.items;\n  }\n  /**\n\t* get object at that time.\n\t* @param {number} time - object's time\n\t* @return {object} object at that time\n\t*/\n  public get(time: number) {\n    return this.items[time];\n  }\n  /**\n\t* remove object at that time.\n\t* @param {number} time - object's time\n\t* @return {Keyframes} An instance itself\n\t*/\n  public remove(time: number) {\n    const items = this.items;\n\n    delete items[time];\n    this.removeTime(time);\n    return this;\n  }\n  private addTime(time: number) {\n    const times = this.times;\n    const length = times.length;\n    let pushIndex = length;\n\n    for (let i = 0; i < length; ++i) {\n      // if time is smaller than times[i], add time to index\n      if (time === times[i]) {\n        return this;\n      } else if (time < times[i]) {\n        pushIndex = i;\n        break;\n      }\n    }\n    this.times.splice(pushIndex, 0, time);\n    return this;\n  }\n  private removeTime(time: number) {\n    const index = this.times.indexOf(time);\n\n    if (index > -1) {\n      this.times.splice(index, 1);\n    }\n    return this;\n  }\n}\nexport default Keyframes;\n","/**\n* @namespace\n* @name Dot\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport { EasingType } from \"../Animator\";\nimport { getType } from \"../utils\";\nimport { toPropertyObject } from \"./property\";\nimport { isArray, splitUnit, PROPERTY, FUNCTION } from \"@daybrush/utils\";\n\n/**\n* The dot product of Arrays\n* @memberof Dot\n* @function dotArray\n* @param {Array} a1 value1\n* @param {Array} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {Array|Object} Array.\n* @example\ndotArray([0, 0, 0, 1],[50, 50, 50, 1],0.5, 0.5);\n// => [25, 25, 25, 1]\n*/\nexport function dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  }\n  if (!isArray(a2)) {\n    return a1;\n  }\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\n/**\n* The dot product of PropertyObject(type=color)\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Dot\n* @function dotColor\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} PropertyObject(type=color).\n* @example\nvar colorObject = ......; //PropertyObject(type=color, model=\"rgba\", value=[254, 254, 254, 1]);\ndotColor(\"#000\",  colorObject, 0.5, 0.5);\n// \"#000\" => PropertyObject(type=color, model=\"rgba\", value=[0, 0, 0, 1]);\n// return => PropertyObject(type=color, model=\"rgba\", value=[127, 127, 127, 1]);\n*/\nexport function dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  if (b2 === 0) {\n    return color2;\n  }\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.getOption(\"model\");\n  const model2 = color2.getOption(\"model\");\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n/**\n* The dot product of Objects\n* @memberof Dot\n* @function dotObject\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} Array with Separator.\n* @example\ndotObject(PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)]),\nPropertyObject([\"9px\", \"solid\", rgba(50, 50, 50, 1)]),\n0.5, 0.5);\n// => PropertyObject([\"5px\", \"solid\", rgba(25, 25, 25, 1)])\n*/\nexport function dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.getOption(\"type\");\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.getOption(\"separator\") || a2.getOption(\"separator\"),\n    prefix: a1.getOption(\"prefix\") || a2.getOption(\"prefix\"),\n    suffix: a1.getOption(\"suffix\") || a2.getOption(\"suffix\"),\n    model: a1.getOption(\"model\") || a2.getOption(\"model\"),\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === \"array\") {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  // split number and unit of the value.\n  const r1 = b1 / (b1 + b2);\n  const r2 = 1 - r1;\n\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = v1.value * r2 + v2.value * r1;\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import Animator, { StateInterface, EasingType, isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n  toFixed,\n  isFixed,\n  playCSS,\n  toId,\n  exportCSS,\n  getRealId,\n  makeId,\n} from \"./utils\";\nimport Keyframes from \"./Keyframes\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n  START_ANIMATION,\n  PREFIX, THRESHOLD,\n  TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, NORMAL, INFINITE,\n  REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n  EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION\n} from \"./consts\";\nimport { isObject, isArray, isUndefined, decamelize,\n  ANIMATION, fromCSS, addClass, removeClass, hasClass,\n  KEYFRAMES, requestAnimationFrame, isFunction, IS_WINDOW, ObjectInterface } from \"@daybrush/utils\";\nimport { NameType } from \"./types\";\n\nfunction makeAnimationProperties(properties: ObjectInterface<string | number>) {\n  const cssArray = [];\n\n  for (const name in properties) {\n    cssArray.push(`${ANIMATION}-${decamelize(name)} : ${properties[name]};`);\n  }\n  return cssArray.join(\"\");\n}\n\ntype ElementsType = HTMLElement[] | NodeListOf<HTMLElement>;\n/**\n* manage Frame Keyframes and play keyframes.\n* @extends Animator\n* @example\nconst item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator {\n  public keyframes: Keyframes;\n  public elements: ElementsType;\n  /**\n\t* @param - properties\n\t* @param - options\n\t* @example\n\tconst item = new SceneItem({\n\t\t0: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\t1: {\n\t\t\tdisplay: \"block\",\n\t\t\topacity: 0,\n\t\t},\n\t\t2: {\n\t\t\topacity: 1,\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: StateInterface) {\n    super();\n    this.keyframes = new Keyframes();\n    this.elements = [];\n    this.load(properties, options);\n  }\n  public getDuration() {\n    return Math.max(this.state[DURATION], this.keyframes.getDuration());\n  }\n  public setDuration(duration: number) {\n    if (duration === 0) {\n      return this;\n    }\n    const originalDuration = this.getDuration();\n\n    if (originalDuration > 0) {\n      this.keyframes.setDuration(duration, originalDuration);\n    }\n    super.setDuration(toFixed(duration));\n    return this;\n  }\n  /**\n\t* set the unique indicator of the item.\n\t* @param {String} [id] - the indicator of the item.\n\t* @return {SceneItem} An instance itself\n\t* @example\nconst item = new SceneItem();\n\nitem.setId(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public setId(id?: number | string) {\n    const elements = this.elements;\n    const length = elements.length;\n\n    this.setState({ id: id || makeId(!!length) });\n    const sceneId = toId(this.getId());\n\n    this.state.selector || (this.state.selector = `[data-scene-id=\"${sceneId}\"]`);\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      elements[i].setAttribute(\"data-scene-id\", sceneId);\n    }\n    return this;\n  }\n  /**\n\t* Specifies the unique indicator of the item.\n\t* @return {String} the indicator of the item.\n\t* @example\nconst item = scene.newItem(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public getId() {\n    return this.state.id;\n  }\n  /**\n\t* Set properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\nconsole.log(item.get(0, \"a\")); // \"b\"\n\t*/\n  public set(time: any, ...args: any[]) {\n    if (isObject(time)) {\n      this.load(time);\n      return this;\n    } else if (args[0]) {\n      if (args[0] instanceof SceneItem) {\n        const item: SceneItem = args[0];\n        const delay = item.getDelay();\n        const realTime = this.getUnitTime(time) + delay;\n        const { keys, values, frames } = item.getAllTimes(!!delay || !this.hasFrame(time));\n        const easing = this.getEasingName() !== item.getEasingName() ? item.getEasing() : 0;\n\n        keys.forEach(t => {\n          this.set(realTime + t, frames[values[t]]);\n        });\n        if (easing) {\n          this.set(realTime + keys[0], EASING, easing);\n          this.set(realTime + keys[keys.length - 1], EASING, \"initial\");\n        }\n        return this;\n      } else if (args.length === 1 && isArray(args[0])) {\n        args[0].forEach((item: any) => {\n          this.set(time, item);\n        });\n        return this;\n      }\n    }\n    const frame = this.newFrame(time);\n\n    frame.set(...args);\n    this.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Get properties of the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} args property's name or properties\n\t* @return {Number|String|PropertyObejct} property value\n\t* @example\nitem.get(0, \"a\"); // item.getFrame(0).get(\"a\");\nitem.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n\t*/\n  public get(time: string | number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    return frame && frame.get(...args);\n  }\n  /**\n\t* remove properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.remove(0, \"a\");\n\t*/\n  public remove(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    frame && frame.remove(...args);\n    this.update();\n    return this;\n  }\n  /**\n\t* Append the item or object at the last time.\n\t* @param - the scene item or item object\n\t* @return An instance itself\n\t* @example\nitem.append(new SceneItem({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n}));\nitem.append({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\nitem.set(item.getDuration(), {\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\n\t*/\n  public append(item: SceneItem | ObjectInterface<any>) {\n    this.set(this.getDuration(), item);\n    return this;\n  }\n  /**\n\t* Push the front frames for the time and prepend the scene item or item object.\n\t* @param - the scene item or item object\n\t* @return An instance itself\n\t*/\n  public prepend(item: SceneItem | ObjectInterface<any>) {\n    if (item instanceof SceneItem) {\n      const delay = item.getDelay();\n      const duration = item.getIterationCount() === INFINITE ? item.getDuration() : item.getActiveDuration();\n      const unshiftTime = duration + delay;\n      const firstFrame = this.keyframes.get(0);\n\n      if (firstFrame) {\n        this.keyframes.remove(0);\n      }\n      this.keyframes.unshift(unshiftTime);\n      this.set(0, item);\n      this.set(unshiftTime + THRESHOLD, firstFrame);\n    } else {\n      this.prepend(new SceneItem(item));\n    }\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize items' keyframes.\n\t* @param {string} selectors - Selectors to find elements in items.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setSelector(\"#id.class\");\n\t*/\n  public setSelector(selector: boolean | string) {\n    const state = this.state;\n\n    state.selector = selector === true ? state.id :\n      (selector || `[data-scene-id=\"${state.id}\"]`);\n\n    const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(state.selector);\n\n    if (matches) {\n      state.selector = matches[1];\n      state.peusdo = matches[2];\n    }\n    IS_WINDOW && this.setElement(document.querySelectorAll(state.selector));\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize item's keyframes.\n\t* @param {Element|Array|string} elements - elements to synchronize item's keyframes.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n\t*/\n  public setElement(elements: HTMLElement | ElementsType) {\n    if (!elements) {\n      return this;\n    }\n    this.elements = (elements instanceof Element) ? [elements] : elements;\n    this.setId(this.getId());\n    return this;\n  }\n  /**\n\t* add css styles of items's element to the frame at that time.\n\t* @param {Array} properties - elements to synchronize item's keyframes.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public setCSS(time: number, properties: string[]) {\n    this.set(time, fromCSS(this.elements, properties));\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t* update property names used in frames.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.update();\n\t*/\n  public update() {\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* update property names used in frame.\n\t* @param {Frame} [frame] - frame of that time.\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.updateFrame(time, this.get(time));\n\t*/\n  public updateFrame(frame: Frame) {\n    this.keyframes.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Create and add a frame to the sceneItem at that time\n\t* @param {Number} time - frame's time\n\t* @return {Frame} Created frame.\n\t* @example\nitem.newFrame(time);\n\t*/\n  public newFrame(time: string | number) {\n    let frame = this.getFrame(time);\n\n    if (frame) {\n      return frame;\n    }\n    frame = new Frame();\n    this.setFrame(time, frame);\n    return frame;\n  }\n  /**\n\t* Add a frame to the sceneItem at that time\n\t* @param {Number} time - frame's time\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.setFrame(time, frame);\n\t*/\n  public setFrame(time: string | number, frame: Frame) {\n    this.keyframes.add(this.getUnitTime(time), frame);\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* get sceneItem's frame at that time\n\t* @param {Number} time - frame's time\n\t* @return {Frame} sceneItem's frame at that time\n\t* @example\nconst frame = item.getFrame(time);\n\t*/\n  public getFrame(time: number | string) {\n    return this.keyframes.get(this.getUnitTime(time));\n  }\n  /**\n\t* check if the item has a frame at that time\n\t* @param {Number} time - frame's time\n\t* @return {Boolean} true: the item has a frame // false: not\n\t* @example\nif (item.hasFrame(10)) {\n\t// has\n} else {\n\t// not\n}\n\t*/\n  public hasFrame(time: number | string) {\n    return this.keyframes.has(this.getUnitTime(time));\n  }\n  /**\n\t* remove sceneItem's frame at that time\n\t* @param {Number} time - frame's time\n\t* @return {SceneItem} An instance itself\n\t* @example\nitem.removeFrame(time);\n\t*/\n  public removeFrame(time: number) {\n    const keyframes = this.keyframes;\n\n    keyframes.remove(time);\n    keyframes.update();\n\n    return this;\n  }\n  /**\n\t* Copy frame of the previous time at the next time.\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number} toTime - the next time\n\t* @return {SceneItem} An instance itself\n\t* @example\n// getFrame(0) equal getFrame(1)\nitem.copyFrame(0, 1);\n\t*/\n  public copyFrame(fromTime: ObjectInterface<number> | number | string, toTime: number) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.copyFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const copyFrame = frame.clone();\n\n    this.setFrame(toTime, copyFrame);\n    return this;\n  }\n  /**\n\t* merge frame of the previous time at the next time.\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number|string} toTime - the next time\n\t* @return {SceneItem} An instance itself\n\t* @example\n// getFrame(1) contains getFrame(0)\nitem.merge(0, 1);\n\t*/\n  public mergeFrame(fromTime: ObjectInterface<number> | number | string, toTime: number | string) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.mergeFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const toFrame = this.newFrame(toTime);\n\n    toFrame.merge(frame);\n    return this;\n  }\n  /**\n\t* Get frame of the current time\n\t* @param {Number} time - the current time\n\t* @param {function} easing - the speed curve of an animation\n\t* @return {Frame} frame of the current time\n\t* @example\nlet item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n// opacity: 0.7; display:\"block\";\nconst frame = item.getNowFrame(1.7);\n\t*/\n  public getNowFrame(time: number, easing?: EasingType) {\n    const frame = new Frame();\n    const names = this.keyframes.getNames();\n    const { left, right } = this._getNearTimeIndex(time);\n    const realEasing = this._getEasing(time, left, right, this.getEasing() || easing);\n\n    names.forEach(properties => {\n      const value = this._getNowValue(time, properties, left, right, realEasing);\n\n      if (isUndefined(value)) {\n        return;\n      }\n      frame.set(properties, value);\n    });\n    return frame;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (isArray(properties)) {\n      const length = properties.length;\n\n      for (let i = 0; i < length; ++i) {\n        const time = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n        this.set(time, properties[i]);\n      }\n    } else if (properties.keyframes) {\n      this.set(properties.keyframes);\n    } else {\n      for (const time in properties) {\n        if (time === \"options\" || time === \"keyframes\") {\n          continue;\n        }\n        const value = properties[time];\n        const realTime = this.getUnitTime(time);\n\n        if (typeof value === \"number\") {\n          this.mergeFrame(value, realTime);\n          continue;\n        }\n        this.set(realTime, value);\n      }\n    }\n    options && this.setOptions(options);\n    return this;\n  }\n  /**\n\t * clone SceneItem.\n\t * @param {StateInterface} [options] animator options\n\t * @return {SceneItem} An instance of clone\n\t * @example\n\t * item.clone();\n\t */\n  public clone(options = {}) {\n    const item = new SceneItem();\n\n    item.setOptions(this.state);\n    item.setOptions(options);\n    this.keyframes.forEach((frame: Frame, time: number) => item.setFrame(time, frame.clone()));\n    return item;\n  }\n  public setOptions(options: StateInterface = {}) {\n    super.setOptions(options);\n    const { id, selector, duration, elements } = options;\n\n    duration && this.setDuration(duration);\n    id && this.setId(id);\n    if (elements) {\n      this.setElement(elements);\n    } else if (selector) {\n      this.setSelector(selector === true ? this.state.id : selector);\n    }\n    return this;\n  }\n  public getAllTimes(isStartZero = true, options: StateInterface = {}) {\n    const times = this.keyframes.times.slice();\n    let length = times.length;\n    const keys: number[] = [];\n    const values: ObjectInterface<number> = {};\n\n    if (!length) {\n      return { keys: [], values: {}, frames: {} };\n    }\n    const frames: ObjectInterface<Frame> = {};\n    const duration = this.getDuration();\n    const direction = options[DIRECTION] || this.state[DIRECTION];\n    const isShuffle = direction === ALTERNATE || direction === ALTERNATE_REVERSE;\n    (!this.getFrame(0)) && times.unshift(0);\n    (!this.getFrame(duration)) && times.push(duration);\n    length = times.length;\n    let iterationCount = options[ITERATION_COUNT] || this.state[ITERATION_COUNT];\n\n    iterationCount = iterationCount !== INFINITE ? iterationCount : 1;\n    const totalDuration = iterationCount * duration;\n\n    for (let i = 0; i < iterationCount; ++i) {\n      const isReverse = isDirectionReverse(i, iterationCount, direction);\n      const start = i * duration;\n\n      for (let j = 0; j < length; ++j) {\n        if (isShuffle && i !== 0 && j === 0) {\n          // pass duplicate\n          continue;\n        }\n        // isStartZero is keytimes[0] is 0 (i === 0 & j === 0)\n        const threshold = j === 0 && (i === 0 ? !isStartZero : !isShuffle) ? THRESHOLD : 0;\n        const keyvalue = toFixed(isReverse ? times[length - 1 - j] : times[j]);\n        const time = toFixed(isReverse ? duration - keyvalue : keyvalue);\n        const keytime = toFixed(start + time + threshold);\n\n        if (totalDuration < keytime) {\n          break;\n        }\n        keys.push(keytime);\n        values[keytime] = keyvalue;\n\n        if (!frames[keyvalue]) {\n          const frame = this.getFrame(keyvalue);\n\n          if (!frame || j === 0 || j === length - 1) {\n            frames[keyvalue] = this.getNowFrame(keyvalue);\n          } else {\n            frames[keyvalue] = frame.clone();\n            const isTransform = frame.has(\"transform\");\n            const isFilter = frame.has(\"filter\");\n            if (isTransform || isFilter) {\n              const nowFrame = this.getNowFrame(keyvalue);\n\n              isTransform && frames[keyvalue].remove(\"transform\").set(\"transform\", nowFrame.raw(\"transform\"));\n              isFilter && frames[keyvalue].remove(\"filter\").set(\"filter\", nowFrame.raw(\"filter\"));\n            }\n          }\n        }\n      }\n    }\n    if (keys[keys.length - 1] < totalDuration) {\n      // last time === totalDuration\n      const isReverse = isDirectionReverse(iterationCount, iterationCount, direction);\n      const keyvalue = toFixed(duration * (isReverse ? 1 - iterationCount % 1 : iterationCount % 1));\n\n      keys.push(totalDuration);\n      values[totalDuration] = keyvalue;\n      !frames[keyvalue] && (frames[keyvalue] = this.getNowFrame(keyvalue));\n    }\n    return { keys, values, frames };\n  }\n  /**\n\t* Specifies an css text that coverted the keyframes of the item.\n\t* @param {Array} [duration=this.getDuration()] - elements to synchronize item's keyframes.\n\t* @param {Array} [options={}] - parent options to unify options of items.\n\t* @example\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public toCSS(parentDuration = this.getDuration(), options: StateInterface = {}) {\n    const state = this.state;\n    const selector = state.selector || this.options.selector;\n    if (!selector) {\n      return \"\";\n    }\n    const peusdo = state.peusdo || \"\";\n    const id = getRealId(this);\n    // infinity or zero\n    const isInfinite = state[ITERATION_COUNT] === \"infinite\";\n    const isParent = !isUndefined(options[ITERATION_COUNT]);\n    const isZeroDuration = parentDuration === 0;\n    const duration = isZeroDuration ? this.getDuration() : parentDuration;\n    const playSpeed = (options[PLAY_SPEED] || 1);\n    const delay = ((options[DELAY] || 0) + (isZeroDuration ? state[DELAY] : 0)) / playSpeed;\n    const easingName = (state[EASING] && state[EASING_NAME]) ||\n      (isParent && options[EASING] && options[EASING_NAME]) || state[EASING_NAME];\n    const iterationCount = isInfinite ? \"infinite\" :\n      (!isZeroDuration && options[ITERATION_COUNT]) || state[ITERATION_COUNT];\n    const fillMode = (options[FILL_MODE] !== \"forwards\" && options[FILL_MODE]) || state[FILL_MODE];\n    const direction = isInfinite ? state[DIRECTION] : options[DIRECTION] || state[DIRECTION];\n    const cssText = makeAnimationProperties({\n      fillMode,\n      direction,\n      iterationCount,\n      delay: `${delay}s`,\n      name: `${PREFIX}KEYFRAMES_${toId(id)}`,\n      duration: `${duration / playSpeed}s`,\n      timingFunction: easingName,\n    });\n\n    const css = `${selector}.${START_ANIMATION}${peusdo} {\n\t\t\t${cssText}\n\t\t}${selector}.${PAUSE_ANIMATION}${peusdo} {\n      ${ANIMATION}-play-state: paused;\n    }\n\t\t${this._toKeyframes(duration, !isZeroDuration && isParent)}`;\n\n    return css;\n  }\n  public exportCSS(duration?: number, options?: StateInterface) {\n    if (!this.elements.length) {\n      return \"\";\n    }\n    const css = this.toCSS(duration, options);\n    const isParent = options && !isUndefined(options[ITERATION_COUNT]);\n\n    !isParent && exportCSS(getRealId(this), css);\n    return css;\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      addClass(elements[i], PAUSE_ANIMATION);\n    }\n  }\n  public endCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      const element = elements[i];\n\n      removeClass(element, PAUSE_ANIMATION);\n      removeClass(element, START_ANIMATION);\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nitem.playCSS();\nitem.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(isExportCSS = true, properties = {}) {\n    playCSS(this, isExportCSS, properties);\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const elements = this.elements;\n    const length = elements.length;\n    const cssText = makeAnimationProperties(properties);\n\n    if (!length) {\n      return;\n    }\n    if (isPaused) {\n      for (let i = 0; i < length; ++i) {\n        removeClass(elements[i], PAUSE_ANIMATION);\n      }\n    } else {\n      for (let i = 0; i < length; ++i) {\n        const element = elements[i];\n\n        element.style.cssText += cssText;\n        if (hasClass(element, START_ANIMATION)) {\n          removeClass(element, START_ANIMATION);\n          (el => {\n            requestAnimationFrame(() => {\n              requestAnimationFrame(() => {\n                addClass(el, START_ANIMATION);\n              });\n            });\n          })(element);\n        } else {\n          addClass(element, START_ANIMATION);\n        }\n      }\n    }\n    return elements[0];\n  }\n  private _getEasing(time: number, left: number, right: number, easing: EasingType) {\n    if (this.keyframes.hasName(TIMING_FUNCTION)) {\n      const nowEasing = this._getNowValue(time, [TIMING_FUNCTION], left, right, 0, true);\n\n      return isFunction(nowEasing) ? nowEasing : easing;\n    }\n    return easing;\n  }\n  private _toKeyframes(duration = this.getDuration(), isParent: boolean) {\n    const id = getRealId(this);\n    const state = this.state;\n    const playSpeed = state[PLAY_SPEED];\n    const iterationCount = state[ITERATION_COUNT];\n    const fillMode = state[FILL_MODE];\n    const delay = isParent ? state[DELAY] : 0;\n    const direction = isParent ? state[DIRECTION] : NORMAL;\n    const isReverse = direction === REVERSE || direction === ALTERNATE_REVERSE;\n    const { keys, values, frames } = this.getAllTimes(true, {\n      duration,\n      delay,\n      direction,\n      iterationCount: isParent && iterationCount !== INFINITE ? iterationCount : 1,\n      isCSS: true,\n    });\n    const length = keys.length;\n    const css: ObjectInterface<string> = {};\n    const keyframes: string[] = [];\n\n    if (!keys.length) {\n      return \"\";\n    }\n    for (const time in frames) {\n      css[time] = frames[time].toCSS();\n    }\n    const lastTime = keys[length - 1];\n    const lastCSS = css[values[lastTime]];\n\n    if (delay) {\n      const delayCSS = isReverse && (fillMode === \"both\" || fillMode === \"backwards\") ? lastCSS : css[0];\n      keyframes.push(`0%{}`);\n      isReverse && keyframes.push(`${delay / playSpeed / duration * 100 - THRESHOLD}%{${delayCSS}}`);\n    }\n    keys.forEach(time => {\n      const keyTime = (delay + time) / playSpeed / duration * 100;\n      keyframes.push(`${keyTime}%{${keyTime === 0 ? \"\" : css[values[time]]}}`);\n    });\n    // if (afterDelay) {\n    //   keyframes.push(`${lastTime / playSpeed / duration * 100 + THRESHOLD}%{${lastCSS}}`);\n    //   keyframes.push(`100%{${lastCSS}`);\n    // } else {\n    if ((delay + lastTime) / playSpeed < duration) {\n      // not 100%\n      keyframes.push(`100%{${lastCSS}}`);\n    }\n    // }\n    return `@${KEYFRAMES} ${PREFIX}KEYFRAMES_${toId(id)}{\n\t\t\t${keyframes.join(\"\\n\")}\n\t\t}`;\n  }\n  private _getNowValue(\n    time: number,\n    properties: string[],\n    left: number,\n    right: number,\n    easing: EasingType = this.getEasing(),\n    usePrevValue: boolean = isFixed(properties),\n  ) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    let prevTime: number;\n    let nextTime: number;\n    let prevFrame: Frame;\n    let nextFrame: Frame;\n\n    for (let i = left; i >= 0; --i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        prevTime = times[i];\n        prevFrame = frame;\n        break;\n      }\n    }\n    const prevValue = prevFrame && prevFrame.raw(...properties);\n\n    if (usePrevValue) {\n      return prevValue;\n    }\n    for (let i = right; i < length; ++i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        nextTime = times[i];\n        nextFrame = frame;\n        break;\n      }\n    }\n    const nextValue = nextFrame && nextFrame.raw(...properties);\n\n    if (!prevFrame || isUndefined(prevValue)) {\n      return nextValue;\n    }\n    if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n      return prevValue;\n    }\n    if (prevTime < 0) {\n      prevTime = 0;\n    }\n    return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n  }\n  private _getNearTimeIndex(time: number) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (times[i] === time) {\n        return { left: i, right: i };\n      } else if (times[i] > time) {\n        return { left: i === 0 ? 0 : i - 1, right: i };\n      }\n    }\n    return { left: length - 1, right: length - 1 };\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const easing = this.getEasing() || parentEasing;\n    const frame = this.getNowFrame(iterationTime, easing);\n    const currentTime = this.getTime();\n\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @event SceneItem#animate\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Frame} param.frame frame of that time.\n\t\t */\n    this.trigger(\"animate\", {\n      frame,\n      currentTime,\n      time: iterationTime,\n    });\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length || this.state.peusdo) {\n      return frame;\n    }\n    const attributes = frame.get(\"attribute\");\n\n    if (attributes) {\n      for (const name in (attributes as any)) {\n        for (let i = 0; i < length; ++i) {\n          elements[i].setAttribute(name, attributes[name]);\n        }\n      }\n    }\n    const cssText = frame.toCSS();\n\n    if (this.state.cssText !== cssText) {\n      this.state.cssText = cssText;\n\n      for (let i = 0; i < length; ++i) {\n        elements[i].style.cssText += cssText;\n      }\n      return frame;\n    }\n  }\n}\n\nexport default SceneItem;\n","import Animator, { StateInterface, EasingType } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ANIMATE, ITERATION_COUNT, EASING, EASING_NAME } from \"./consts\";\nimport Frame from \"./Frame\";\nimport { playCSS, exportCSS, getRealId, makeId } from \"./utils\";\nimport { isFunction, IS_WINDOW, ObjectInterface } from \"@daybrush/utils\";\nimport { eachObjectF, ForEachInterface } from \"fjx\";\n\n/**\n* manage sceneItems and play Scene.\n*/\nclass Scene extends Animator implements ForEachInterface<Scene | SceneItem> {\n  /**\n  * version info\n  * @type {string}\n  * @example\n  * Scene.VERSION // #__VERSION__#\n  */\n  public static VERSION: string = \"#__VERSION__#\";\n  public items: ObjectInterface<Scene | SceneItem>;\n  /**\n  * @sort 1\n  * @param - properties\n  * @param - options\n  * @example\n  const scene = new Scene({\n    item1: {\n      0: {\n        display: \"none\",\n      },\n      1: {\n        display: \"block\",\n        opacity: 0,\n      },\n      2: {\n        opacity: 1,\n      },\n    },\n    item2: {\n      2: {\n        opacity: 1,\n      },\n    }\n  });\n    */\n  constructor(properties?: ObjectInterface<any>, options?: StateInterface) {\n    super();\n    this.items = {};\n    this.load(properties, options);\n  }\n  public setId(id: number | string = `scene${Math.floor(Math.random() * 100000)}`) {\n    this.state.id = id;\n    return this;\n  }\n  public getId() {\n    return this.state.id;\n  }\n  public getDuration() {\n    const items = this.items;\n    let time = 0;\n\n    for (const id in items) {\n      const item = items[id];\n\n      time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n    }\n    return time;\n  }\n  public setDuration(duration: number) {\n    const items = this.items;\n    const sceneDuration = this.getDuration();\n\n    if (duration === 0 || !isFinite(sceneDuration)) {\n      return this;\n    }\n    if (sceneDuration === 0) {\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDuration(duration);\n      }\n    } else {\n      const ratio = duration / sceneDuration;\n\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDelay(item.getDelay() * ratio);\n        item.setDuration(item.getDuration() * ratio);\n      }\n    }\n    return this;\n  }\n  public getItem<T extends (Scene | SceneItem) = Scene | SceneItem>(name: number | string): T;\n  public getItem(name: number | string, index: number): SceneItem;\n  /**\n  * get item in scene by name\n  * @param - The item's name\n  * @param - If item is added as function, it can be imported via index.\n  * @return {Scene | SceneItem} item\n  * @example\n  const item = scene.getItem(\"item1\")\n  */\n  public getItem(name: number | string, index?: number) {\n    if (index != null) {\n      return (this.items[name] as Scene).getItem(index) as SceneItem;\n    }\n    return this.items[name];\n  }\n  /**\n  * create item in scene\n  * @param {String} name - name of item to create\n  * @param {StateOptions} options - The option object of SceneItem\n  * @return {Sceme.SceneItem} Newly created item\n  * @example\n  const item = scene.newItem(\"item1\")\n  */\n  public newItem(name: number | string, options = {}) {\n    if (name in this.items) {\n      return;\n    }\n    const item = new SceneItem();\n\n    this.setItem(name, item);\n    item.setOptions(options);\n\n    return item;\n  }\n  /**\n  * add a sceneItem to the scene\n  * @param - name of item to create\n  * @param - sceneItem\n  * @example\n  const item = scene.newItem(\"item1\")\n  */\n  public setItem(name: number | string, item: Scene | SceneItem) {\n    item.setId(name);\n    this.items[name] = item;\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n   * executes a provided function once for each scene item.\n   * @param - Function to execute for each element, taking three arguments\n   * @return {Scene} An instance itself\n   */\n  public forEach(func: (item?: Scene | SceneItem, name?: string, items?: ObjectInterface<Scene | SceneItem>) => void) {\n    const items = this.items;\n\n    eachObjectF(func, items);\n    return this;\n  }\n  public toCSS(duration: number = this.getDuration(), parentState?: StateInterface) {\n    const items = this.items;\n    let totalDuration = parentState ? this.getDuration() : duration;\n\n    if (!totalDuration || !isFinite(totalDuration)) {\n      totalDuration = 0;\n    }\n    const styles: string[] = [];\n    const state = {\n      ...this.state,\n    };\n\n    if (parentState) {\n      const stateIterations = state[ITERATION_COUNT];\n      const parentIterations = parentState[ITERATION_COUNT];\n\n      if (parentIterations === \"infinite\") {\n        state[ITERATION_COUNT] = \"infinite\";\n      } else if (stateIterations !== \"infinite\") {\n        state[ITERATION_COUNT] = stateIterations * parentIterations;\n      }\n      if (!state[EASING]) {\n        state[EASING] = parentState[EASING];\n        state[EASING_NAME] = parentState[EASING_NAME];\n      }\n    }\n    for (const id in items) {\n      styles.push(items[id].toCSS(totalDuration, state));\n    }\n    return styles.join(\"\");\n  }\n  /**\n   * Export the CSS of the items to the style.\n   * @return {Scene} An instance itself\n   */\n  public exportCSS(duration?: number, parentState?: StateInterface) {\n    const css = this.toCSS(duration, parentState);\n\n    !parentState && exportCSS(getRealId(this), css);\n    return css;\n  }\n  public append(item: SceneItem | Scene) {\n    item.setDelay(item.getDelay() + this.getDuration());\n    this.setItem(getRealId(item), item);\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].pauseCSS();\n    }\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public endCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].endCSS();\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const items = this.items;\n    let animtionElement: HTMLElement;\n\n    for (const id in items) {\n      const el = items[id].addPlayClass(isPaused, properties);\n\n      !animtionElement && (animtionElement = el);\n    }\n    return animtionElement;\n  }\n  /**\n  * Play using the css animation and keyframes.\n  * @param {boolean} [exportCSS=true] Check if you want to export css.\n  * @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n  * @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n  * @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n  * @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n  * @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n  * @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n  * @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n  * @return {Scene} An instance itself\n  * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n  * @example\n  scene.playCSS();\n  scene.playCSS(false, {\n  direction: \"reverse\",\n  fillMode: \"forwards\",\n  });\n  */\n  public playCSS(isExportCSS = true, properties = {}) {\n    playCSS(this, isExportCSS, properties);\n    return this;\n  }\n  public set(properties: any = {}, ...args: any[]) {\n    this.load(properties);\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (!properties) {\n      return this;\n    }\n    const isSelector = options && options.selector || this.options.selector;\n\n    for (const name in properties) {\n      if (name === \"options\") {\n        continue;\n      }\n      const object = properties[name];\n      let item;\n\n      if (object instanceof Scene || object instanceof SceneItem) {\n        this.setItem(name, object);\n        item = object;\n      } else if (isFunction(object) && isSelector) {\n        const elements = IS_WINDOW ? document.querySelectorAll(name) : ([] as Element[]);\n        const length = elements.length;\n        const scene = new Scene();\n\n        for (let i = 0; i < length; ++i) {\n          const id = makeId();\n\n          scene.newItem(`${i}`, {\n            id,\n            selector: `[data-scene-id=\"${id}\"]`,\n            elements: elements[i],\n          }).load(object(i));\n        }\n        this.setItem(name, scene);\n        continue;\n      } else {\n        item = this.newItem(name);\n        item.load(object);\n      }\n      isSelector && item.setSelector(name);\n    }\n    this.setOptions(options);\n  }\n  public setSelector(_: string | boolean) {\n    const isSelector = this.options.selector;\n\n    this.forEach((item, name) => {\n      item.setSelector(isSelector ? name : false);\n    });\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const items = this.items;\n    const easing = this.getEasing() || parentEasing;\n    const frames: ObjectInterface<ObjectInterface<any> | Frame> = {};\n\n    for (const id in items) {\n      const item = items[id];\n\n      frames[id] = item.animate(Math.max(iterationTime * item.getPlaySpeed() - item.getDelay(), 0), easing);\n    }\n    /**\n     * This event is fired when timeupdate and animate.\n     * @param {Number} param.currentTime The total time that the animator is running.\n     * @param {Number} param.time The iteration time during duration that the animator is running.\n     * @param {Frame} param.frames frame of that time.\n     */\n    this.trigger(ANIMATE, {\n      currentTime: this.getTime(),\n      time: iterationTime,\n      frames,\n    });\n    return frames;\n  }\n}\n\nexport default Scene;\n","\nimport { StateInterface } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface } from \"@daybrush/utils\";\n\n/**\n * @namespace presets\n */\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @param - property to set effect\n * @param - values of 100%\n * @example\n// import {set, blink} from \"scenejs\";\n// set(\"opacity\", [0, 1, 0], {duration: 2});\nScene.set(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\nScene.blink({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function set(property: string | string[], values: any[], options: StateInterface) {\n  const item = new SceneItem({}, options);\n  const length = values.length;\n\n  for (let i = 0; i < length; ++i) {\n    item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n  }\n  return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {set, zoomIn} from \"scenejs\";\n// zoomIn({duration: 2});\nScene.zoomIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {zoomOut} from \"scenejs\";\n// zoomOut({duration: 2});\nScene.zoomOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeIn} from \"scenejs\";\n// wipeIn({property: \"left\", duration: 2});\nScene.wipeIn({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof presets\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeOut} from \"scenejs\";\n// wipeOut({property: \"left\", duration: 2});\nScene.wipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @param {Scene.SceneItem} item1 - Item that end effect\n * @param {Scene.SceneItem} item2 - Item that start effect\n * @param {AnimatorOptions} options\n * @param {object} options.from The starting properties of item1 and end properties of item2\n * @param {object} options.to The starting properties of item2 and end properties of item1\n * @param {number} options.duration animation's duration\n * @param {number} [options.time] start time of item1 <br/> <strong>default: item1.getDuration() - duration</strong>\n * @example\n// import {transition} from \"scenejs\";\ntransition(item1, item2, {\n\tfrom: {\n\t\topacity: 1,\n\t},\n\tto: {\n\t\topacity: 0,\n\t},\n\tduration: 0.1,\n});\n\n// Same\nitem1.set({\n\t[item1.getDuration() - 0.1]: {\n\t\topacity: 1,\n\t},\n\t[item1.getDuration()]: {\n\t\topacity: 0,\n\t}\n});\nitem2.set({\n\t0: {\n\t\topacity: 0,\n\t},\n\t0.1: {\n\t\topacity: 1,\n\t}\n});\n */\nexport function transition(item1: SceneItem, item2: SceneItem, {\n  from,\n  to,\n  duration = item1.getDuration(),\n  time = Math.max(item1.getDuration() - duration, 0),\n}: { from: ObjectInterface<any>, to: ObjectInterface<any>, duration?: number, time: number }) {\n  item1.set({\n    [time]: from,\n    [time + duration]: to,\n  });\n  item2.set({\n    0: to,\n    [duration]: from,\n  });\n}\n\n/**\n * Make a fade in effect.\n * @memberof presets\n * @param {StateInterface} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeIn} from \"scenejs\";\n// fadeIn({duration: 2});\nScene.fadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof presets\n * @param {StateInterface} options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeOut} from \"scenejs\";\n// fadeOut({duration: 2});\nScene.fadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof presets\n * @param {StateInterface} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {blink} from \"scenejs\";\n// blink({duration: 2});\nScene.blink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to, from], arguments[0]);\n}\n"],"names":["PREFIX","TIMING_FUNCTION","ROLES","transform","filter","attribute","ALIAS","easing","FIXED","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","ITERATION_TIME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","ITERATION","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","OPTIONS","EVENTS","events","name","callback","once","isObject","eachObjectF","f","i","_this","_on","isArray","eachArrayF","func","event","push","callback2","_i","args","off","callbacks","index","indexOf","splice","data","length","target","type","currentTarget","apply","cubic","y1","y2","t","t2","solveFromX","x1","x2","x","solveX","dx","Math","abs","bezier","max","min","easingName","steps","count","position","time","level","floor","STEP_START","STEP_END","LINEAR","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","value","options","prefix","suffix","model","separator","setOptions","init","newOptions","arr","map","v","PropertyObject","clone","join","toValue","forEach","STRING","split","OBJECT","isPropertyObject","setAlias","alias","setRole","names","isProperty","isFixedProperty","roles","fixed","getType","ARRAY","PROPERTY","NUMBER","toFixed","num","round","isInProperties","isCheckTrue","role","isRole","isFixed","isPausedCSS","item","state","playCSS","getPlayState","exportCSS","id","css","styleId","toId","styleElement","document","querySelector","innerText","body","insertAdjacentHTML","makeId","selector","random","IS_WINDOW","checkElement","getRealId","setId","getId","text","match","isExportCSS","properties","ANIMATION","addPlayClass","isEnded","setTime","el","peusdo","addAnimationEvent","setState","setPlayState","trigger","duration","getDuration","isZeroDuration","isFinite","animationend","finish","on","removeEventListener","animationiteration","_a","elapsedTime","currentTime","iterationCount","setCurrentIterationCount","addEventListener","GetterSetter","getter","setter","parent","constructor","prototype","camelize","isDirectionReverse","currentIterationCount","iteraiontCount","direction","setters","getters","tslib_1","_super","delay","fillMode","playSpeed","iterationTime","tickTime","prevTime","playState","curveArray","Array","setEasing","setDuration","Infinity","getActiveDuration","getTime","animator","play","setTickTime","requestAnimationFrame","tick","end","pause","isTick","activeDuration","getUnitTime","calculateIterationTime","isDelay","getIterationTime","getIterationCount","object","isString","unit","parseFloat","passIterationCount","currentIterationTime","setIterationTime","isReverse","isFiniteDuration","isForwards","now","Animator","EventTrigger","splitStyle","str","obj","matches","exec","trim","toPropertyObject","styles","arrayToColorObject","RGBA","stringToBracketObject","afterModel","COLOR_MODELS","stringToRGBA","getOption","arrayToPropertyObject","stringToColorObject","result","values","splitComma","splitSpace","charAt","toObject","size","get","toInnerProperties","arrObj","replace","merge","to","from","FUNCTION","getValue","slice","getPropertyName","set","raw","params","undefined","_set","Frame","stylesLength","frame","frameProperties","cssObject","TRANSFORM","FILTER","toCSSObject","cssArray","getNames","stack","concat","pop","updateFrame","times","items","originalDuration","ratio","time2","addTime","removeTime","pushIndex","dotArray","a1","a2","b1","b2","v1","dot","dotColor","color1","color2","value1","value2","model1","model2","colorModel","parseInt","dotObject","a1Type","type1","type2","isFunction1","isFunction2","r1","r2","splitUnit","v2","isNaN","dotValue","nextTime","prevValue","nextValue","makeAnimationProperties","decamelize","keyframes","Keyframes","elements","load","sceneId","setAttribute","SceneItem","getDelay","realTime_1","keys","values_1","frames_1","getEasingName","getEasing","newFrame","getFrame","remove","update","unshiftTime","firstFrame","unshift","prepend","setElement","querySelectorAll","Element","fromCSS","parentEasing","_animate","isNumber","setFrame","add","has","fromTime","toTime","copyFrame","mergeFrame","toFrame","left","right","realEasing","_getEasing","_getNowValue","isUndefined","realTime","setSelector","isStartZero","frames","isShuffle","totalDuration","start","j","threshold","keyvalue","keytime","getNowFrame","isTransform","isFilter","nowFrame","parentDuration","isInfinite","isParent","cssText","timingFunction","_toKeyframes","toCSS","pauseCSS","isPaused","addClass","element","removeClass","endCSS","style","hasClass","hasName","nowEasing","isFunction","lastTime","lastCSS","delayCSS","keyTime","KEYFRAMES","usePrevValue","prevFrame","nextFrame","attributes","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","getItem","setItem","parentState","stateIterations","parentIterations","animtionElement","isSelector","Scene","scene","newItem","_","animate","property","zoomIn","_b","_c","arguments","zoomOut","wipeIn","_d","wipeOut","transition","item1","item2","_e","fadeIn","fadeOut","blink"],"mappings":"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"}