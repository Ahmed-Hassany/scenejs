{"version":3,"file":"scene.esm.js","sources":["../src/consts.ts","../src/PropertyObject.ts","../src/utils.ts","../src/EventTrigger.ts","../src/easing.ts","../src/Animator.ts","../src/utils/color.ts","../src/utils/property.ts","../src/Frame.ts","../src/Keyframes.ts","../src/utils/dot.ts","../src/utils/css.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts","../src/index.ts"],"sourcesContent":["export type Role = true | RoleInterface;\nexport interface RoleInterface {\n  [role: string]: Role;\n}\nexport interface ObjectInterface<T> {\n  [name: string]: T;\n}\nexport type NameType = string | number;\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleInterface = { transform: {}, filter: {}, attribute: {} };\nexport const ALIAS: ObjectInterface<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { \"animation-timing-function\": true, \"contents\": true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\ntype OptionType = [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"];\ntype EventType = [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const RGBA = \"rgba\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const FUNCTION = \"function\";\nexport const PROPERTY = \"property\";\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n\nconst prefixes: string[] = [\"webkit\", \"ms\", \"moz\", \"o\"];\nconst checkProperties = (property: string) => {\n  const styles = (document.body || document.documentElement).style as any;\n  const length = prefixes.length;\n\n  if (typeof styles[property] !== \"undefined\") {\n    return property;\n  }\n  for (let i = 0; i < length; ++i) {\n    const name = `-${prefixes[i]}-${property}`;\n\n    if (typeof styles[name] !== \"undefined\") {\n      return name;\n    }\n  }\n  return \"\";\n};\n\nexport const TRANSFORM = /*#__PURE__*/checkProperties(\"transform\");\nexport const FILTER = /*#__PURE__*/checkProperties(\"filter\");\nexport const ANIMATION = /*#__PURE__*/checkProperties(\"animation\");\nexport const KEYFRAMES = /*#__PURE__*/ANIMATION.replace(\"animation\", \"keyframes\");\n","interface PropertyObjectInterface {\n  prefix?: string;\n  suffix?: string;\n  model?: string;\n  type?: string;\n  separator?: string;\n  [key: string]: any;\n}\n/**\n* Make string, array to PropertyObject for the dot product\n* @memberof Scene\n*/\nclass PropertyObject {\n  public value: any[];\n  public options: PropertyObjectInterface;\n\n  /**\n\t* @param {String|Array} value - This value is in the array format ..\n\t* @param {String} separator - Array separator.\n\t* @example\nvar obj1 = new PropertyObject(\"1,2,3\", \",\");\nvar obj2 = new PropertyObject([1,2,3], \" \");\nvar obj3 = new PropertyObject(\"1$2$3\", \"$\");\n\n// rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\t */\n  constructor(value: string | any[], options: PropertyObjectInterface = {}) {\n    this.options = {\n      prefix: \"\",\n      suffix: \"\",\n      model: \"\",\n      type: \"\",\n      separator: \",\",\n    };\n    this.setOptions(options);\n    this.init(value);\n  }\n  public setOptions(options: PropertyObjectInterface) {\n    (Object as any).assign(this.options, options);\n    return this;\n  }\n  public getOption(name: string) {\n    return this.options[name];\n  }\n  /**\n\t* the number of values.\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.length);\n// 3\n\t */\n  public size() {\n    return this.value.length;\n  }\n  /**\n\t* retrieve one of values at the index\n\t* @param {Number} index - index\n\t* @return {Object} one of values at the index\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.get(0));\n// 1\n\t */\n  public get(index: number) {\n    return this.value[index];\n  }\n  /**\n\t* Set the value at that index\n\t* @param {Number} index - index\n\t* @param {Object} value - text, a number, object to set\n\t* @return {PropertyObject} An instance itself\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nobj1.set(0, 2);\nconsole.log(obj1.toValue());\n// 2,2,3\n\t */\n  public set(index: number, value: any) {\n    this.value[index] = value;\n    return this;\n  }\n  /**\n\t* create a copy of an instance itself.\n\t* @return {PropertyObject} clone\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nconst obj2 = obj1.clone();\n\t */\n  public clone(): PropertyObject {\n    const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n\n    return new PropertyObject(arr, {\n      separator: this.options.separator,\n      prefix: this.options.prefix,\n      suffix: this.options.suffix,\n      model: this.options.model,\n      type: this.options.type,\n    });\n  }\n  /**\n\t* Make Property Object to String\n\t* @return {String} Make Property Object to String\n\t* @example\n//rgba(100, 100, 100, 0.5)\nconst obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\",\n});\nconsole.log(obj4.toValue());\n// \"rgba(100,100,100,0.5)\"\n\t*/\n  public toValue(): string {\n    return this.options.prefix + this.join() + this.options.suffix;\n  }\n  /**\n\t* Make Property Object's array to String\n\t* @return {String} Join the elements of an array into a string\n\t* @example\n\t//rgba(100, 100, 100, 0.5)\n\tvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\t\"separator\" : \",\",\n\t\t\"prefix\" : \"rgba(\",\n\t\t\"suffix\" : \")\"\n\t});\n\tobj4.join();  // =>   \"100,100,100,0.5\"\n\t */\n  public join() {\n    return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.options.separator);\n  }\n  /**\n\t* executes a provided function once per array element.\n\t* @param {Function} callback - Function to execute for each element, taking three arguments\n\t* @param {All} [callback.currentValue] The current element being processed in the array.\n\t* @param {Number} [callback.index] The index of the current element being processed in the array.\n\t* @param {Array} [callback.array] the array.\n\t* @return {PropertyObject} An instance itself\n\t* @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n\t* @example\n//rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\nobj4.forEach(t => {\n\tconsole.log(t);\n});  // =>   \"100,100,100,0.5\"\n\t*/\n  public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n    this.value.forEach(func);\n    return this;\n  }\n  private init(value: string | any[]) {\n    const type = typeof value;\n\n    if (type === \"string\") {\n      this.value = (value as string).split(this.options.separator);\n    } else if (type === \"object\") {\n      this.value = (value as any[]);\n    } else {\n      this.value = [value];\n    }\n    return this;\n  }\n}\nexport default PropertyObject;\n","import { ROLES, ObjectInterface, MAXIMUM, FIXED, ALIAS } from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\n\nexport function setAlias(name: string, alias: string[]) {\n  ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n  const length = names.length;\n  let roles: any = ROLES;\n  let fixed: any = FIXED;\n\n  for (let i = 0; i < length - 1; ++i) {\n    !roles[names[i]] && (roles[names[i]] = {});\n    roles = roles[names[i]];\n    if (isFixedProperty) {\n      !fixed[names[i]] && (fixed[names[i]] = {});\n      fixed = fixed[names[i]];\n    }\n  }\n  isFixedProperty && (fixed[names[length - 1]] = true);\n  roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n  const type = typeof value;\n\n  if (type === \"object\") {\n    if (isArray(value)) {\n      return \"array\";\n    } else if (value instanceof PropertyObject) {\n      return \"property\";\n    }\n  } else if (type === \"string\" || type === \"number\") {\n    return \"value\";\n  }\n  return type;\n}\nexport function toFixed(num: number) {\n  return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function isInProperties(roles: ObjectInterface<any>, args: any[], isCheckTrue?: boolean) {\n  const length = args.length;\n  let role: any = roles;\n\n  if (length === 0) {\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    if (role === true) {\n      return false;\n    }\n    role = role[args[i]];\n    if (!role || (!isCheckTrue && role === true)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isRole(args: any[], isCheckTrue?: boolean) {\n  return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: any[]) {\n  return isInProperties(FIXED, args, true);\n}\nexport function isUndefined(value: any): value is undefined {\n  return (typeof value === \"undefined\");\n}\nexport function isObject(value: any): value is ObjectInterface<any> {\n  return value && (typeof value === \"object\");\n}\nexport function isArray(value: any): value is any[] {\n  return Array.isArray(value);\n}\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\nexport function splitUnit(text: string) {\n  const matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n\n  if (!matches) {\n    return { prefix: \"\", unit: \"\", value: NaN };\n  }\n  const prefix = matches[1];\n  const value = matches[2];\n  const unit = matches[3];\n\n  return { prefix, unit, value: parseFloat(value) };\n}\n// export function camelize(str: string) {\n// \treturn str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n// }\nexport function decamelize(str: string) {\n  return str.replace(/([a-z])([A-Z])/g, (all, letter, letter2) => `${letter}-${letter2.toLowerCase()}`);\n}\n","import { isObject } from \"./utils\";\n\ntype CallbackType = (...args: any[]) => any;\ninterface EventParamterType {\n  [name: string]: CallbackType | CallbackType[];\n}\n/**\n* attach and trigger event handlers.\n* @memberof Scene\n*/\nclass EventTrigger {\n  private events: { [name: string]: CallbackType[] };\n  /**\n\t* @example\nconst et = new Scene.EventTrigger();\nconst scene = new Scene();\n\nscene.on(\"call\", e => {\n\tconsole.log(e.param);\n});\net.on(\"call\", e => {\n\tconsole.log(e.param);\n});\nscene.trigger(\"call\", {param: 1});\net.trigger(\"call\", {param: 1});\n\t */\n  constructor() {\n    this.events = {};\n  }\n  /**\n\t* Attach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function() {\n\tconsole.log(\"animate\");\n});\n\ntarget.trigger(\"animate\");\n\n\t*/\n  public on(name: string | EventParamterType, callback?: CallbackType | CallbackType[]) {\n    const events = this.events;\n\n    if (isObject(name)) {\n      for (const i in name) {\n        this.on(i, name[i]);\n      }\n      return this;\n    }\n    if (!(name in events)) {\n      events[name] = [];\n    }\n    if (!callback) {\n      return this;\n    }\n    if (isObject(callback)) {\n      (callback as CallbackType[]).forEach(func => this.on(name, func));\n      return this;\n    }\n    const event = events[name];\n\n    event.push(callback);\n    return this;\n  }\n  /**\n\t* Dettach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\nconst callback = function() {\n\tconsole.log(\"animate\");\n};\ntarget.on(\"animate\", callback);\n\ntarget.off(\"animate\", callback);\ntarget.off(\"animate\");\n\n\t*/\n  public off(name?: string, callback?: CallbackType) {\n    if (!name) {\n      this.events = {};\n    } else if (!callback) {\n      this.events[name] = [];\n    } else {\n      const callbacks = this.events[name];\n\n      if (!callbacks) {\n        return this;\n      }\n      const index = callbacks.indexOf(callback);\n\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n  /**\n\t* execute event handler\n\t* @param {String} name - event's name\n\t* @param {Function} [...data] - event handler's additional parameter\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function(a1, a2) {\n\tconsole.log(\"animate\", a1, a2);\n});\n\ntarget.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n\t*/\n  public trigger(name: string, ...data: any[]) {\n    const events = this.events;\n\n    if (!(name in events)) {\n      return this;\n    }\n\n    const event = events[name];\n\n    if (data.length) {\n      const target = data[0];\n\n      target.type = name;\n      target.currentTarget = this;\n      !target.target && (target.target = this);\n    }\n    event.forEach(callback => {\n      callback.apply(this, data);\n    });\n\n    return this;\n  }\n}\nexport default EventTrigger;\n","export interface EasingFunctionInterface extends Function {\n  easingName?: string;\n}\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunctionInterface = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunctionInterface = (time: number) => {\n    const level = 1 / count;\n\n    return (position === \"end\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import {\n  ObjectInterface, THRESHOLD,\n  ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n  ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n  DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED, RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE } from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, EasingFunctionInterface } from \"./easing\";\nimport { toFixed, isString, splitUnit } from \"./utils\";\n\nlet lastTime = 0;\nfunction camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\nfunction GetterSetter<T extends { new(...args: any[]): {} }>(\n  getter: string[], setter: string[], parent: string) {\n  return (constructor: T) => {\n    const prototype = constructor.prototype;\n\n    getter.forEach(name => {\n      prototype[camelize(`get ${name}`)] = function() {\n        return this[parent][name];\n      };\n    });\n    setter.forEach(name => {\n      prototype[camelize(`set ${name}`)] = function(value: any) {\n        this[parent][name] = value;\n        return this;\n      };\n    });\n  };\n}\nconst requestAnimFrame = /*#__PURE__*/(() => {\n  return (window as any).requestAnimationFrame ||\n    (window as any).webkitRequestAnimationFrame ||\n    (window as any).mozRequestAnimationFrame ||\n    ((callback: (time: number) => void) => {\n      const currTime = Date.now();\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      const id = window.setTimeout(() => {\n        callback(currTime + timeToCall);\n      }, 1000 / 60);\n      lastTime = currTime + timeToCall;\n      return id;\n    });\n})();\n\nexport type FillModeType = \"forwards\" | \"backwards\" | \"both\";\nexport type IterationCountType = number | \"infinite\";\nexport type EasingType = 0 | EasingFunctionInterface;\nexport type DirectionType = \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\";\nexport type PlayStateType = \"paused\" | \"running\";\n\nexport interface StateInterface {\n  id?: string;\n  easing?: EasingType;\n  easingName?: string;\n  iterationCount?: IterationCountType;\n  delay?: number;\n  fillMode?: FillModeType;\n  direction?: DirectionType;\n  playSpeed?: number;\n  iterationTime?: number;\n  currentTime?: number;\n  tickTime?: number;\n  currentIterationCount?: number;\n  prevTime?: number;\n  playState?: PlayStateType;\n  duration?: number;\n  [key: string]: any;\n}\nexport function isDirectionReverse(currentIterationCount: number,\n                                   iteraiontCount: IterationCountType, direction: DirectionType) {\n  if (direction === REVERSE) {\n    return true;\n  } else if (iteraiontCount !== \"infinite\" && currentIterationCount === iteraiontCount && iteraiontCount % 1 === 0) {\n    return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n  }\n  return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorOptions The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n/**\n* play video, animation, the others\n* @memberof Scene\n* @class Animator\n* @extends Scene.EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n* @param {AnimatorOptions} [options] - animator's options\n* @example\nconst animator = new Animator({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n*/\n\nconst setters = [ITERATION_COUNT, DELAY, FILL_MODE,\n  DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n@GetterSetter(getters, setters, \"state\")\nclass Animator extends EventTrigger {\n  public state: StateInterface;\n  public options: ObjectInterface<any>;\n\n  constructor(options?: StateInterface) {\n    super();\n    this.options = {};\n    this.state = {\n      id: \"\",\n      easing: 0,\n      easingName: \"linear\",\n      iterationCount: 1,\n      delay: 0,\n      fillMode: \"forwards\",\n      direction: NORMAL,\n      playSpeed: 1,\n      currentTime: 0,\n      iterationTime: -1,\n      currentIterationCount: 0,\n      tickTime: 0,\n      prevTime: 0,\n      playState: PAUSED,\n      duration: 0,\n    };\n    this.setOptions(options);\n  }\n  /**\n\t* set animator's easing.\n\t* @method Scene.Animator#setEasing\n\t* @param {array| function} curverArray - The speed curve of an animation.\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n\t*/\n  public setEasing(curveArray: [number, number, number, number] | EasingFunctionInterface): this {\n    const easing = Array.isArray(curveArray) ?\n      bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]) : curveArray;\n    const easingName = easing[EASING_NAME] || \"linear\";\n\n    this.setState({ easing, easingName });\n    return this;\n  }\n  /**\n\t* set animator's options.\n\t* @method Scene.Animator#setOptions\n\t* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n\t* @param {Object} [AnimatorOptions] - animator's options\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n\t*/\n  public setOptions(options: StateInterface = {}): this {\n    for (const name in options) {\n      const value = options[name];\n\n      if (name === EASING) {\n        this.setEasing(value);\n        continue;\n      } else if (name === DURATION) {\n        value && this.setDuration(value);\n        continue;\n      }\n      ((name in this.state ? this.state : this.options) as StateInterface)[name] = value;\n    }\n\n    return this;\n  }\n  /**\n\t* Get the animator's total duration including delay\n\t* @method Scene.Animator#getTotalDuration\n\t* @return {number} Total duration\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getTotalDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.state[DELAY] + this.getActiveDuration();\n  }\n  /**\n\t* Get the animator's total duration excluding delay\n\t* @method Scene.Animator#getActiveDuration\n\t* @return {number} Total duration excluding delay\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getActiveDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.getDuration() * (this.state[ITERATION_COUNT] as number);\n  }\n  /**\n\t* Check if the animator has reached the end.\n\t* @method Scene.Animator#isEnded\n\t* @return {boolean} ended\n\t* @example\nanimator.isEnded(); // true or false\n\t*/\n  public isEnded(): boolean {\n    if (this.state.tickTime === 0 && this.state[PLAY_STATE] === PAUSED) {\n      return true;\n    } else if (this.getTime() < this.getActiveDuration()) {\n      return false;\n    }\n    return true;\n  }\n  /**\n\t*Check if the animator is paused:\n\t* @method Scene.Animator#isPaused\n\t* @return {boolean} paused\n\t* @example\nanimator.isPaused(); // true or false\n\t*/\n  public isPaused(): boolean {\n    return this.state[PLAY_STATE] === PAUSED;\n  }\n  public setNext(animator: Animator): this {\n    this.on(ENDED, () => {\n      animator.play();\n    });\n    return this;\n  }\n  /**\n\t* play animator\n\t* @method Scene.Animator#play\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public play() {\n    this.state[PLAY_STATE] = RUNNING;\n    if (this.isEnded()) {\n      this.setTickTime(0);\n    }\n    this.state.tickTime = this.getTime();\n\n    requestAnimFrame((time: number) => {\n      this.state.prevTime = time;\n      this.tick(time);\n    });\n    /**\n\t\t * This event is fired when play animator.\n\t\t * @event Scene.Animator#play\n\t\t */\n    this.trigger(PLAY);\n\n    return this;\n  }\n  /**\n\t* pause animator\n\t* @method Scene.Animator#pause\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public pause(): this {\n    this.state[PLAY_STATE] = PAUSED;\n    /**\n\t\t * This event is fired when animator is paused.\n\t\t * @event Scene.Animator#paused\n\t\t */\n    this.trigger(PAUSED);\n    return this;\n  }\n  /**\n\t * end animator\n\t * @method Scene.Animator#end\n\t * @return {Scene.Animator} An instance itself.\n\t*/\n  public end(): this {\n    this.pause();\n    /**\n\t\t * This event is fired when animator is ended.\n\t\t * @event Scene.Animator#ended\n\t\t */\n    this.trigger(ENDED);\n    return this;\n  }\n  /**\n\t* reset animator\n\t* @method Scene.Animator#reset\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public reset() {\n    this.state.tickTime = 0;\n    this.setTime(0);\n    this.pause();\n    return this;\n  }\n  /**\n\t* set currentTime\n\t* @method Scene.Animator#setTime\n\t* @param {Number|String} time - currentTime\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\n\nanimator.setTime(\"from\"); // 0\nanimator.setTime(\"to\"); // 100%\nanimator.setTime(\"50%\");\nanimator.setTime(10);\nanimator.getTime() // 10\n\t*/\n  public setTime(time: number | string, isTick?: boolean) {\n    const activeDuration = this.getActiveDuration();\n    let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n    this.state.tickTime = this.state.delay + currentTime;\n    if (currentTime < 0) {\n      currentTime = 0;\n    } else if (currentTime > activeDuration) {\n      currentTime = activeDuration;\n    }\n    this.state.currentTime = currentTime;\n    this.calculateIterationTime();\n\n    if (this.isDelay()) {\n      return this;\n    }\n    /**\n\t\t * This event is fired when the animator updates the time.\n\t\t * @event Scene.Animator#timeupdate\n\t\t * @param {Object} param The object of data to be sent to an event.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t */\n    this.trigger(TIMEUPDATE, {\n      currentTime,\n      time: this.getIterationTime(),\n      iterationCount: this.getIterationCount(),\n    });\n\n    return this;\n  }\n  public getState(name: string): any {\n    return this.state[name];\n  }\n  public setState(object: StateInterface) {\n    for (const name in object) {\n      this.state[name] = object[name];\n    }\n    return this;\n  }\n  /**\n\t* Get the animator's current time\n\t* @method Scene.Animator#getTime\n\t* @return {number} current time\n\t* @example\nanimator.getTime();\n\t*/\n  public getTime(): number {\n    return this.state.currentTime;\n  }\n  public getUnitTime(time: string | number) {\n    if (isString(time)) {\n      const duration = this.getDuration() || 100;\n\n      if (time === \"from\") {\n        return 0;\n      } else if (time === \"to\") {\n        return duration;\n      }\n      const { unit, value } = splitUnit(time);\n\n      if (unit === \"%\") {\n        !this.getDuration() && (this.state.duration = duration);\n        return parseFloat(time) / 100 * duration;\n      } else if (unit === \">\") {\n        return value + THRESHOLD;\n      } else {\n        return value;\n      }\n    } else {\n      return toFixed(time);\n    }\n  }\n  /**\n\t * Check if the current state of animator is delayed.\n\t * @method Scene.Animator#isDelay\n\t * @return {boolean} check delay state\n\t */\n  public isDelay() {\n    const { delay, tickTime } = this.state;\n\n    return delay > 0 && (tickTime < delay);\n  }\n  protected setCurrentIterationCount(iterationCount: number): this {\n    const state = this.state;\n    const passIterationCount = Math.floor(iterationCount);\n\n    if (state.currentIterationCount < passIterationCount) {\n      /**\n\t\t\t* The event is fired when an iteration of an animation ends.\n\t\t\t* @event Scene.Animator#iteration\n\t\t\t* @param {Object} param The object of data to be sent to an event.\n\t\t\t* @param {Number} param.currentTime The total time that the animator is running.\n\t\t\t* @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t\t*/\n      this.trigger(\"iteration\", {\n        currentTime: state.currentTime,\n        iterationCount: passIterationCount,\n      });\n    }\n    state.currentIterationCount = iterationCount;\n    return this;\n  }\n  protected calculateIterationTime() {\n    const { iterationCount, fillMode, direction } = this.state;\n    const duration = this.getDuration();\n    const time = this.getTime();\n    const currentIterationCount = duration === 0 ? 0 : time / duration;\n    let currentIterationTime = duration ? time % duration : 0;\n\n    if (!duration) {\n      this.setIterationTime(0);\n      return this;\n    }\n    this.setCurrentIterationCount(currentIterationCount);\n\n    // direction : normal, reverse, alternate, alternate-reverse\n    // fillMode : forwards, backwards, both, none\n    const isReverse = isDirectionReverse(currentIterationCount, iterationCount, direction);\n\n    if (isReverse) {\n      currentIterationTime = duration - currentIterationTime;\n    }\n    if (iterationCount !== INFINITE) {\n      const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n      // fill forwards\n      if (currentIterationCount >= iterationCount) {\n        currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n        isReverse && (currentIterationTime = duration - currentIterationTime);\n      }\n    }\n    this.setIterationTime(currentIterationTime);\n    return this;\n  }\n  protected tick(now: number) {\n    const state = this.state;\n    const { playSpeed, prevTime } = state;\n    const currentTime = this.state.tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n    state.prevTime = now;\n    this.setTickTime(currentTime);\n    if (this.isEnded()) {\n      this.end();\n      return;\n    }\n    if (state[PLAY_STATE] === PAUSED) {\n      return;\n    }\n\n    requestAnimFrame((time: number) => {\n      this.tick(time);\n    });\n  }\n  private setTickTime(time: number) {\n    this.setTime(time - this.state.delay, true);\n  }\n}\n\n/**\n * Get a delay for the start of an animation.\n * @method Scene.Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Scene.Animator#setDelay\n * @param {number} delay - delay\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#getFillMode\n * @return {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#setFillMode\n * @param {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode - fillMode\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Scene.Animator#getIterationCount\n * @return {\"inifnite\"|number} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Scene.Animator#setIterationCount\n * @param {\"inifnite\"|number} iterationCount - iterationCount\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#getDirection\n * @return {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#setDirection\n * @param {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction - direction\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Scene.Animator#getPlayState\n * @return {\"paused\"|\"running\"} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Scene.Animator#setPlayState\n * @param {\"paused\"|\"running\"} playState - playState\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Scene.Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Scene.Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Scene.Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Scene.Animator#setDuration\n * @param {number} duration - duration\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Scene.Animator#getEasing\n * @return {0|function} easing\n */\n/**\n * Get the speed curve's name\n * @method Scene.Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Scene.Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\ninterface Animator {\n  getIterationTime(): number;\n  setIterationTime(time: number): this;\n  setDelay(delay: number): this;\n  getDelay(): number;\n  setFillMode(fillMode: FillModeType): this;\n  getFillMode(): FillModeType;\n  setIterationCount(iterationCount: IterationCountType): this;\n  getIterationCount(): IterationCountType;\n  setDirection(direction: IterationCountType): this;\n  getDirection(): IterationCountType;\n  setPlayState(playState: PlayStateType): this;\n  getPlayState(): PlayStateType;\n  setPlaySpeed(playSpeed: number): this;\n  getPlaySpeed(): number;\n  setDuration(duration: number): this;\n  getDuration(): number;\n  getEasing(): EasingType;\n  getEasingName(): string;\n}\nexport default Animator;\n","import { RGBA } from \"../consts\";\n\n/**\n* @namespace\n* @name Color\n*/\nexport const COLOR_MODELS = [\"rgb\", RGBA, \"hsl\", \"hsla\"];\n\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {String} hex color\n* @example\nconsole.log(cutHex(\"#000000\"))\n// \"000000\"\n*/\nexport function cutHex(hex: string) {\n  return (hex.charAt(0) === \"#\") ? hex.substring(1) : hex;\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {Array} rgb color\n* @example\nconsole.log(hexToRGB(\"#000000\"));\n// [0, 0, 0]\nconsole.log(hexToRGB(\"#201045\"));\n// [32, 16, 69]\n*/\nexport function hexToRGB(hex: string) {\n  const h = cutHex(hex);\n  const r = parseInt(h.substring(0, 2), 16);\n  const g = parseInt(h.substring(2, 4), 16);\n  const b = parseInt(h.substring(4, 6), 16);\n  let a = parseInt(h.substring(6, 8), 16) / 255;\n\n  if (isNaN(a)) {\n    a = 1;\n  }\n  return [r, g, b, a];\n}\n\n/**\n* convert 3-digit hex color to 6-digit hex color.\n* @memberof Color\n* @param {String} hex - 3-digit hex color\n* @return {String} 6-digit hex color\n* @example\nconsole.log(hex3to6(\"#123\"));\n// \"#112233\"\n*/\nexport function hex3to6(h: string) {\n  const r = h.charAt(1);\n  const g = h.charAt(2);\n  const b = h.charAt(3);\n  const arr = [\"#\", r, r, g, g, b, b];\n\n  return arr.join(\"\");\n}\n/**\n* convert hsl color to rgb color.\n* @memberof Color\n* @param {Array} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1)\n* @return {Array} rgb color\n* @example\nconsole.log(hslToRGB([150, 0.5, 0.4]));\n// [51, 153, 102]\n*/\nexport function hslToRGB(hsl: number[]) {\n  let h = hsl[0];\n  const s = hsl[1];\n  const l = hsl[2];\n\n  if (h < 0) {\n    h +=  Math.floor((Math.abs(h) + 360) / 360) * 360;\n  }\n  h %= 360;\n\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n  const m = l - c / 2;\n  let rgb;\n\n  if (h < 60) {\n    rgb = [c, x, 0];\n  } else if (h < 120) {\n    rgb = [x, c, 0];\n  } else if (h < 180) {\n    rgb = [0, c, x];\n  } else if (h < 240) {\n    rgb = [0, x, c];\n  } else if (h < 300) {\n    rgb = [x, 0, c];\n  } else if (h < 360) {\n    rgb = [c, 0, x];\n  }\n  const result = [\n    Math.round((rgb[0] + m) * 255),\n    Math.round((rgb[1] + m) * 255),\n    Math.round((rgb[2] + m) * 255),\n  ];\n\n  if (hsl.length > 3) {\n    result[3] = hsl[3];\n  }\n  return result;\n}\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {COLOR_MODELS, hexToRGB, hex3to6, hslToRGB} from \"./color\";\nimport {isString, isArray} from \"../utils\";\nimport { ObjectInterface, RGBA } from \"../consts\";\n\n/**\n* divide text by space.\n* @memberof Property\n* @function splitSpace\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitSpace(text: string) {\n  // divide comma(,)\n  const matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n\n  return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Property\n* @function splitComma\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nexport function splitComma(text: string) {\n  // divide comma(,)\n  // \"[^\"]*\"|'[^']*'\n  const matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n\n  return matches ? matches.map(str => str.trim()) : [];\n}\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const length = properties.length;\n  const obj = [];\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      continue;\n    }\n    obj.push({[matches[1].trim()]: toPropertyObject(matches[2].trim())});\n  }\n  return obj;\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n\t* convert text with parentheses to PropertyObject[type=color].\n\t* If the values are not RGBA model, change them RGBA mdoel.\n\t* @memberof Property\n\t* @function toColorObject\n\t* @param {String|PropertyObject} value - color value \"rgba(0,0,0,1)\"\n\t* @return {PropertyObject} PropertyObject[type=color]\n\t* @example\ntoColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function toColorObject(value: PropertyObject | number[] | string) {\n  let colorObject;\n\n  if (value instanceof PropertyObject) {\n    colorObject = value;\n  } else if (isArray(value)) {\n    colorObject = arrayToColorObject(value);\n  } else if (isString(value)) {\n    return stringToColorObject(value);\n  }\n  let colorArray = colorObject.value;\n  const length = colorArray.length;\n\n  if (length === 4) {\n    colorArray[3] = parseFloat(colorArray[3]);\n  } else if (length === 3) {\n    colorArray[3] = 1;\n  }\n  colorObject.setOptions({type: \"color\"});\n  const colorModel = colorObject.getOption(\"model\").toLowerCase();\n\n  // rgb hsl model to CHANGE rgba hsla\n  // string -> number\n  if (colorModel === \"rgb\") {\n    colorObject.setOptions({\n      type: \"color\",\n      model: RGBA,\n      prefix: `${RGBA}(`,\n      suffix: \")\",\n    });\n  }\n  switch (colorModel) {\n    case \"rgb\":\n    case RGBA:\n      for (let i = 0; i < 3; ++i) {\n        colorArray[i] = parseInt(colorArray[i], 10);\n      }\n      break;\n    case \"hsl\":\n    case \"hsla\":\n      for (let i = 1; i < 3; ++i) {\n        if (colorArray[i].indexOf(\"%\") !== -1) {\n          colorArray[i] = parseFloat(colorArray[i]) / 100;\n        }\n      }\n      // hsl, hsla to rgba\n      colorArray = hslToRGB(colorArray);\n      return arrayToColorObject(colorArray);\n    default:\n  }\n  return colorObject;\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(value: string) {\n  // [prefix, value, other]\n  const matches = (/([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g).exec(value);\n\n  if (!matches || matches.length < 4) {\n    return value;\n  }\n  const model = matches[1] || \"\";\n  const text = matches[2];\n  let prefix = `${model}(`;\n  let suffix = `)${matches[3]}`;\n  let separator = \",\";\n  let values;\n  // divide comma(,)\n  const obj = toPropertyObject(text);\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.getOption(\"separator\");\n    values = obj.value;\n    prefix += obj.getOption(\"prefix\");\n    suffix = obj.getOption(\"suffix\") + suffix;\n  } else {\n    values = [text];\n  }\n  const result = new PropertyObject(values, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n\n  if (COLOR_MODELS.indexOf(model) !== -1) {\n    return toColorObject(result);\n  } else {\n    return result;\n  }\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  let colorArray: number[];\n\n  if (value.charAt(0) === \"#\") {\n    if (value.length === 4) {\n      colorArray = hexToRGB(hex3to6(value));\n    } else {\n      colorArray = hexToRGB(value);\n    }\n    return arrayToColorObject(colorArray);\n  } else if (value.indexOf(\"(\") !== -1) {\n    // in bracket.\n    return stringToBracketObject(value);\n  } else {\n    throw new Error(`Invalid Format : Not a Color - ${value}`);\n  }\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: string | ObjectInterface<any> | any[]): any {\n  if (!isString(value)) {\n    if (Array.isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: ObjectInterface<any> = {}) {\n  const model = object.getOption(\"model\");\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => toObject(obj, result));\n  }\n  return result;\n}\n","import {\n  TRANSFORM, FILTER, ObjectInterface, NameType,\n  ANIMATION, ALIAS, TIMING_FUNCTION, PROPERTY, FUNCTION} from \"./consts\";\nimport {isObject, isString, isArray, isRole, getType} from \"./utils\";\nimport {toPropertyObject, splitStyle, toObject} from \"./utils/property\";\nimport PropertyObject from \"./PropertyObject\";\n\nfunction toInnerProperties(obj: ObjectInterface<string>) {\n  if (!obj) {\n    return \"\";\n  }\n  const arrObj = [];\n\n  for (const name in obj) {\n    arrObj.push(`${name.replace(/\\d/g, \"\")}(${obj[name]})`);\n  }\n  return arrObj.join(\" \");\n}\nfunction isPropertyObject(value: any): value is PropertyObject {\n  return value instanceof PropertyObject;\n}\n/* eslint-disable */\nfunction clone(target: ObjectInterface<any>, toValue = false) {\n  return merge({}, target, toValue);\n}\nfunction merge(to: ObjectInterface<any>, from: ObjectInterface<any>, toValue = false) {\n  for (const name in from) {\n    const value = from[name];\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n      to[name] = toValue ? value.toValue() : value.clone();\n    } else if (type === FUNCTION) {\n      to[name] = toValue ? getValue([name], value()) : value;\n    } else if (type === \"array\") {\n      to[name] = value.slice();\n    } else if (type === \"object\") {\n      if (isObject(to[name]) && !isPropertyObject(to[name])) {\n        merge(to[name], value, toValue);\n      } else {\n        to[name] = clone(value, toValue);\n      }\n    } else {\n      to[name] = from[name];\n    }\n  }\n  return to;\n}\n/* eslint-enable */\n\nfunction getValue(names: NameType[], value: any): any {\n  const type = getType(value);\n\n  if (type === PROPERTY) {\n    return value.toValue();\n  } else if (type === FUNCTION) {\n    if (names[0] !== TIMING_FUNCTION) {\n      return getValue(names, value());\n    }\n  } else if (type === \"object\") {\n    return clone(value, true);\n  }\n  return value;\n}\n/**\n* Animation's Frame\n* @class Scene.Frame\n* @param {Object} properties - properties\n* @example\nconst frame = new Scene.Frame({\n\tdisplay: \"none\"\n\ttransform: {\n\t\ttranslate: \"50px\",\n\t\tscale: \"5, 5\",\n\t}\n});\n */\nclass Frame {\n  public properties: ObjectInterface<any>;\n  constructor(properties: ObjectInterface<any> = {}) {\n    this.properties = {};\n    this.set(properties);\n  }\n  /**\n\t* get property value\n\t* @method Scene.Frame#get\n\t* @param {...Number|String|Scene.PropertyObject} args - property name or value\n\t* @example\n\tframe.get(\"display\") // => \"none\", \"block\", ....\n\tframe.get(\"transform\", \"translate\") // => \"10px,10px\"\n\t*/\n  public get(...args: NameType[]) {\n    const value = this.raw(...args);\n\n    return getValue(args[0] in ALIAS ? ALIAS[args[0]] : args, value);\n  }\n\n  public raw(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties)) {\n        return undefined;\n      }\n      properties = properties[params[i]];\n    }\n    return properties;\n  }\n  /**\n\t* remove property value\n\t* @method Scene.Frame#remove\n\t* @param {...String} args - property name\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.remove(\"display\")\n\t*/\n  public remove(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length - 1; ++i) {\n      if (!isObject(properties)) {\n        return this;\n      }\n      properties = properties[params[i]];\n    }\n    delete properties[params[length - 1]];\n    return this;\n  }\n  /**\n\t* set property\n\t* @method Scene.Frame#set\n\t* @param {...Number|String|Scene.PropertyObject} args - property names or values\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n// one parameter\nframe.set({\n\tdisplay: \"none\",\n\ttransform: {\n\t\ttranslate: \"10px, 10px\",\n\t\tscale: \"1\",\n\t},\n\tfilter: {\n\t\tbrightness: \"50%\",\n\t\tgrayscale: \"100%\"\n\t}\n});\n\n// two parameters\nframe.set(\"transform\", {\n\ttranslate: \"10px, 10px\",\n\tscale: \"1\",\n});\n\n// three parameters\nframe.set(\"transform\", \"translate\", \"50px\");\n\t*/\n  public set(...args: any[]) {\n    const length = args.length;\n    const params = args.slice(0, -1);\n    const value = args[length - 1];\n\n    if (params[0] in ALIAS) {\n      this._set(ALIAS[params[0]], value);\n    } else if (length === 2 && isArray(params[0])) {\n      this._set(params[0], value);\n    } else if (isObject(value)) {\n      if (isArray(value)) {\n        this._set(params, value);\n      } else if (isPropertyObject(value)) {\n        if (isRole(params)) {\n          this.set(...params, toObject(value));\n        } else {\n          this._set(params, value);\n        }\n      } else if (value instanceof Frame) {\n        this.merge(value);\n      } else {\n        for (const name in value) {\n          this.set(...params, name, value[name]);\n        }\n      }\n    } else if (isString(value)) {\n      if (isRole(params)) {\n        const obj = toPropertyObject(value);\n\n        if (isObject(obj)) {\n          this.set(...params, obj);\n        }\n        return this;\n      } else {\n        const styles = splitStyle(value);\n\n        styles.forEach(style => {\n          this.set(...params, style);\n        });\n        if (styles.length) {\n          return this;\n        }\n      }\n      this._set(params, value);\n    } else {\n      this._set(params, value);\n    }\n    return this;\n  }\n  /**\n\t* check that has property.\n\t* @method Scene.Frame#has\n\t* @param {...String} args - property name\n\t* @example\n\tframe.has(\"property\", \"display\") // => true or false\n\t*/\n  public has(...args: NameType[]) {\n    let properties = this.properties;\n    const params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n    const length = params.length;\n\n    if (!length) {\n      return false;\n    }\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties) || !(params[i] in properties)) {\n        return false;\n      }\n      properties = properties[params[i]];\n    }\n    return true;\n  }\n  /**\n\t* clone frame.\n\t* @method Scene.Frame#clone\n\t* @return {Scene.Frame} An instance of clone\n\t* @example\n\tframe.clone();\n\t*/\n  public clone() {\n    const frame = new Frame();\n\n    frame.merge(this);\n    return frame;\n  }\n  /**\n\t* merge one frame to other frame.\n\t* @method Scene.Frame#merge\n\t* @param {Scene.Frame} frame - target frame.\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.merge(frame2);\n\t*/\n  public merge(frame: Frame) {\n    const properties = this.properties;\n    const frameProperties = frame.properties;\n\n    if (!frameProperties) {\n      return this;\n    }\n    merge(properties, frameProperties);\n\n    return this;\n  }\n  public toObject() {\n    return clone(this.properties, true);\n  }\n  /**\n\t* Specifies an css object that coverted the frame.\n\t* @method Scene.Frame#toCSSObject\n\t* @return {object} cssObject\n\t*/\n  public toCSSObject() {\n    const properties = this.toObject();\n    const cssObject: ObjectInterface<string> = {};\n\n    for (const name in properties) {\n      if (isRole([name], true)) {\n        continue;\n      }\n      const value = properties[name];\n\n      if (name === TIMING_FUNCTION) {\n        cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n          (isString(value) ? value : value.easingName) || \"initial\";\n        continue;\n      }\n      cssObject[name] = value;\n    }\n    const transform = toInnerProperties(properties.transform);\n    const filter = toInnerProperties(properties.filter);\n\n    TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n    FILTER && filter && (cssObject[FILTER] = filter);\n    return cssObject;\n  }\n  /**\n\t* Specifies an css text that coverted the frame.\n\t* @method Scene.Frame#toCSS\n\t* @return {string} cssText\n\t*/\n  public toCSS() {\n    const cssObject = this.toCSSObject();\n    const cssArray = [];\n\n    for (const name in cssObject) {\n      cssArray.push(`${name}:${cssObject[name]};`);\n    }\n    return cssArray.join(\"\");\n  }\n  private _set(args: NameType[], value: any) {\n    let properties = this.properties;\n    const length = args.length;\n\n    for (let i = 0; i < length - 1; ++i) {\n      const name = args[i];\n\n      !(name in properties) && (properties[name] = {});\n      properties = properties[name];\n    }\n    if (!length) {\n      return;\n    }\n    properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n  }\n}\nexport default Frame;\n","import { ObjectInterface, RoleInterface } from \"./consts\";\nimport { isObject, isArray, isInProperties, toFixed } from \"./utils\";\nimport PropertyObject from \"./PropertyObject\";\nimport Frame from \"./Frame\";\n\nfunction getNames(names: ObjectInterface<any>, stack: string[]) {\n  let arr: string[][] = [];\n\n  for (const name in names) {\n    stack.push(name);\n\n    if (isObject(names[name])) {\n      arr = arr.concat(getNames(names[name], stack));\n    } else {\n      arr.push(stack.slice());\n    }\n    stack.pop();\n  }\n  return arr;\n}\nfunction updateFrame(names: ObjectInterface<any>, properties: ObjectInterface<any>) {\n  for (const name in properties) {\n    const value = properties[name];\n\n    if (!isObject(value) || isArray(value) || value instanceof PropertyObject) {\n      names[name] = true;\n      continue;\n    }\n    if (!isObject(names[name])) {\n      names[name] = {};\n    }\n    updateFrame(names[name], properties[name]);\n  }\n}\n/**\n* a list of objects in chronological order.\n* @memberof Scene\n*/\nclass Keyframes {\n  public times: number[];\n  public items: ObjectInterface<any>;\n  public names: RoleInterface;\n  /**\n\t */\n  constructor() {\n    this.times = [];\n    this.items = {};\n    this.names = {};\n  }\n  /**\n\t* A list of names\n\t* @return {string[][]} names\n\t* @example\nkeyframes.getNames(); // [[\"a\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n\t*/\n  public getNames() {\n    const names = this.names;\n\n    return getNames(names, []);\n  }\n  /**\n\t* Check if keyframes has propery's name\n\t* @param {...string[]} name - property's time\n\t* @return {Boolean} true: if has property, false: not\n\t* @example\nkeyframes.hasName(\"transform\", \"translate\"); // true or not\n\t*/\n  public hasName(...args: string[]) {\n    return isInProperties(this.names, args, true);\n  }\n  /**\n\t * update property names used in frames.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public update() {\n    const items = this.items;\n\n    for (const time in items) {\n      this.updateFrame(items[time]);\n    }\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} callback Function to execute for each element, taking three arguments\n\t * @param {Scene.Frame} [callback.item] The value of the item being processed in the keyframes.\n\t * @param {string} [callback.time] The time of the item being processed in the keyframes.\n\t * @param {object} [callback.items] The object that forEach() is being applied to.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public forEach(callback: (item: any, time: number, items: ObjectInterface<any>) => void) {\n    const times = this.times;\n    const items = this.items;\n\n    times.forEach(time => {\n      callback(items[time], time, items);\n    });\n  }\n  /**\n\t* update property names used in frame.\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.Keyframes} An instance itself\n\t* @example\nkeyframes.updateFrame(frame);\n\t*/\n  public updateFrame(frame: Frame) {\n    if (!frame) {\n      return this;\n    }\n    const properties = frame.properties;\n    const names = this.names;\n\n    updateFrame(names, properties);\n    return this;\n  }\n  /**\n\t * Get how long an animation should take to complete one cycle.\n\t * @return {number} duration\n\t */\n  public getDuration() {\n    const times = this.times;\n\n    return times.length === 0 ? 0 : times[times.length - 1];\n  }\n  /**\n\t * Set how long an animation should take to complete one cycle.\n\t * @param {number} duration - duration\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public setDuration(duration: number, originalDuration: number = this.getDuration()) {\n    const ratio = duration / originalDuration;\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(time => {\n      const time2 = toFixed(time * ratio);\n\n      obj[time2] = items[time];\n\n      return time2;\n    });\n    this.items = obj;\n  }\n  /**\n\t * Set how much time you want to push ahead.\n\t * @param {number} time - time\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public unshift(time: number) {\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(t => {\n      const time2 = toFixed(time + t);\n\n      obj[time2] = items[t];\n      return time2;\n    });\n    this.items = obj;\n    return this;\n  }\n  /**\n\t* get size of list\n\t* @return {Number} length of list\n\t*/\n  public size() {\n    return this.times.length;\n  }\n  /**\n\t* add object in list\n\t* @param {Number} time - frame's time\n\t* @param {Object} object - target\n\t* @return {Scene.Keyframes} An instance itself\n\t*/\n  public add(time: number, object: any) {\n    this.items[time] = object;\n    this.addTime(time);\n    return this;\n  }\n  /**\n\t* Check if keyframes has object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Boolean} true: if has time, false: not\n\t*/\n  public has(time: number) {\n    return time in this.items;\n  }\n  /**\n\t* get object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Object} object at that time\n\t*/\n  public get(time: number) {\n    return this.items[time];\n  }\n  /**\n\t* remove object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Keyframes} An instance itself\n\t*/\n  public remove(time: number) {\n    const items = this.items;\n\n    delete items[time];\n    this.removeTime(time);\n    return this;\n  }\n  private addTime(time: number) {\n    const times = this.times;\n    const length = times.length;\n    let pushIndex = length;\n\n    for (let i = 0; i < length; ++i) {\n      // if time is smaller than times[i], add time to index\n      if (time === times[i]) {\n        return this;\n      } else if (time < times[i]) {\n        pushIndex = i;\n        break;\n      }\n    }\n    this.times.splice(pushIndex, 0, time);\n    return this;\n  }\n  private removeTime(time: number) {\n    const index = this.times.indexOf(time);\n\n    if (index > -1) {\n      this.times.splice(index, 1);\n    }\n    return this;\n  }\n}\nexport default Keyframes;\n","/**\n* @namespace\n* @name Dot\n*/\n\nimport { isArray, splitUnit } from \"../utils\";\nimport PropertyObject from \"../PropertyObject\";\nimport { EasingType } from \"../Animator\";\nimport { getType } from \"../utils\";\nimport { PROPERTY, FUNCTION } from \"../consts\";\nimport { toPropertyObject } from \"./property\";\n\n/**\n* The dot product of Arrays\n* @memberof Dot\n* @function dotArray\n* @param {Array} a1 value1\n* @param {Array} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {Array|Object} Array.\n* @example\ndotArray([0, 0, 0, 1],[50, 50, 50, 1],0.5, 0.5);\n// => [25, 25, 25, 1]\n*/\nexport function dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  }\n  if (!isArray(a2)) {\n    return a1;\n  }\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\n/**\n* The dot product of PropertyObject(type=color)\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Dot\n* @function dotColor\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} PropertyObject(type=color).\n* @example\nvar colorObject = ......; //PropertyObject(type=color, model=\"rgba\", value=[254, 254, 254, 1]);\ndotColor(\"#000\",  colorObject, 0.5, 0.5);\n// \"#000\" => PropertyObject(type=color, model=\"rgba\", value=[0, 0, 0, 1]);\n// return => PropertyObject(type=color, model=\"rgba\", value=[127, 127, 127, 1]);\n*/\nexport function dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  if (b2 === 0) {\n    return color2;\n  }\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.getOption(\"model\");\n  const model2 = color2.getOption(\"model\");\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n/**\n* The dot product of Objects\n* @memberof Dot\n* @function dotObject\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} Array with Separator.\n* @example\ndotObject(PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)]),\nPropertyObject([\"9px\", \"solid\", rgba(50, 50, 50, 1)]),\n0.5, 0.5);\n// => PropertyObject([\"5px\", \"solid\", rgba(25, 25, 25, 1)])\n*/\nexport function dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.getOption(\"type\");\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.getOption(\"separator\") || a2.getOption(\"separator\"),\n    prefix: a1.getOption(\"prefix\") || a2.getOption(\"prefix\"),\n    suffix: a1.getOption(\"suffix\") || a2.getOption(\"suffix\"),\n    model: a1.getOption(\"model\") || a2.getOption(\"model\"),\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === \"array\") {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  // split number and unit of the value.\n  const r1 = b1 / (b1 + b2);\n  const r2 = 1 - r1;\n\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = v1.value * r2 + v2.value * r1;\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import { ObjectInterface } from \"../consts\";\n\nexport function hasClass(element: HTMLElement, className: string) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  }\n  return !!element.className.match(new RegExp(`(\\\\s|^)${className}(\\\\s|$)`));\n}\n\nexport function addClass(element: HTMLElement, className: string) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    element.className += ` ${className}`;\n  }\n}\n\nexport function removeClass(element: HTMLElement, className: string) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    const reg = new RegExp(`(\\\\s|^)${className}(\\\\s|$)`);\n\n    element.className = element.className.replace(reg, \" \");\n  }\n}\n\nexport function fromCSS(elements: HTMLElement | HTMLElement[] | NodeListOf<HTMLElement>, properties: string[]) {\n  if (!elements || !properties || !properties.length) {\n    return {};\n  }\n  let element;\n\n  if (elements instanceof Element) {\n    element = elements;\n  } else if (elements.length) {\n    element = elements[0];\n  } else {\n    return {};\n  }\n  const cssObject: ObjectInterface<any> = {};\n  const styles = window.getComputedStyle(element) as any;\n  const length = properties.length;\n\n  for (let i = 0; i < length; ++i) {\n    cssObject[properties[i]] = styles[properties[i]];\n  }\n  return cssObject;\n}\n","import Animator, { StateInterface, EasingType, isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n  isUndefined,\n  isObject,\n  isArray,\n  decamelize,\n  toFixed,\n  isFixed,\n} from \"./utils\";\nimport Keyframes from \"./Keyframes\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n  KEYFRAMES, ANIMATION, START_ANIMATION,\n  PREFIX, THRESHOLD, ObjectInterface, NameType,\n  TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, NORMAL, INFINITE,\n  REVERSE, EASING, RUNNING, PLAY, FILL_MODE, DIRECTION, ITERATION_COUNT, EASING_NAME, DELAY, PLAY_SPEED, DURATION\n} from \"./consts\";\nimport { addClass, removeClass, hasClass, fromCSS } from \"./utils/css\";\n\nfunction toId(text: string) {\n  return text.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nfunction makeId(selector?: boolean) {\n  for (; ;) {\n    const id = `${Math.floor(Math.random() * 100000)}`;\n\n    if (!selector) {\n      return id;\n    }\n    const checkElement = document.querySelector(`[data-scene-id=\"${id}\"]`);\n\n    if (!checkElement) {\n      return id;\n    }\n  }\n}\nfunction makeAnimationProperties(properties: ObjectInterface<string | number>) {\n  const cssArray = [];\n\n  for (const name in properties) {\n    cssArray.push(`${ANIMATION}-${decamelize(name)} : ${properties[name]};`);\n  }\n  return cssArray.join(\"\");\n}\n\ntype ElementsType = HTMLElement[] | NodeListOf<HTMLElement>;\n/**\n* manage Frame Keyframes and play keyframes.\n* @memberof Scene\n* @extends Scene.Animator\n* @example\nconst item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator {\n  public keyframes: Keyframes;\n  private elements: ElementsType;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst item = new Scene.SceneItem({\n\t\t0: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\t1: {\n\t\t\tdisplay: \"block\",\n\t\t\topacity: 0,\n\t\t},\n\t\t2: {\n\t\t\topacity: 1,\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.keyframes = new Keyframes();\n    this.elements = [];\n    this.load(properties, options);\n  }\n  public getDuration() {\n    return Math.max(this.state[DURATION], this.keyframes.getDuration());\n  }\n  public setDuration(duration: number) {\n    if (duration === 0) {\n      return this;\n    }\n    const originalDuration = this.getDuration();\n\n    if (originalDuration > 0) {\n      this.keyframes.setDuration(duration, originalDuration);\n    }\n    super.setDuration(toFixed(duration));\n    return this;\n  }\n  /**\n\t* set the unique indicator of the item.\n\t* @method Scene.SceneItem#setId\n\t* @param {String} [id] - the indicator of the item.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nconst item = new SceneItem();\n\nitem.setId(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public setId(id?: string) {\n    const elements = this.elements;\n    const length = elements.length;\n\n    this.setState({ id: id || makeId(!!length) });\n    const sceneId = toId(this.getId());\n\n    this.options.selector || (this.options.selector = `[data-scene-id=\"${sceneId}\"]`);\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      elements[i].setAttribute(\"data-scene-id\", sceneId);\n    }\n    return this;\n  }\n  /**\n\t* Specifies the unique indicator of the item.\n\t* @method Scene.SceneItem#getId\n\t* @return {String} the indicator of the item.\n\t* @example\nconst item = scene.newItem(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public getId() {\n    return this.state.id;\n  }\n  /**\n\t* Set properties to the sceneItem at that time\n\t* @method Scene.SceneItem#set\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\nconsole.log(item.get(0, \"a\")); // \"b\"\n\t*/\n  public set(time: any[] | number | string | ObjectInterface<any>, ...args: any[]) {\n    if (isObject(time)) {\n      this.load(time);\n      return this;\n    } else if (args[0]) {\n      if (args[0] instanceof SceneItem) {\n        const item: SceneItem = args[0];\n        const delay = item.getDelay();\n        const realTime = this.getUnitTime(time) + delay;\n        const { keys, values, frames } = item.getAllTimes(!!delay || !this.hasFrame(time));\n        const easing = this.getEasingName() !== item.getEasingName() ? item.getEasing() : 0;\n\n        keys.forEach(t => {\n          this.set(realTime + t, frames[values[t]]);\n        });\n        if (easing) {\n          this.set(realTime + keys[0], EASING, easing);\n          this.set(realTime + keys[keys.length - 1], EASING, \"initial\");\n        }\n        return this;\n      } else if (args.length === 1 && isArray(args[0])) {\n        args[0].forEach((item: any) => {\n          this.set(time, item);\n        });\n        return this;\n      }\n    }\n    const frame = this.newFrame(time);\n\n    frame.set(...args);\n    this.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Get properties of the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} args property's name or properties\n\t* @return {Number|String|Scene.PropertyObejct} property value\n\t* @example\nitem.get(0, \"a\"); // item.getFrame(0).get(\"a\");\nitem.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n\t*/\n  public get(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    return frame && frame.get(...args);\n  }\n  /**\n\t* remove properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.remove(0, \"a\");\n\t*/\n  public remove(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    frame && frame.remove(...args);\n    this.update();\n    return this;\n  }\n  /**\n\t* Append the item or object at the last time.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.append(new SceneItem({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n}));\nitem.append({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\nitem.set(item.getDuration(), {\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\n\t*/\n  public append(item: SceneItem | object) {\n    this.set(this.getDuration(), item);\n    return this;\n  }\n  /**\n\t* Push the front frames for the time and prepend the scene item or item object.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t*/\n  public prepend(item: SceneItem | object) {\n    if (item instanceof SceneItem) {\n      const delay = item.getDelay();\n      const duration = item.getIterationCount() === INFINITE ? item.getDuration() : item.getActiveDuration();\n      const unshiftTime = duration + delay;\n      const firstFrame = this.keyframes.get(0);\n\n      if (firstFrame) {\n        this.keyframes.remove(0);\n      }\n      this.keyframes.unshift(unshiftTime);\n      this.set(0, item);\n      this.set(unshiftTime + THRESHOLD, firstFrame);\n    } else {\n      this.prepend(new SceneItem(item));\n    }\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize items' keyframes.\n\t* @method Scene.SceneItem#setSelector\n\t* @param {string} selectors - Selectors to find elements in items.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setSelector(\"#id.class\");\n\t*/\n  public setSelector(selector: boolean | string) {\n    this.options.selector = selector === true ? this.state.id :\n      (selector || `[data-scene-id=\"${this.state.id}\"]`);\n    this.setElement(document.querySelectorAll(this.options.selector));\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize item's keyframes.\n\t* @method Scene.SceneItem#setElement\n\t* @param {Element|Array|string} elements - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n\t*/\n  public setElement(elements: HTMLElement | ElementsType) {\n    if (!elements) {\n      return this;\n    }\n    this.elements = (elements instanceof Element) ? [elements] : elements;\n    this.setId();\n    return this;\n  }\n  /**\n\t* add css styles of items's element to the frame at that time.\n\t* @method Scene.SceneItem#setCSS\n\t* @param {Array} properties - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public setCSS(time: number, properties: string[]) {\n    this.set(time, fromCSS(this.elements, properties));\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t* update property names used in frames.\n\t* @method Scene.SceneItem#update\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.update();\n\t*/\n  public update() {\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* update property names used in frame.\n\t* @method Scene.SceneItem#updateFrame\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.updateFrame(time, this.get(time));\n\t*/\n  public updateFrame(frame: Frame) {\n    this.keyframes.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Create and add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#newFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} Created frame.\n\t* @example\nitem.newFrame(time);\n\t*/\n  public newFrame(time: string | number) {\n    let frame = this.getFrame(time);\n\n    if (frame) {\n      return frame;\n    }\n    frame = new Frame();\n    this.setFrame(time, frame);\n    return frame;\n  }\n  /**\n\t* Add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#setFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setFrame(time, frame);\n\t*/\n  public setFrame(time: string | number, frame: Frame) {\n    this.keyframes.add(this.getUnitTime(time), frame);\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* get sceneItem's frame at that time\n\t* @method Scene.SceneItem#getFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} sceneItem's frame at that time\n\t* @example\nconst frame = item.getFrame(time);\n\t*/\n  public getFrame(time: number | string) {\n    return this.keyframes.get(this.getUnitTime(time));\n  }\n  /**\n\t* check if the item has a frame at that time\n\t* @method Scene.SceneItem#hasFrame\n\t* @param {Number} time - frame's time\n\t* @return {Boolean} true: the item has a frame // false: not\n\t* @example\nif (item.hasFrame(10)) {\n\t// has\n} else {\n\t// not\n}\n\t*/\n  public hasFrame(time: number | string) {\n    return this.keyframes.has(this.getUnitTime(time));\n  }\n  /**\n\t* remove sceneItem's frame at that time\n\t* @method Scene.SceneItem#removeFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.removeFrame(time);\n\t*/\n  public removeFrame(time: number) {\n    const keyframes = this.keyframes;\n\n    keyframes.remove(time);\n    keyframes.update();\n\n    return this;\n  }\n  /**\n\t* Copy frame of the previous time at the next time.\n\t* @method Scene.SceneItem#copyFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(0) equal getFrame(1)\nitem.copyFrame(0, 1);\n\t*/\n  public copyFrame(fromTime: ObjectInterface<number> | number | string, toTime: number) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.copyFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const copyFrame = frame.clone();\n\n    this.setFrame(toTime, copyFrame);\n    return this;\n  }\n  /**\n\t* merge frame of the previous time at the next time.\n\t* @method Scene.SceneItem#mergeFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number|string} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(1) contains getFrame(0)\nitem.merge(0, 1);\n\t*/\n  public mergeFrame(fromTime: ObjectInterface<number> | number | string, toTime: number | string) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.mergeFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const toFrame = this.newFrame(toTime);\n\n    toFrame.merge(frame);\n    return this;\n  }\n  /**\n\t* Get frame of the current time\n\t* @method Scene.SceneItem#getNowFrame\n\t* @param {Number} time - the current time\n\t* @param {function} easing - the speed curve of an animation\n\t* @return {Scene.Frame} frame of the current time\n\t* @example\nlet item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n// opacity: 0.7; display:\"block\";\nconst frame = item.getNowFrame(1.7);\n\t*/\n  public getNowFrame(time: number, easing?: EasingType) {\n    const frame = new Frame();\n    const names = this.keyframes.getNames();\n    const { left, right } = this._getNearTimeIndex(time);\n    const realEasing = this._getEasing(time, left, right, this.getEasing() || easing);\n\n    names.forEach(properties => {\n      const value = this._getNowValue(time, left, right, properties, realEasing);\n\n      if (isUndefined(value)) {\n        return;\n      }\n      frame.set(properties, value);\n    });\n    return frame;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (isArray(properties)) {\n      const length = properties.length;\n\n      for (let i = 0; i < length; ++i) {\n        const time = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n        this.set(time, properties[i]);\n      }\n    } else if (properties.keyframes) {\n      this.set(properties.keyframes);\n    } else {\n      for (const time in properties) {\n        if (time === \"options\" || time === \"keyframes\") {\n          continue;\n        }\n        const value = properties[time];\n        const realTime = this.getUnitTime(time);\n\n        if (typeof value === \"number\") {\n          this.mergeFrame(value, realTime);\n          continue;\n        }\n        this.set(realTime, value);\n      }\n    }\n    options && this.setOptions(options);\n    return this;\n  }\n  /**\n\t * clone SceneItem.\n\t * @method Scene.SceneItem#clone\n\t * @param {AnimatorOptions} [options] animator options\n\t * @return {Scene.SceneItem} An instance of clone\n\t * @example\n\t * item.clone();\n\t */\n  public clone(options = {}) {\n    const item = new SceneItem();\n\n    item.setOptions(this.state);\n    item.setOptions(options);\n    this.keyframes.forEach((frame: Frame, time: number) => item.setFrame(time, frame.clone()));\n    return item;\n  }\n  public setOptions(options: StateInterface = {}) {\n    super.setOptions(options);\n    const { id, selector, duration, elements } = options;\n\n    duration && this.setDuration(duration);\n    id && this.setId(id);\n    if (elements) {\n      this.setElement(elements);\n    } else if (selector) {\n      this.setSelector(selector === true ? this.state.id : selector);\n    }\n    return this;\n  }\n  public getAllTimes(isStartZero = true, options: StateInterface = {}) {\n    const times = this.keyframes.times.slice();\n    let length = times.length;\n    const keys: number[] = [];\n    const values: ObjectInterface<number> = {};\n\n    if (!length) {\n      return { keys: [], values: {}, frames: {} };\n    }\n    const frames: ObjectInterface<Frame> = {};\n    const duration = this.getDuration();\n    const direction = options[DIRECTION] || this.state[DIRECTION];\n    const isShuffle = direction === ALTERNATE || direction === ALTERNATE_REVERSE;\n    (!this.getFrame(0)) && times.unshift(0);\n    (!this.getFrame(duration)) && times.push(duration);\n    length = times.length;\n    let iterationCount = options[ITERATION_COUNT] || this.state[ITERATION_COUNT];\n\n    iterationCount = iterationCount !== INFINITE ? iterationCount : 1;\n    const totalDuration = iterationCount * duration;\n\n    for (let i = 0; i < iterationCount; ++i) {\n      const isReverse = isDirectionReverse(i, iterationCount, direction);\n      const start = i * duration;\n\n      for (let j = 0; j < length; ++j) {\n        if (isShuffle && i !== 0 && j === 0) {\n          // pass duplicate\n          continue;\n        }\n        // isStartZero is keytimes[0] is 0 (i === 0 & j === 0)\n        const threshold = j === 0 && (i === 0 ? !isStartZero : !isShuffle) ? THRESHOLD : 0;\n        const keyvalue = toFixed(isReverse ? times[length - 1 - j] : times[j]);\n        const time = toFixed(isReverse ? duration - keyvalue : keyvalue);\n        const keytime = toFixed(start + time + threshold);\n\n        if (totalDuration < keytime) {\n          break;\n        }\n        keys.push(keytime);\n        values[keytime] = keyvalue;\n\n        if (!frames[keyvalue]) {\n          const frame = this.getFrame(keyvalue);\n\n          if (!frame || j === 0 || j === length - 1 || frame.has(\"transform\") || frame.has(\"filter\")) {\n            frames[keyvalue] = this.getNowFrame(keyvalue);\n          } else {\n            frames[keyvalue] = frame;\n          }\n        }\n      }\n    }\n    if (keys[keys.length - 1] < totalDuration) {\n      // last time === totalDuration\n      const isReverse = isDirectionReverse(iterationCount, iterationCount, direction);\n      const keyvalue = toFixed(duration * (isReverse ? 1 - iterationCount % 1 : iterationCount % 1));\n\n      keys.push(totalDuration);\n      values[totalDuration] = keyvalue;\n      !frames[keyvalue] && (frames[keyvalue] = this.getNowFrame(keyvalue));\n    }\n    return { keys, values, frames };\n  }\n  /**\n\t* Specifies an css text that coverted the keyframes of the item.\n\t* @param {Array} [duration=this.getDuration()] - elements to synchronize item's keyframes.\n\t* @param {Array} [options={}] - parent options to unify options of items.\n\t* @example\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public toCSS(duration = this.getDuration(), options: StateInterface = {}) {\n    const state = this.state;\n    const selector = state.selector || this.options.selector;\n\n    if (!selector) {\n      return \"\";\n    }\n    const id = this._getId();\n    // infinity or zero\n    const isParent = !isUndefined(options[ITERATION_COUNT]);\n    const isZeroDuration = duration === 0;\n    const playSpeed = (options[PLAY_SPEED] || 1);\n    const delay = ((isParent ? options[DELAY] : state[DELAY]) || 0) / playSpeed;\n    const easingName = (state[EASING] && state[EASING_NAME]) ||\n      (isParent && options[EASING] && options[EASING_NAME]) || state[EASING_NAME];\n    const iterationCount = (!isZeroDuration && options[ITERATION_COUNT]) || state[ITERATION_COUNT];\n    const fillMode = (options[FILL_MODE] !== \"forwards\" && options[FILL_MODE]) || state[FILL_MODE];\n    const direction = (options[DIRECTION] !== NORMAL && options[DIRECTION]) || state[DIRECTION];\n    const cssText = makeAnimationProperties({\n      fillMode,\n      direction,\n      iterationCount,\n      delay: `${delay}s`,\n      name: `${PREFIX}KEYFRAMES_${toId(id)}`,\n      duration: `${duration / playSpeed}s`,\n      timingFunction: easingName,\n    });\n\n    const css = `${selector}.${START_ANIMATION} {\n\t\t\t${cssText}\n\t\t}\n\t\t${this._toKeyframes(duration, isParent)}`;\n\n    return css;\n  }\n  public exportCSS(duration = this.getDuration(), options: StateInterface = {}) {\n    if (!this.elements.length) {\n      return;\n    }\n    const id = this._getId();\n    const styleElement: HTMLElement = document.querySelector(`#${PREFIX}${id}`);\n    const css = this.toCSS(duration, options);\n\n    if (styleElement) {\n      styleElement.innerText = css;\n    } else {\n      document.body.insertAdjacentHTML(\"beforeend\",\n        `<style id=\"${PREFIX}STYLE_${id}\">${css}</style>`);\n    }\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nitem.playCSS();\nitem.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(exportCSS = true, properties = {}) {\n    if (!ANIMATION || this.getPlayState() === RUNNING) {\n      return this;\n    }\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    if (this.isEnded()) {\n      this.setTime(0);\n    }\n    exportCSS && this.exportCSS();\n\n    const cssText = makeAnimationProperties(properties);\n\n    for (let i = 0; i < length; ++i) {\n      const element = elements[i];\n\n      element.style.cssText += cssText;\n      if (hasClass(element, START_ANIMATION)) {\n        removeClass(element, START_ANIMATION);\n        (el => {\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              addClass(el, START_ANIMATION);\n            });\n          });\n        })(element);\n      } else {\n        addClass(element, START_ANIMATION);\n      }\n    }\n\n    this.setState({ playCSS: true });\n    this.setPlayState(RUNNING);\n    this.trigger(PLAY);\n\n    const duration = this.getDuration();\n    const animatedElement = elements[0];\n    const animationend = () => {\n      this.end();\n\n      if (!animatedElement) {\n        return;\n      }\n      animatedElement.removeEventListener(\"animationend\", animationend);\n      animatedElement.removeEventListener(\"animationiteration\", animationiteration);\n    };\n    const animationiteration = ({ elapsedTime }: any) => {\n      const currentTime = elapsedTime;\n      const iterationCount = currentTime / duration;\n\n      this.state.currentTime = currentTime;\n      this.setCurrentIterationCount(iterationCount);\n    };\n    animatedElement.addEventListener(\"animationend\", animationend);\n    animatedElement.addEventListener(\"animationiteration\", animationiteration);\n    return this;\n  }\n  private _getId() {\n    return this.state.id || this.setId().getId();\n  }\n  private _getEasing(time: number, left: number, right: number, easing: EasingType) {\n    if (this.keyframes.hasName(TIMING_FUNCTION)) {\n      const nowEasing = this._getNowValue(time, left, right, [TIMING_FUNCTION], 0, true);\n\n      return typeof nowEasing === \"function\" ? nowEasing : easing;\n    }\n    return easing;\n  }\n  private _toKeyframes(duration = this.getDuration(), isParent: boolean) {\n    const id = this._getId();\n    const state = this.state;\n    const playSpeed = state[PLAY_SPEED];\n    const iterationCount = state[ITERATION_COUNT];\n    const delay = isParent ? state[DELAY] : 0;\n    const direction = isParent ? state[DIRECTION] : NORMAL;\n    const { keys, values, frames } = this.getAllTimes(true, {\n      duration,\n      delay,\n      direction,\n      iterationCount: isParent && iterationCount !== INFINITE ? iterationCount : 1,\n      isCSS: true,\n    });\n    const length = keys.length;\n    const css: ObjectInterface<string> = {};\n    const keyframes: string[] = [];\n\n    for (const time in frames) {\n      css[time] = frames[time].toCSS();\n    }\n    if (!keys.length) {\n      return \"\";\n    }\n    if (delay) {\n      keyframes.push(`0%{${frames[0]}}`);\n      if (direction === REVERSE || direction === ALTERNATE_REVERSE) {\n        keyframes.push(`${delay / playSpeed / duration * 100 - 0.00001}%{${css[0]}}`);\n      }\n    }\n    keys.forEach(time => {\n      keyframes.push(`${(delay + time) / playSpeed / duration * 100}%{${css[values[time]]}}`);\n    });\n    const lastTime = keys[length - 1];\n\n    if ((delay + lastTime) / playSpeed < duration) {\n      // not 100%\n      keyframes.push(`100%{${css[values[lastTime]]}`);\n    }\n    return `@${KEYFRAMES} ${PREFIX}KEYFRAMES_${toId(id)}{\n\t\t\t${keyframes.join(\"\\n\")}\n\t\t}`;\n  }\n  private _getNowValue(\n    time: number,\n    left: number,\n    right: number,\n    properties: string[],\n    easing: EasingType = this.getEasing(),\n    usePrevValue: boolean = isFixed(properties),\n  ) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    let prevTime;\n    let nextTime;\n    let prevFrame;\n    let nextFrame;\n\n    for (let i = left; i >= 0; --i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        prevTime = times[i];\n        prevFrame = frame;\n        break;\n      }\n    }\n    const prevValue = prevFrame && prevFrame.raw(...properties);\n\n    if (usePrevValue) {\n      return prevValue;\n    }\n    for (let i = right; i < length; ++i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        nextTime = times[i];\n        nextFrame = frame;\n        break;\n      }\n    }\n    const nextValue = nextFrame && nextFrame.raw(...properties);\n\n    if (!prevFrame || isUndefined(prevValue)) {\n      return nextValue;\n    }\n    if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n      return prevValue;\n    }\n    if (prevTime < 0) {\n      prevTime = 0;\n    }\n    return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n  }\n  private _getNearTimeIndex(time: number) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (times[i] === time) {\n        return { left: i, right: i };\n      } else if (times[i] > time) {\n        return { left: i === 0 ? 0 : i - 1, right: i };\n      }\n    }\n    return { left: length - 1, right: length - 1 };\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const easing = this.getEasing() || parentEasing;\n    const frame = this.getNowFrame(iterationTime, easing);\n    const currentTime = this.getTime();\n\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @event Scene.SceneItem#animate\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Scene.Frame} param.frame frame of that time.\n\t\t */\n    this.trigger(\"animate\", {\n      frame,\n      currentTime,\n      time: iterationTime,\n    });\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return frame;\n    }\n    const attributes = frame.get(\"attribute\");\n\n    if (attributes) {\n      for (const name in (attributes as any)) {\n        for (let i = 0; i < length; ++i) {\n          elements[i].setAttribute(name, attributes[name]);\n        }\n      }\n    }\n    const cssText = frame.toCSS();\n\n    if (this.state.cssText !== cssText) {\n      this.state.cssText = cssText;\n\n      for (let i = 0; i < length; ++i) {\n        elements[i].style.cssText += cssText;\n      }\n      return frame;\n    }\n  }\n}\n\nexport default SceneItem;\n","import Animator, { StateInterface, EasingType } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ANIMATION, ObjectInterface, RUNNING, ENDED, PLAY, ITERATION, ANIMATE } from \"./consts\";\nimport Frame from \"./Frame\";\n\n/**\n* manage sceneItems and play Scene.\n* @extends Scene.Animator\n*/\nclass Scene extends Animator {\n\n  public items: ObjectInterface<Scene | SceneItem>;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst scene = new Scene({\n\t\titem1: {\n\t\t\t0: {\n\t\t\t\tdisplay: \"none\",\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tdisplay: \"block\",\n\t\t\t\topacity: 0,\n\t\t\t},\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t},\n\t\titem2: {\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.items = {};\n    this.load(properties, options);\n  }\n  public setId(id: string = `scene${Math.floor(Math.random() * 100000)}`) {\n    this.state.id = id;\n    return this;\n  }\n  public getId() {\n    return this.state.id;\n  }\n  public getDuration() {\n    const items = this.items;\n    let time = 0;\n\n    for (const id in items) {\n      const item = items[id];\n\n      time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n    }\n    return time;\n  }\n  public setDuration(duration: number) {\n    const items = this.items;\n    const sceneDuration = this.getDuration();\n\n    if (duration === 0 || !isFinite(sceneDuration)) {\n      return this;\n    }\n    if (sceneDuration === 0) {\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDuration(duration);\n      }\n    } else {\n      const ratio = duration / sceneDuration;\n\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDelay(item.getDelay() * ratio);\n        item.setDuration(item.getDuration() * ratio);\n      }\n    }\n    return this;\n  }\n  /**\n\t* get item in scene by name\n\t* @method Scene#getItem\n\t* @param {string} name - item's name\n\t* @return {Scene.SceneItem} item\n\t* @example\nconst item = scene.getItem(\"item1\")\n\t*/\n  public getItem(name: string) {\n    return this.items[name];\n  }\n  /**\n\t* create item in scene\n\t* @method Scene#newItem\n\t* @param {String} name - name of item to create\n\t* @param {StateOptions} options - The option object of SceneItem\n\t* @return {Sceme.SceneItem} Newly created item\n\t* @example\nconst item = scene.newItem(\"item1\")\n\t*/\n  public newItem(name: string, options = {}) {\n    if (name in this.items) {\n      return this.items[name];\n    }\n    const item = new SceneItem();\n\n    this.setItem(name, item);\n    item.setOptions(options);\n\n    return item;\n  }\n  /**\n\t* add a sceneItem to the scene\n\t* @param {String} name - name of item to create\n\t* @param {Scene.SceneItem} item - sceneItem\n\t* @example\nconst item = scene.newItem(\"item1\")\n\t*/\n  public setItem(name: string, item?: Scene | SceneItem) {\n    if (item instanceof Animator) {\n      item.setId(name);\n    }\n    this.items[name] = item;\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} func Function to execute for each element, taking three arguments\n\t * @param {Scene | Scene.SceneItem} [func.item] The value of the item being processed in the scene.\n\t * @param {string} [func.name] The name of the item being processed in the scene.\n\t * @param {object} [func.items] The object that forEach() is being applied to.\n\t * @return {Scene} An instance itself\n\t */\n  public forEach(func: (item?: Scene | SceneItem, name?: string, items?: ObjectInterface<Scene | SceneItem>) => void) {\n    const items = this.items;\n\n    for (const name in items) {\n      func(items[name], name, items);\n    }\n    return this;\n  }\n  /**\n\t * Export the CSS of the items to the style.\n\t * @return {Scene} An instance itself\n\t */\n  public exportCSS(duration: number = this.getDuration(), state?: StateInterface) {\n    const items = this.items;\n    let totalDuration = duration;\n\n    if (!totalDuration || !isFinite(totalDuration)) {\n      totalDuration = 0;\n    }\n    for (const id in items) {\n      const item = items[id];\n\n      item.exportCSS(totalDuration, this.state);\n    }\n    return this;\n  }\n  public append(item: SceneItem | Scene) {\n    item.setDelay(item.getDelay() + this.getDuration());\n    this.setItem(item.getId() || item.setId().getId(), item);\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @return {Scene} An instance itself\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nscene.playCSS();\nscene.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(exportCSS = true, properties = {}) {\n    if (!ANIMATION || this.getPlayState() === RUNNING) {\n      return this;\n    }\n    exportCSS && this.exportCSS();\n\n    const items = this.items;\n    let animationItem: Scene | SceneItem;\n\n    for (const id in items) {\n      const item = items[id];\n\n      item.playCSS(false, properties);\n      if (item.getState(\"playCSS\")) {\n        animationItem = item;\n      }\n    }\n    if (!animationItem) {\n      return this;\n    }\n    const animationiteration = ({ currentTime, iterationCount }: { currentTime: number, iterationCount: number }) => {\n      this.state.currentTime = currentTime;\n      this.setCurrentIterationCount(iterationCount);\n    };\n    const animationend = () => {\n      this.end();\n      this.setState({ playCSS: false });\n      animationItem.off(ENDED, animationend);\n      animationItem.off(ITERATION, animationiteration);\n    };\n    animationItem.on(ENDED, animationend);\n    animationItem.on(ITERATION, animationiteration);\n    this.setState({ playCSS: true });\n    this.setPlayState(RUNNING);\n    this.trigger(PLAY);\n    return this;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (!properties) {\n      return this;\n    }\n    const isSelector = options && options.selector;\n\n    for (const name in properties) {\n      if (name === \"options\") {\n        continue;\n      }\n      const object = properties[name];\n      let item;\n\n      if (object instanceof Scene || object instanceof SceneItem) {\n        this.setItem(name, object);\n        item = object;\n      } else {\n        item = this.newItem(name);\n        item.load(object);\n      }\n      isSelector && item.setSelector(name);\n    }\n    this.setOptions(options);\n  }\n  public setSelector(_: string | boolean) {\n    const isSelector = this.options.selector;\n\n    this.forEach((item, name) => {\n      item.setSelector(isSelector ? name : false);\n    });\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const items = this.items;\n    const easing = this.getEasing() || parentEasing;\n    const frames: ObjectInterface<ObjectInterface<any> | Frame> = {};\n\n    for (const id in items) {\n      const item = items[id];\n\n      frames[id] = item.animate(Math.max(iterationTime * item.getPlaySpeed() - item.getDelay(), 0), easing);\n    }\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Frame} param.frames frame of that time.\n\t\t */\n    this.trigger(ANIMATE, {\n      currentTime: this.getTime(),\n      time: iterationTime,\n      frames,\n    });\n    return frames;\n  }\n}\n\nexport default Scene;\n","\nimport { StateInterface } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface } from \"./consts\";\n\n/**\n * @namespace presets\n */\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func set\n * @param {string | string[]} property - property to set effect\n * @param {any[]} values - values of 100%\n * @param {AnimatorOptions} [options]\n * @example\n// import {set, blink} from \"scenejs\";\n// set(\"opacity\", [0, 1, 0], {duration: 2});\nScene.set(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\nScene.blink({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function set(property: string | string[], values: any[], options: StateInterface) {\n  const item = new SceneItem({}, options);\n  const length = values.length;\n\n  for (let i = 0; i < length; ++i) {\n    item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n  }\n  return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof presets\n * @func zoomIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {set, zoomIn} from \"scenejs\";\n// zoomIn({duration: 2});\nScene.zoomIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof presets\n * @func zoomOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {zoomOut} from \"scenejs\";\n// zoomOut({duration: 2});\nScene.zoomOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof presets\n * @func wipeIn\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeIn} from \"scenejs\";\n// wipeIn({property: \"left\", duration: 2});\nScene.wipeIn({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof presets\n * @func wipeOut\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeOut} from \"scenejs\";\n// wipeOut({property: \"left\", duration: 2});\nScene.wipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func transition\n * @param {Scene.SceneItem} item1 - Item that end effect\n * @param {Scene.SceneItem} item2 - Item that start effect\n * @param {AnimatorOptions} options\n * @param {object} options.from The starting properties of item1 and end properties of item2\n * @param {object} options.to The starting properties of item2 and end properties of item1\n * @param {number} options.duration animation's duration\n * @param {number} [options.time] start time of item1 <br/> <strong>default: item1.getDuration() - duration</strong>\n * @example\n// import {transition} from \"scenejs\";\ntransition(item1, item2, {\n\tfrom: {\n\t\topacity: 1,\n\t},\n\tto: {\n\t\topacity: 0,\n\t},\n\tduration: 0.1,\n});\n\n// Same\nitem1.set({\n\t[item1.getDuration() - 0.1]: {\n\t\topacity: 1,\n\t},\n\t[item1.getDuration()]: {\n\t\topacity: 0,\n\t}\n});\nitem2.set({\n\t0: {\n\t\topacity: 0,\n\t},\n\t0.1: {\n\t\topacity: 1,\n\t}\n});\n */\nexport function transition(item1: SceneItem, item2: SceneItem, {\n  from,\n  to,\n  duration = item1.getDuration(),\n  time = Math.max(item1.getDuration() - duration, 0),\n}: { from: ObjectInterface<any>, to: ObjectInterface<any>, duration?: number, time: number }) {\n  item1.set({\n    [time]: from,\n    [time + duration]: to,\n  });\n  item2.set({\n    0: to,\n    [duration]: from,\n  });\n}\n\n/**\n * Make a fade in effect.\n * @memberof presets\n * @func fadeIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeIn} from \"scenejs\";\n// fadeIn({duration: 2});\nScene.fadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof presets\n * @func fadeOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeOut} from \"scenejs\";\n// fadeOut({duration: 2});\nScene.fadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof presets\n * @func blink\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {blink} from \"scenejs\";\n// blink({duration: 2});\nScene.blink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to, from], arguments[0]);\n}\n","import Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport Frame from \"./Frame\";\nimport Keyframes from \"./Keyframes\";\nimport PropertyObject from \"./PropertyObject\";\nimport Animator from \"./Animator\";\nimport * as _presets from \"./presets\";\n\n/**\n* version info\n* @name Scene.VERSION\n* @memberof Scene\n* @static\n* @type {string}\n* @example\n* Scene.VERSION // #__VERSION__#\n*/\nexport const VERSION: string = \"#__VERSION__#\";\nexport { SceneItem, Frame, Animator, Keyframes, PropertyObject };\nexport { bezier, EASE_IN_OUT, EASE_IN, EASE_OUT, EASE, LINEAR, steps, STEP_START, STEP_END } from \"./easing\";\nexport { set, transition, wipeIn, wipeOut, fadeIn, fadeOut, blink, zoomIn, zoomOut} from \"./presets\";\nexport { OPTIONS, EVENTS } from \"./consts\";\nexport { setRole, setAlias } from \"./utils\";\nexport { Scene as default };\n"],"names":["PREFIX","TIMING_FUNCTION","ROLES","transform","filter","attribute","ALIAS","easing","FIXED","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","ITERATION_TIME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","ITERATION","RGBA","START_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","FUNCTION","PROPERTY","OPTIONS","EVENTS","prefixes","checkProperties","property","styles","document","body","documentElement","style","length","i","name","TRANSFORM","FILTER","ANIMATION","KEYFRAMES","replace","value","options","prefix","suffix","model","type","separator","setOptions","init","Object","assign","index","arr","map","v","PropertyObject","clone","join","toValue","func","forEach","split","setAlias","alias","setRole","names","isProperty","isFixedProperty","roles","fixed","getType","isArray","toFixed","num","Math","round","isInProperties","args","isCheckTrue","role","isRole","isFixed","isUndefined","isObject","Array","isString","splitUnit","text","matches","exec","unit","NaN","parseFloat","decamelize","str","all","letter","letter2","toLowerCase","events","callback","on","_this","event","push","callbacks","indexOf","splice","_i","data","target","currentTarget","apply","cubic","y1","y2","t","t2","solveFromX","x1","x2","x","solveX","dx","abs","bezier","max","min","easingName","steps","count","position","time","level","floor","STEP_START","STEP_END","LINEAR","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","lastTime","camelize","toUpperCase","GetterSetter","getter","setter","parent","constructor","prototype","requestAnimFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","currTime","Date","now","timeToCall","id","setTimeout","isDirectionReverse","currentIterationCount","iteraiontCount","direction","setters","getters","tslib_1","_super","state","iterationCount","delay","fillMode","playSpeed","currentTime","iterationTime","tickTime","prevTime","playState","duration","curveArray","setState","setEasing","setDuration","Infinity","getActiveDuration","getDuration","getTime","animator","play","isEnded","setTickTime","tick","trigger","pause","setTime","isTick","activeDuration","getUnitTime","calculateIterationTime","isDelay","getIterationTime","getIterationCount","object","_a","passIterationCount","currentIterationTime","setIterationTime","setCurrentIterationCount","isReverse","isForwards","end","Animator","EventTrigger","COLOR_MODELS","cutHex","hex","charAt","substring","hexToRGB","h","r","parseInt","g","b","a","isNaN","hex3to6","hslToRGB","hsl","s","l","c","m","rgb","result","splitSpace","match","splitComma","trim","splitStyle","properties","obj","toPropertyObject","arrayToColorObject","toColorObject","colorObject","stringToColorObject","colorArray","colorModel","getOption","stringToBracketObject","values","arrayToPropertyObject","Error","toObject","size","get","toInnerProperties","arrObj","isPropertyObject","merge","to","from","getValue","slice","set","raw","params","undefined","_set","Frame","frame","frameProperties","cssObject","toCSSObject","cssArray","getNames","stack","concat","pop","updateFrame","times","items","originalDuration","ratio","time2","addTime","removeTime","pushIndex","dotArray","a1","a2","b1","b2","v1","dot","dotColor","color1","color2","value1","value2","model1","model2","dotObject","a1Type","type1","type2","isFunction1","isFunction2","r1","r2","v2","dotValue","nextTime","prevValue","nextValue","hasClass","element","className","classList","contains","RegExp","addClass","add","removeClass","remove","reg","fromCSS","elements","Element","getComputedStyle","toId","makeId","selector","random","checkElement","querySelector","makeAnimationProperties","keyframes","Keyframes","load","sceneId","getId","setAttribute","SceneItem","item","getDelay","realTime_1","keys","values_1","frames_1","getEasingName","getEasing","newFrame","getFrame","update","unshiftTime","firstFrame","unshift","prepend","setElement","querySelectorAll","setId","parentEasing","_animate","isNumber","setFrame","has","fromTime","toTime","copyFrame","mergeFrame","toFrame","left","right","realEasing","_getEasing","_getNowValue","realTime","setSelector","isStartZero","frames","isShuffle","totalDuration","start","j","threshold","keyvalue","keytime","getNowFrame","_getId","isParent","isZeroDuration","cssText","timingFunction","css","_toKeyframes","styleElement","toCSS","innerText","insertAdjacentHTML","exportCSS","getPlayState","el","playCSS","setPlayState","animatedElement","animationend","removeEventListener","animationiteration","elapsedTime","addEventListener","hasName","nowEasing","usePrevValue","prevFrame","nextFrame","attributes","getTotalDuration","getPlaySpeed","sceneDuration","isFinite","setDelay","setItem","animationItem","getState","off","isSelector","Scene","newItem","_","animate","zoomIn","_b","_c","arguments","zoomOut","wipeIn","_d","wipeOut","transition","item1","item2","_e","fadeIn","fadeOut","blink","VERSION"],"mappings":"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"}