{"version":3,"file":"scene.common.js","sources":["../src/consts.ts","../src/EventTrigger.ts","../src/easing.ts","../src/PropertyObject.ts","../src/utils.ts","../src/Animator.ts","../src/utils/property.ts","../src/Frame.ts","../src/Keyframes.ts","../src/utils/dot.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts","../src/index.ts"],"sourcesContent":["export type Role = true | RoleInterface;\nexport interface RoleInterface {\n  [role: string]: Role;\n}\nexport interface ObjectInterface<T> {\n  [name: string]: T;\n}\nexport type NameType = string | number;\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleInterface = { transform: {}, filter: {}, attribute: {} };\nexport const ALIAS: ObjectInterface<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { \"animation-timing-function\": true, \"contents\": true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\ntype OptionType = [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"];\ntype EventType = [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n","import { isObject } from \"@daybrush/utils\";\n\ntype CallbackType = (...args: any[]) => any;\ninterface EventParamterType {\n  [name: string]: CallbackType | CallbackType[];\n}\n/**\n* attach and trigger event handlers.\n* @memberof Scene\n*/\nclass EventTrigger {\n  private events: { [name: string]: CallbackType[] };\n  /**\n\t* @example\nconst et = new Scene.EventTrigger();\nconst scene = new Scene();\n\nscene.on(\"call\", e => {\n\tconsole.log(e.param);\n});\net.on(\"call\", e => {\n\tconsole.log(e.param);\n});\nscene.trigger(\"call\", {param: 1});\net.trigger(\"call\", {param: 1});\n\t */\n  constructor() {\n    this.events = {};\n  }\n  /**\n\t* Attach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function() {\n\tconsole.log(\"animate\");\n});\n\ntarget.trigger(\"animate\");\n\n\t*/\n  public on(name: string | EventParamterType, callback?: CallbackType | CallbackType[]) {\n    const events = this.events;\n\n    if (isObject(name)) {\n      for (const i in name) {\n        this.on(i, name[i]);\n      }\n      return this;\n    }\n    if (!(name in events)) {\n      events[name] = [];\n    }\n    if (!callback) {\n      return this;\n    }\n    if (isObject(callback)) {\n      (callback as CallbackType[]).forEach(func => this.on(name, func));\n      return this;\n    }\n    const event = events[name];\n\n    event.push(callback);\n    return this;\n  }\n  /**\n\t* Dettach an event handler function for one or more events to target\n\t* @param {String} name - event's name\n\t* @param {Function} callback -  function to execute when the event is triggered.\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\nconst callback = function() {\n\tconsole.log(\"animate\");\n};\ntarget.on(\"animate\", callback);\n\ntarget.off(\"animate\", callback);\ntarget.off(\"animate\");\n\n\t*/\n  public off(name?: string, callback?: CallbackType) {\n    if (!name) {\n      this.events = {};\n    } else if (!callback) {\n      this.events[name] = [];\n    } else {\n      const callbacks = this.events[name];\n\n      if (!callbacks) {\n        return this;\n      }\n      const index = callbacks.indexOf(callback);\n\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n    return this;\n  }\n  /**\n\t* execute event handler\n\t* @param {String} name - event's name\n\t* @param {Function} [...data] - event handler's additional parameter\n\t* @return {EventTrigger} An Instance itself.\n\t* @example\ntarget.on(\"animate\", function(a1, a2) {\n\tconsole.log(\"animate\", a1, a2);\n});\n\ntarget.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n\t*/\n  public trigger(name: string, ...data: any[]) {\n    const events = this.events;\n\n    if (!(name in events)) {\n      return this;\n    }\n\n    const event = events[name];\n\n    if (data.length) {\n      const target = data[0];\n\n      target.type = name;\n      target.currentTarget = this;\n      !target.target && (target.target = this);\n    }\n    event.forEach(callback => {\n      callback.apply(this, data);\n    });\n\n    return this;\n  }\n}\nexport default EventTrigger;\n","export interface EasingFunctionInterface extends Function {\n  easingName?: string;\n}\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunctionInterface = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunctionInterface = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import { OBJECT, STRING } from \"@daybrush/utils\";\n\ninterface PropertyObjectInterface {\n  prefix?: string;\n  suffix?: string;\n  model?: string;\n  type?: string;\n  separator?: string;\n}\n/**\n* Make string, array to PropertyObject for the dot product\n* @memberof Scene\n*/\nclass PropertyObject {\n  public value: any[];\n  public options: PropertyObjectInterface;\n\n  /**\n\t* @param {String|Array} value - This value is in the array format ..\n\t* @param {String} separator - Array separator.\n\t* @example\nvar obj1 = new PropertyObject(\"1,2,3\", \",\");\nvar obj2 = new PropertyObject([1,2,3], \" \");\nvar obj3 = new PropertyObject(\"1$2$3\", \"$\");\n\n// rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\t */\n  constructor(value: string | any[], options: PropertyObjectInterface) {\n    this.options = {\n      prefix: \"\",\n      suffix: \"\",\n      model: \"\",\n      type: \"\",\n      separator: \",\",\n    };\n    options && this.setOptions(options);\n    this.init(value);\n  }\n  public setOptions(newOptions: PropertyObjectInterface) {\n    const options = this.options;\n\n    for (const name in newOptions) {\n      options[name as keyof PropertyObjectInterface] = newOptions[name as keyof PropertyObjectInterface];\n    }\n    options && (this.options = {...this.options, ...options});\n    return this;\n  }\n  public getOption(name: keyof PropertyObjectInterface) {\n    return this.options[name];\n  }\n  /**\n\t* the number of values.\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.length);\n// 3\n\t */\n  public size() {\n    return this.value.length;\n  }\n  /**\n\t* retrieve one of values at the index\n\t* @param {Number} index - index\n\t* @return {Object} one of values at the index\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\n\nconsole.log(obj1.get(0));\n// 1\n\t */\n  public get(index: number) {\n    return this.value[index];\n  }\n  /**\n\t* Set the value at that index\n\t* @param {Number} index - index\n\t* @param {Object} value - text, a number, object to set\n\t* @return {PropertyObject} An instance itself\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nobj1.set(0, 2);\nconsole.log(obj1.toValue());\n// 2,2,3\n\t */\n  public set(index: number, value: any) {\n    this.value[index] = value;\n    return this;\n  }\n  /**\n\t* create a copy of an instance itself.\n\t* @return {PropertyObject} clone\n\t* @example\nconst obj1 = new PropertyObject(\"1,2,3\", \",\");\nconst obj2 = obj1.clone();\n\t */\n  public clone(): PropertyObject {\n    const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n    return new PropertyObject(arr, this.options);\n  }\n  /**\n\t* Make Property Object to String\n\t* @return {String} Make Property Object to String\n\t* @example\n//rgba(100, 100, 100, 0.5)\nconst obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\",\n});\nconsole.log(obj4.toValue());\n// \"rgba(100,100,100,0.5)\"\n\t*/\n  public toValue(): string {\n    return this.options.prefix + this.join() + this.options.suffix;\n  }\n  /**\n\t* Make Property Object's array to String\n\t* @return {String} Join the elements of an array into a string\n\t* @example\n\t//rgba(100, 100, 100, 0.5)\n\tvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\t\"separator\" : \",\",\n\t\t\"prefix\" : \"rgba(\",\n\t\t\"suffix\" : \")\"\n\t});\n\tobj4.join();  // =>   \"100,100,100,0.5\"\n\t */\n  public join() {\n    return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.options.separator);\n  }\n  /**\n\t* executes a provided function once per array element.\n\t* @param {Function} callback - Function to execute for each element, taking three arguments\n\t* @param {All} [callback.currentValue] The current element being processed in the array.\n\t* @param {Number} [callback.index] The index of the current element being processed in the array.\n\t* @param {Array} [callback.array] the array.\n\t* @return {PropertyObject} An instance itself\n\t* @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n\t* @example\n//rgba(100, 100, 100, 0.5)\nvar obj4 = new PropertyObject([100,100,100,0.5], {\n\t\"separator\" : \",\",\n\t\"prefix\" : \"rgba(\",\n\t\"suffix\" : \")\"\n});\n\nobj4.forEach(t => {\n\tconsole.log(t);\n});  // =>   \"100,100,100,0.5\"\n\t*/\n  public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n    this.value.forEach(func);\n    return this;\n  }\n  private init(value: string | any[]) {\n    const type = typeof value;\n\n    if (type === STRING) {\n      this.value = (value as string).split(this.options.separator);\n    } else if (type === OBJECT) {\n      this.value = (value as any[]);\n    } else {\n      this.value = [value];\n    }\n    return this;\n  }\n}\nexport default PropertyObject;\n","import { ROLES, ObjectInterface, MAXIMUM, FIXED, ALIAS,\n  PAUSED, RUNNING, PLAY, ENDED, PREFIX } from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport { isArray, ANIMATION, ARRAY, OBJECT, PROPERTY, STRING, NUMBER } from \"@daybrush/utils\";\n\nexport function isPropertyObject(value: any): value is PropertyObject {\n  return value instanceof PropertyObject;\n}\nexport function setAlias(name: string, alias: string[]) {\n  ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n  const length = names.length;\n  let roles: any = ROLES;\n  let fixed: any = FIXED;\n\n  for (let i = 0; i < length - 1; ++i) {\n    !roles[names[i]] && (roles[names[i]] = {});\n    roles = roles[names[i]];\n    if (isFixedProperty) {\n      !fixed[names[i]] && (fixed[names[i]] = {});\n      fixed = fixed[names[i]];\n    }\n  }\n  isFixedProperty && (fixed[names[length - 1]] = true);\n  roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n  const type = typeof value;\n\n  if (type === OBJECT) {\n    if (isArray(value)) {\n      return ARRAY;\n    } else if (isPropertyObject(value)) {\n      return PROPERTY;\n    }\n  } else if (type === STRING || type === NUMBER) {\n    return \"value\";\n  }\n  return type;\n}\nexport function toFixed(num: number) {\n  return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function isInProperties(roles: ObjectInterface<any>, args: any[], isCheckTrue?: boolean) {\n  const length = args.length;\n  let role: any = roles;\n\n  if (length === 0) {\n    return false;\n  }\n  for (let i = 0; i < length; ++i) {\n    if (role === true) {\n      return false;\n    }\n    role = role[args[i]];\n    if (!role || (!isCheckTrue && role === true)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isRole(args: any[], isCheckTrue?: boolean) {\n  return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: any[]) {\n  return isInProperties(FIXED, args, true);\n}\n\nexport interface IterationInterface {\n  currentTime: number;\n  iterationCount: number;\n  elapsedTime: number;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n  return item.state.playCSS && item.getPlayState() === PAUSED;\n}\nexport function exportCSS(id: number | string, css: string) {\n  const styleId = `${PREFIX}STYLE_${toId(id)}`;\n  const styleElement: HTMLElement = document.querySelector(`#${styleId}`);\n\n  if (styleElement) {\n    styleElement.innerText = css;\n  } else {\n    document.body.insertAdjacentHTML(\"beforeend\",\n      `<style id=\"${styleId}\">${css}</style>`);\n  }\n}\nexport function makeId(selector?: boolean) {\n  for (; ;) {\n    const id = `${Math.floor(Math.random() * 10000000)}`;\n\n    if (!selector) {\n      return id;\n    }\n    const checkElement = document.querySelector(`[data-scene-id=\"${id}\"]`);\n\n    if (!checkElement) {\n      return id;\n    }\n  }\n}\nexport function getRealId(item: Scene | SceneItem) {\n  return item.state.id || item.setId().getId();\n}\nexport function toId(text: number | string) {\n  return `${text}`.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nexport function playCSS(item: Scene | SceneItem, isExportCSS: boolean, properties = {}) {\n  if (!ANIMATION || item.getPlayState() === RUNNING) {\n    return;\n  }\n  if (isPausedCSS(item)) {\n    item.addPlayClass(true, properties);\n  } else {\n    if (item.isEnded()) {\n      item.setTime(0);\n    }\n    isExportCSS && item.exportCSS();\n    const el = item.addPlayClass(false, properties);\n\n    if (!el) {\n      return;\n    }\n    !item.state.peusdo && addAnimationEvent(item, el);\n    item.setState({ playCSS: true });\n  }\n  item.setPlayState(RUNNING);\n  item.trigger(PLAY);\n}\n\nexport function addAnimationEvent(item: Scene | SceneItem, el: HTMLElement) {\n  const duration = item.getDuration();\n  const isZeroDuration = !duration || !isFinite(duration);\n\n  const animationend = () => {\n    if (!isZeroDuration) {\n      item.setState({ playCSS: false });\n      item.finish();\n    }\n  };\n  item.on(ENDED, () => {\n    el.removeEventListener(\"animationend\", animationend);\n    el.removeEventListener(\"animationiteration\", animationiteration);\n  });\n  const animationiteration = ({elapsedTime}: any) => {\n    const currentTime = elapsedTime;\n    const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n    item.state.currentTime = currentTime;\n    item.setCurrentIterationCount(iterationCount);\n  };\n  el.addEventListener(\"animationend\", animationend);\n  el.addEventListener(\"animationiteration\", animationiteration);\n}\n","import {\n  ObjectInterface, THRESHOLD,\n  ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n  ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n  DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED, RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE } from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, EasingFunctionInterface } from \"./easing\";\nimport { toFixed } from \"./utils\";\nimport { splitUnit, isString, camelize, requestAnimationFrame } from \"@daybrush/utils\";\n\nfunction GetterSetter<T extends { new(...args: any[]): {} }>(\n  getter: string[], setter: string[], parent: string) {\n  return (constructor: T) => {\n    const prototype = constructor.prototype;\n\n    getter.forEach(name => {\n      prototype[camelize(`get ${name}`)] = function() {\n        return this[parent][name];\n      };\n    });\n    setter.forEach(name => {\n      prototype[camelize(`set ${name}`)] = function(value: any) {\n        this[parent][name] = value;\n        return this;\n      };\n    });\n  };\n}\n\nexport type FillModeType = \"forwards\" | \"backwards\" | \"both\";\nexport type IterationCountType = number | \"infinite\";\nexport type EasingType = 0 | EasingFunctionInterface;\nexport type DirectionType = \"normal\" | \"reverse\" | \"alternate\" | \"alternate-reverse\";\nexport type PlayStateType = \"paused\" | \"running\";\n\nexport interface StateInterface {\n  id?: number | string;\n  easing?: EasingType;\n  easingName?: string;\n  iterationCount?: IterationCountType;\n  delay?: number;\n  fillMode?: FillModeType;\n  direction?: DirectionType;\n  playSpeed?: number;\n  iterationTime?: number;\n  currentTime?: number;\n  tickTime?: number;\n  currentIterationCount?: number;\n  prevTime?: number;\n  playState?: PlayStateType;\n  duration?: number;\n  [key: string]: any;\n}\nexport function isDirectionReverse(currentIterationCount: number,\n                                   iteraiontCount: IterationCountType, direction: DirectionType) {\n  if (direction === REVERSE) {\n    return true;\n  } else if (iteraiontCount !== \"infinite\" && currentIterationCount === iteraiontCount && iteraiontCount % 1 === 0) {\n    return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n  }\n  return  direction === (currentIterationCount % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorOptions The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n/**\n* play video, animation, the others\n* @memberof Scene\n* @class Animator\n* @extends Scene.EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n* @param {AnimatorOptions} [options] - animator's options\n* @example\nconst animator = new Animator({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n*/\n\nconst setters = [ITERATION_COUNT, DELAY, FILL_MODE,\n  DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n@GetterSetter(getters, setters, \"state\")\nclass Animator extends EventTrigger {\n  public state: StateInterface;\n  public options: ObjectInterface<any>;\n\n  constructor(options?: StateInterface) {\n    super();\n    this.options = {};\n    this.state = {\n      id: \"\",\n      easing: 0,\n      easingName: \"linear\",\n      iterationCount: 1,\n      delay: 0,\n      fillMode: \"forwards\",\n      direction: NORMAL,\n      playSpeed: 1,\n      currentTime: 0,\n      iterationTime: -1,\n      currentIterationCount: 0,\n      tickTime: 0,\n      prevTime: 0,\n      playState: PAUSED,\n      duration: 0,\n    };\n    this.setOptions(options);\n  }\n  /**\n\t* set animator's easing.\n\t* @method Scene.Animator#setEasing\n\t* @param {array| function} curverArray - The speed curve of an animation.\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.easing.EASE,\n});\n\t*/\n  public setEasing(curveArray: [number, number, number, number] | EasingFunctionInterface): this {\n    const easing = Array.isArray(curveArray) ?\n      bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]) : curveArray;\n    const easingName = easing[EASING_NAME] || \"linear\";\n\n    this.setState({ easing, easingName });\n    return this;\n  }\n  /**\n\t* set animator's options.\n\t* @method Scene.Animator#setOptions\n\t* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n\t* @param {Object} [AnimatorOptions] - animator's options\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\nanimator.({\n\tdelay: 2,\n\tdiretion: \"alternate\",\n\tduration: 2,\n\tfillMode: \"forwards\",\n\titerationCount: 3,\n\teasing: Scene.eaasing.EASE,\n});\n\t*/\n  public setOptions(options: StateInterface = {}): this {\n    for (const name in options) {\n      const value = options[name];\n\n      if (name === EASING) {\n        this.setEasing(value);\n        continue;\n      } else if (name === DURATION) {\n        value && this.setDuration(value);\n        continue;\n      }\n      ((name in this.state ? this.state : this.options) as StateInterface)[name] = value;\n    }\n\n    return this;\n  }\n  /**\n\t* Get the animator's total duration including delay\n\t* @method Scene.Animator#getTotalDuration\n\t* @return {number} Total duration\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getTotalDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.state[DELAY] + this.getActiveDuration();\n  }\n  /**\n\t* Get the animator's total duration excluding delay\n\t* @method Scene.Animator#getActiveDuration\n\t* @return {number} Total duration excluding delay\n\t* @example\nanimator.getTotalDuration();\n\t*/\n  public getActiveDuration(): number {\n    if (this.state[ITERATION_COUNT] === INFINITE) {\n      return Infinity;\n    }\n    return this.getDuration() * (this.state[ITERATION_COUNT] as number);\n  }\n  /**\n\t* Check if the animator has reached the end.\n\t* @method Scene.Animator#isEnded\n\t* @return {boolean} ended\n\t* @example\nanimator.isEnded(); // true or false\n\t*/\n  public isEnded(): boolean {\n    if (this.state.tickTime === 0 && this.state[PLAY_STATE] === PAUSED) {\n      return true;\n    } else if (this.getTime() < this.getActiveDuration()) {\n      return false;\n    }\n    return true;\n  }\n  /**\n\t*Check if the animator is paused:\n\t* @method Scene.Animator#isPaused\n\t* @return {boolean} paused\n\t* @example\nanimator.isPaused(); // true or false\n\t*/\n  public isPaused(): boolean {\n    return this.state[PLAY_STATE] === PAUSED;\n  }\n  public setNext(animator: Animator): this {\n    this.on(ENDED, () => {\n      animator.play();\n    });\n    return this;\n  }\n  /**\n\t* play animator\n\t* @method Scene.Animator#play\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public play() {\n    this.state[PLAY_STATE] = RUNNING;\n    if (this.isEnded()) {\n      this.setTickTime(0);\n    }\n    this.state.tickTime = this.getTime();\n\n    requestAnimationFrame((time: number) => {\n      this.state.prevTime = time;\n      this.tick(time);\n    });\n    /**\n\t\t * This event is fired when play animator.\n\t\t * @event Scene.Animator#play\n\t\t */\n    this.trigger(PLAY);\n\n    return this;\n  }\n  /**\n\t* pause animator\n\t* @method Scene.Animator#pause\n\t* @return {Scene.Animator} An instance itself.\n\t*/\n  public pause(): this {\n    this.state[PLAY_STATE] = PAUSED;\n    /**\n\t\t * This event is fired when animator is paused.\n\t\t * @event Scene.Animator#paused\n\t\t */\n    this.trigger(PAUSED);\n    return this;\n  }\n  /**\n\t * end animator\n\t * @method Scene.Animator#finish\n\t * @return {Scene.Animator} An instance itself.\n\t*/\n  public finish() {\n    this.state.tickTime = 0;\n    this.setTime(0);\n    this.end();\n    return this;\n  }\n  /**\n\t * end animator\n\t * @method Scene.Animator#end\n\t * @return {Scene.Animator} An instance itself.\n\t*/\n  public end() {\n    this.pause();\n    /**\n\t\t * This event is fired when animator is ended.\n\t\t * @event Scene.Animator#ended\n\t\t */\n    this.trigger(ENDED);\n    return this;\n  }\n  /**\n\t* set currentTime\n\t* @method Scene.Animator#setTime\n\t* @param {Number|String} time - currentTime\n\t* @return {Scene.Animator} An instance itself.\n\t* @example\n\nanimator.setTime(\"from\"); // 0\nanimator.setTime(\"to\"); // 100%\nanimator.setTime(\"50%\");\nanimator.setTime(10);\nanimator.getTime() // 10\n\t*/\n  public setTime(time: number | string, isTick?: boolean) {\n    const activeDuration = this.getActiveDuration();\n    let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n    this.state.tickTime = this.state.delay + currentTime;\n    if (currentTime < 0) {\n      currentTime = 0;\n    } else if (currentTime > activeDuration) {\n      currentTime = activeDuration;\n    }\n    this.state.currentTime = currentTime;\n    this.calculateIterationTime();\n\n    if (this.isDelay()) {\n      return this;\n    }\n    /**\n\t\t * This event is fired when the animator updates the time.\n\t\t * @event Scene.Animator#timeupdate\n\t\t * @param {Object} param The object of data to be sent to an event.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t */\n    this.trigger(TIMEUPDATE, {\n      currentTime,\n      time: this.getIterationTime(),\n      iterationCount: this.getIterationCount(),\n    });\n\n    return this;\n  }\n  public getState(name: string): any {\n    return this.state[name];\n  }\n  public setState(object: StateInterface) {\n    for (const name in object) {\n      this.state[name] = object[name];\n    }\n    return this;\n  }\n  /**\n\t* Get the animator's current time\n\t* @method Scene.Animator#getTime\n\t* @return {number} current time\n\t* @example\nanimator.getTime();\n\t*/\n  public getTime(): number {\n    return this.state.currentTime;\n  }\n  public getUnitTime(time: string | number) {\n    if (isString(time)) {\n      const duration = this.getDuration() || 100;\n\n      if (time === \"from\") {\n        return 0;\n      } else if (time === \"to\") {\n        return duration;\n      }\n      const { unit, value } = splitUnit(time);\n\n      if (unit === \"%\") {\n        !this.getDuration() && (this.state.duration = duration);\n        return parseFloat(time) / 100 * duration;\n      } else if (unit === \">\") {\n        return value + THRESHOLD;\n      } else {\n        return value;\n      }\n    } else {\n      return toFixed(time);\n    }\n  }\n  /**\n\t * Check if the current state of animator is delayed.\n\t * @method Scene.Animator#isDelay\n\t * @return {boolean} check delay state\n\t */\n  public isDelay() {\n    const { delay, tickTime } = this.state;\n\n    return delay > 0 && (tickTime < delay);\n  }\n  public setCurrentIterationCount(iterationCount: number): this {\n    const state = this.state;\n    const passIterationCount = Math.floor(iterationCount);\n\n    if (state.currentIterationCount < passIterationCount) {\n      /**\n\t\t\t* The event is fired when an iteration of an animation ends.\n\t\t\t* @event Scene.Animator#iteration\n\t\t\t* @param {Object} param The object of data to be sent to an event.\n\t\t\t* @param {Number} param.currentTime The total time that the animator is running.\n\t\t\t* @param {Number} param.iterationCount The iteration count that the animator is running.\n\t\t\t*/\n      this.trigger(\"iteration\", {\n        currentTime: state.currentTime,\n        iterationCount: passIterationCount,\n      });\n    }\n    state.currentIterationCount = iterationCount;\n    return this;\n  }\n  protected calculateIterationTime() {\n    const { iterationCount, fillMode, direction } = this.state;\n    const duration = this.getDuration();\n    const time = this.getTime();\n    const currentIterationCount = duration === 0 ? 0 : time / duration;\n    let currentIterationTime = duration ? time % duration : 0;\n\n    if (!duration) {\n      this.setIterationTime(0);\n      return this;\n    }\n    this.setCurrentIterationCount(currentIterationCount);\n\n    // direction : normal, reverse, alternate, alternate-reverse\n    // fillMode : forwards, backwards, both, none\n    const isReverse = isDirectionReverse(currentIterationCount, iterationCount, direction);\n\n    if (isReverse) {\n      currentIterationTime = duration - currentIterationTime;\n    }\n    if (iterationCount !== INFINITE) {\n      const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n      // fill forwards\n      if (currentIterationCount >= iterationCount) {\n        currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n        isReverse && (currentIterationTime = duration - currentIterationTime);\n      }\n    }\n    this.setIterationTime(currentIterationTime);\n    return this;\n  }\n  protected tick(now: number) {\n    const state = this.state;\n    const { playSpeed, prevTime } = state;\n    const currentTime = this.state.tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n    state.prevTime = now;\n    this.setTickTime(currentTime);\n    if (this.isEnded()) {\n      this.end();\n      return;\n    }\n    if (state[PLAY_STATE] === PAUSED) {\n      return;\n    }\n\n    requestAnimationFrame((time: number) => {\n      this.tick(time);\n    });\n  }\n  private setTickTime(time: number) {\n    this.setTime(time - this.state.delay, true);\n  }\n}\n\n/**\n * Get a delay for the start of an animation.\n * @method Scene.Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Scene.Animator#setDelay\n * @param {number} delay - delay\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#getFillMode\n * @return {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Scene.Animator#setFillMode\n * @param {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode - fillMode\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Scene.Animator#getIterationCount\n * @return {\"inifnite\"|number} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Scene.Animator#setIterationCount\n * @param {\"inifnite\"|number} iterationCount - iterationCount\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#getDirection\n * @return {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Scene.Animator#setDirection\n * @param {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction - direction\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Scene.Animator#getPlayState\n * @return {\"paused\"|\"running\"} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Scene.Animator#setPlayState\n * @param {\"paused\"|\"running\"} playState - playState\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Scene.Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Scene.Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Scene.Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Scene.Animator#setDuration\n * @param {number} duration - duration\n * @return {Scene.Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Scene.Animator#getEasing\n * @return {0|function} easing\n */\n/**\n * Get the speed curve's name\n * @method Scene.Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Scene.Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\ninterface Animator {\n  getIterationTime(): number;\n  setIterationTime(time: number): this;\n  setDelay(delay: number): this;\n  getDelay(): number;\n  setFillMode(fillMode: FillModeType): this;\n  getFillMode(): FillModeType;\n  setIterationCount(iterationCount: IterationCountType): this;\n  getIterationCount(): IterationCountType;\n  setDirection(direction: IterationCountType): this;\n  getDirection(): IterationCountType;\n  setPlayState(playState: PlayStateType): this;\n  getPlayState(): PlayStateType;\n  setPlaySpeed(playSpeed: number): this;\n  getPlaySpeed(): number;\n  setDuration(duration: number): this;\n  getDuration(): number;\n  getEasing(): EasingType;\n  getEasingName(): string;\n}\nexport default Animator;\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport { COLOR_MODELS, isString, splitComma, splitSpace, stringToRGBA, RGBA, splitBracket } from \"@daybrush/utils\";\nimport { ObjectInterface } from \"../consts\";\n\nexport function splitStyle(str: string) {\n  const properties = str.split(\";\");\n  const length = properties.length;\n  const obj = [];\n\n  for (let i = 0; i < length; ++i) {\n    const matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n\n    if (!matches || matches.length < 3 || !matches[1]) {\n      continue;\n    }\n    obj.push({ [matches[1].trim()]: toPropertyObject(matches[2].trim()) });\n  }\n  return obj;\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n  const model = RGBA;\n\n  if (arr.length === 3) {\n    arr[3] = 1;\n  }\n  return new PropertyObject(arr, {\n    model,\n    separator: \",\",\n    type: \"color\",\n    prefix: `${model}(`,\n    suffix: \")\",\n  });\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(text: string) {\n  // [prefix, value, other]\n  const { prefix: model, value, suffix: afterModel } = splitBracket(text);\n\n  if (typeof value === \"undefined\") {\n    return text;\n  }\n  if (COLOR_MODELS.indexOf(model) !== -1) {\n    return arrayToColorObject(stringToRGBA(text));\n  }\n  // divide comma(,)\n  const obj = toPropertyObject(value);\n\n  let arr = [value];\n  let separator = \",\";\n  let prefix = `${model}(`;\n  let suffix = `)${afterModel}`;\n\n  if (obj instanceof PropertyObject) {\n    separator = obj.getOption(\"separator\");\n    arr = obj.value;\n    prefix += obj.getOption(\"prefix\");\n    suffix = obj.getOption(\"suffix\") + suffix;\n  }\n  return new PropertyObject(arr, {\n    separator,\n    model,\n    prefix,\n    suffix,\n  });\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n  return new PropertyObject(arr, {\n    type: \"array\",\n    separator,\n  });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n  const result = stringToRGBA(value);\n\n  return result ? arrayToColorObject(result) : value;\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: string | ObjectInterface<any> | any[]): any {\n  if (!isString(value)) {\n    if (Array.isArray(value)) {\n      return arrayToPropertyObject(value, \",\");\n    }\n    return value;\n  }\n  let values = splitComma(value);\n\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n  }\n  values = splitSpace(value);\n  if (values.length > 1) {\n    return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n  }\n  values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n  if (values && values[1] === values[3]) {\n    // Quotes\n    return new PropertyObject([toPropertyObject(values[2])], {\n      prefix: values[1],\n      suffix: values[1],\n    });\n  } else if (value.indexOf(\"(\") !== -1) {\n    // color\n    return stringToBracketObject(value);\n  } else if (value.charAt(0) === \"#\") {\n    return stringToColorObject(value);\n  }\n  return value;\n}\nexport function toObject(object: PropertyObject, result: ObjectInterface<any> = {}) {\n  const model = object.getOption(\"model\");\n\n  if (model) {\n    object.setOptions({\n      model: \"\",\n      suffix: \"\",\n      prefix: \"\",\n    });\n    const value = object.size() > 1 ? object : object.get(0);\n\n    result[model] = value;\n  } else {\n    object.forEach(obj => toObject(obj, result));\n  }\n  return result;\n}\n","import {\n  ObjectInterface, NameType,\n  ALIAS, TIMING_FUNCTION\n} from \"./consts\";\nimport { isRole, getType, isPropertyObject } from \"./utils\";\nimport { toPropertyObject, splitStyle, toObject } from \"./utils/property\";\nimport { isObject, isArray, isString,\n  ANIMATION, TRANSFORM, FILTER, PROPERTY, FUNCTION, ARRAY, OBJECT } from \"@daybrush/utils\";\n\nfunction toInnerProperties(obj: ObjectInterface<string>) {\n  if (!obj) {\n    return \"\";\n  }\n  const arrObj = [];\n\n  for (const name in obj) {\n    arrObj.push(`${name.replace(/\\d/g, \"\")}(${obj[name]})`);\n  }\n  return arrObj.join(\" \");\n}\n\n/* eslint-disable */\nfunction clone(target: ObjectInterface<any>, toValue = false) {\n  return merge({}, target, toValue);\n}\nfunction merge(to: ObjectInterface<any>, from: ObjectInterface<any>, toValue = false) {\n  for (const name in from) {\n    const value = from[name];\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n      to[name] = toValue ? value.toValue() : value.clone();\n    } else if (type === FUNCTION) {\n      to[name] = toValue ? getValue([name], value()) : value;\n    } else if (type === ARRAY) {\n      to[name] = value.slice();\n    } else if (type === OBJECT) {\n      if (isObject(to[name]) && !isPropertyObject(to[name])) {\n        merge(to[name], value, toValue);\n      } else {\n        to[name] = clone(value, toValue);\n      }\n    } else {\n      to[name] = from[name];\n    }\n  }\n  return to;\n}\n/* eslint-enable */\n\nfunction getPropertyName(args: NameType[]) {\n  return args[0] in ALIAS ? ALIAS[args[0]] : args;\n}\nfunction getValue(names: NameType[], value: any): any {\n  const type = getType(value);\n\n  if (type === PROPERTY) {\n    return value.toValue();\n  } else if (type === FUNCTION) {\n    if (names[0] !== TIMING_FUNCTION) {\n      return getValue(names, value());\n    }\n  } else if (type === OBJECT) {\n    return clone(value, true);\n  }\n  return value;\n}\n/**\n* Animation's Frame\n* @class Scene.Frame\n* @param {Object} properties - properties\n* @example\nconst frame = new Scene.Frame({\n\tdisplay: \"none\"\n\ttransform: {\n\t\ttranslate: \"50px\",\n\t\tscale: \"5, 5\",\n\t}\n});\n */\nclass Frame {\n  public properties: ObjectInterface<any>;\n  constructor(properties: ObjectInterface<any> = {}) {\n    this.properties = {};\n    this.set(properties);\n  }\n  /**\n\t* get property value\n\t* @method Scene.Frame#get\n\t* @param {...Number|String|Scene.PropertyObject} args - property name or value\n\t* @example\n\tframe.get(\"display\") // => \"none\", \"block\", ....\n\tframe.get(\"transform\", \"translate\") // => \"10px,10px\"\n\t*/\n  public get(...args: NameType[]) {\n    const value = this.raw(...args);\n\n    return getValue(getPropertyName(args), value);\n  }\n\n  public raw(...args: NameType[]) {\n    let properties = this.properties;\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties)) {\n        return undefined;\n      }\n      properties = properties[params[i]];\n    }\n    return properties;\n  }\n  /**\n\t* remove property value\n\t* @method Scene.Frame#remove\n\t* @param {...String} args - property name\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.remove(\"display\")\n\t*/\n  public remove(...args: NameType[]) {\n    let properties = this.properties;\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length - 1; ++i) {\n      if (!isObject(properties)) {\n        return this;\n      }\n      properties = properties[params[i]];\n    }\n    delete properties[params[length - 1]];\n    return this;\n  }\n  /**\n\t* set property\n\t* @method Scene.Frame#set\n\t* @param {...Number|String|Scene.PropertyObject} args - property names or values\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n// one parameter\nframe.set({\n\tdisplay: \"none\",\n\ttransform: {\n\t\ttranslate: \"10px, 10px\",\n\t\tscale: \"1\",\n\t},\n\tfilter: {\n\t\tbrightness: \"50%\",\n\t\tgrayscale: \"100%\"\n\t}\n});\n\n// two parameters\nframe.set(\"transform\", {\n\ttranslate: \"10px, 10px\",\n\tscale: \"1\",\n});\n\n// three parameters\nframe.set(\"transform\", \"translate\", \"50px\");\n\t*/\n  public set(...args: any[]) {\n    const length = args.length;\n    const params = args.slice(0, -1);\n    const value = args[length - 1];\n\n    if (params[0] in ALIAS) {\n      this._set(ALIAS[params[0]], value);\n    } else if (length === 2 && isArray(params[0])) {\n      this._set(params[0], value);\n    } else if (isObject(value)) {\n      if (isArray(value)) {\n        this._set(params, value);\n      } else if (isPropertyObject(value)) {\n        if (isRole(params)) {\n          this.set(...params, toObject(value));\n        } else {\n          this._set(params, value);\n        }\n      } else if (value instanceof Frame) {\n        this.merge(value);\n      } else {\n        for (const name in value) {\n          this.set(...params, name, value[name]);\n        }\n      }\n    } else if (isString(value)) {\n      if (isRole(params)) {\n        const obj = toPropertyObject(value);\n\n        if (isObject(obj)) {\n          this.set(...params, obj);\n        }\n        return this;\n      } else {\n        const styles = splitStyle(value);\n\n        styles.forEach(style => {\n          this.set(...params, style);\n        });\n        if (styles.length) {\n          return this;\n        }\n      }\n      this._set(params, value);\n    } else {\n      this._set(params, value);\n    }\n    return this;\n  }\n  /**\n\t* check that has property.\n\t* @method Scene.Frame#has\n\t* @param {...String} args - property name\n\t* @example\n\tframe.has(\"property\", \"display\") // => true or false\n\t*/\n  public has(...args: NameType[]) {\n    let properties = this.properties;\n    const params = getPropertyName(args);\n    const length = params.length;\n\n    if (!length) {\n      return false;\n    }\n    for (let i = 0; i < length; ++i) {\n      if (!isObject(properties) || !(params[i] in properties)) {\n        return false;\n      }\n      properties = properties[params[i]];\n    }\n    return true;\n  }\n  /**\n\t* clone frame.\n\t* @method Scene.Frame#clone\n\t* @return {Scene.Frame} An instance of clone\n\t* @example\n\tframe.clone();\n\t*/\n  public clone() {\n    const frame = new Frame();\n\n    return frame.merge(this);\n  }\n  /**\n\t* merge one frame to other frame.\n\t* @method Scene.Frame#merge\n\t* @param {Scene.Frame} frame - target frame.\n\t* @return {Scene.Frame} An instance itself\n\t* @example\n\tframe.merge(frame2);\n\t*/\n  public merge(frame: Frame) {\n    const properties = this.properties;\n    const frameProperties = frame.properties;\n\n    if (!frameProperties) {\n      return this;\n    }\n    merge(properties, frameProperties);\n\n    return this;\n  }\n  public toObject() {\n    return clone(this.properties, true);\n  }\n  /**\n\t* Specifies an css object that coverted the frame.\n\t* @method Scene.Frame#toCSSObject\n\t* @return {object} cssObject\n\t*/\n  public toCSSObject() {\n    const properties = this.toObject();\n    const cssObject: ObjectInterface<string> = {};\n\n    for (const name in properties) {\n      if (isRole([name], true)) {\n        continue;\n      }\n      const value = properties[name];\n\n      if (name === TIMING_FUNCTION) {\n        cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n          (isString(value) ? value : value.easingName) || \"initial\";\n        continue;\n      }\n      cssObject[name] = value;\n    }\n    const transform = toInnerProperties(properties.transform);\n    const filter = toInnerProperties(properties.filter);\n\n    TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n    FILTER && filter && (cssObject[FILTER] = filter);\n    return cssObject;\n  }\n  /**\n\t* Specifies an css text that coverted the frame.\n\t* @method Scene.Frame#toCSS\n\t* @return {string} cssText\n\t*/\n  public toCSS() {\n    const cssObject = this.toCSSObject();\n    const cssArray = [];\n\n    for (const name in cssObject) {\n      cssArray.push(`${name}:${cssObject[name]};`);\n    }\n    return cssArray.join(\"\");\n  }\n  private _set(args: NameType[], value: any) {\n    let properties = this.properties;\n    const length = args.length;\n\n    for (let i = 0; i < length - 1; ++i) {\n      const name = args[i];\n\n      !(name in properties) && (properties[name] = {});\n      properties = properties[name];\n    }\n    if (!length) {\n      return;\n    }\n    properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n  }\n}\nexport default Frame;\n","import { ObjectInterface, RoleInterface } from \"./consts\";\nimport { isInProperties, toFixed } from \"./utils\";\nimport PropertyObject from \"./PropertyObject\";\nimport Frame from \"./Frame\";\nimport { isObject, isArray } from \"@daybrush/utils\";\n\nfunction getNames(names: ObjectInterface<any>, stack: string[]) {\n  let arr: string[][] = [];\n\n  for (const name in names) {\n    stack.push(name);\n\n    if (isObject(names[name])) {\n      arr = arr.concat(getNames(names[name], stack));\n    } else {\n      arr.push(stack.slice());\n    }\n    stack.pop();\n  }\n  return arr;\n}\nfunction updateFrame(names: ObjectInterface<any>, properties: ObjectInterface<any>) {\n  for (const name in properties) {\n    const value = properties[name];\n\n    if (!isObject(value) || isArray(value) || value instanceof PropertyObject) {\n      names[name] = true;\n      continue;\n    }\n    if (!isObject(names[name])) {\n      names[name] = {};\n    }\n    updateFrame(names[name], properties[name]);\n  }\n}\n/**\n* a list of objects in chronological order.\n* @memberof Scene\n*/\nclass Keyframes {\n  public times: number[];\n  public items: ObjectInterface<Frame>;\n  public names: RoleInterface;\n  /**\n\t */\n  constructor() {\n    this.times = [];\n    this.items = {};\n    this.names = {};\n  }\n  /**\n\t* A list of names\n\t* @return {string[][]} names\n\t* @example\nkeyframes.getNames(); // [[\"a\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n\t*/\n  public getNames() {\n    const names = this.names;\n\n    return getNames(names, []);\n  }\n  /**\n\t* Check if keyframes has propery's name\n\t* @param {...string[]} name - property's time\n\t* @return {Boolean} true: if has property, false: not\n\t* @example\nkeyframes.hasName(\"transform\", \"translate\"); // true or not\n\t*/\n  public hasName(...args: string[]) {\n    return isInProperties(this.names, args, true);\n  }\n  /**\n\t * update property names used in frames.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public update() {\n    const items = this.items;\n\n    for (const time in items) {\n      this.updateFrame(items[time]);\n    }\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} callback Function to execute for each element, taking three arguments\n\t * @param {Scene.Frame} [callback.item] The value of the item being processed in the keyframes.\n\t * @param {string} [callback.time] The time of the item being processed in the keyframes.\n\t * @param {object} [callback.items] The object that forEach() is being applied to.\n\t * @return {Scene.Keyframes} An instance itself\n\t */\n  public forEach(callback: (item: any, time: number, items: ObjectInterface<any>) => void) {\n    const times = this.times;\n    const items = this.items;\n\n    times.forEach(time => {\n      callback(items[time], time, items);\n    });\n  }\n  /**\n\t* update property names used in frame.\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.Keyframes} An instance itself\n\t* @example\nkeyframes.updateFrame(frame);\n\t*/\n  public updateFrame(frame: Frame) {\n    if (!frame) {\n      return this;\n    }\n    const properties = frame.properties;\n    const names = this.names;\n\n    updateFrame(names, properties);\n    return this;\n  }\n  /**\n\t * Get how long an animation should take to complete one cycle.\n\t * @return {number} duration\n\t */\n  public getDuration() {\n    const times = this.times;\n\n    return times.length === 0 ? 0 : times[times.length - 1];\n  }\n  /**\n\t * Set how long an animation should take to complete one cycle.\n\t * @param {number} duration - duration\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public setDuration(duration: number, originalDuration: number = this.getDuration()) {\n    const ratio = duration / originalDuration;\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(time => {\n      const time2 = toFixed(time * ratio);\n\n      obj[time2] = items[time];\n\n      return time2;\n    });\n    this.items = obj;\n  }\n  /**\n\t * Set how much time you want to push ahead.\n\t * @param {number} time - time\n\t * @return {Scene.Keyframes} An instance itself.\n\t */\n  public unshift(time: number) {\n    const { times, items } = this;\n    const obj: ObjectInterface<any> = {};\n\n    this.times = times.map(t => {\n      const time2 = toFixed(time + t);\n\n      obj[time2] = items[t];\n      return time2;\n    });\n    this.items = obj;\n    return this;\n  }\n  /**\n\t* get size of list\n\t* @return {Number} length of list\n\t*/\n  public size() {\n    return this.times.length;\n  }\n  /**\n\t* add object in list\n\t* @param {Number} time - frame's time\n\t* @param {Object} object - target\n\t* @return {Scene.Keyframes} An instance itself\n\t*/\n  public add(time: number, object: any) {\n    this.items[time] = object;\n    this.addTime(time);\n    return this;\n  }\n  /**\n\t* Check if keyframes has object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Boolean} true: if has time, false: not\n\t*/\n  public has(time: number) {\n    return time in this.items;\n  }\n  /**\n\t* get object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Object} object at that time\n\t*/\n  public get(time: number) {\n    return this.items[time];\n  }\n  /**\n\t* remove object at that time.\n\t* @param {Number} time - object's time\n\t* @return {Keyframes} An instance itself\n\t*/\n  public remove(time: number) {\n    const items = this.items;\n\n    delete items[time];\n    this.removeTime(time);\n    return this;\n  }\n  private addTime(time: number) {\n    const times = this.times;\n    const length = times.length;\n    let pushIndex = length;\n\n    for (let i = 0; i < length; ++i) {\n      // if time is smaller than times[i], add time to index\n      if (time === times[i]) {\n        return this;\n      } else if (time < times[i]) {\n        pushIndex = i;\n        break;\n      }\n    }\n    this.times.splice(pushIndex, 0, time);\n    return this;\n  }\n  private removeTime(time: number) {\n    const index = this.times.indexOf(time);\n\n    if (index > -1) {\n      this.times.splice(index, 1);\n    }\n    return this;\n  }\n}\nexport default Keyframes;\n","/**\n* @namespace\n* @name Dot\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport { EasingType } from \"../Animator\";\nimport { getType } from \"../utils\";\nimport { toPropertyObject } from \"./property\";\nimport { isArray, splitUnit, PROPERTY, FUNCTION } from \"@daybrush/utils\";\n\n/**\n* The dot product of Arrays\n* @memberof Dot\n* @function dotArray\n* @param {Array} a1 value1\n* @param {Array} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {Array|Object} Array.\n* @example\ndotArray([0, 0, 0, 1],[50, 50, 50, 1],0.5, 0.5);\n// => [25, 25, 25, 1]\n*/\nexport function dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  }\n  if (!isArray(a2)) {\n    return a1;\n  }\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\n/**\n* The dot product of PropertyObject(type=color)\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Dot\n* @function dotColor\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} PropertyObject(type=color).\n* @example\nvar colorObject = ......; //PropertyObject(type=color, model=\"rgba\", value=[254, 254, 254, 1]);\ndotColor(\"#000\",  colorObject, 0.5, 0.5);\n// \"#000\" => PropertyObject(type=color, model=\"rgba\", value=[0, 0, 0, 1]);\n// return => PropertyObject(type=color, model=\"rgba\", value=[127, 127, 127, 1]);\n*/\nexport function dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  if (b2 === 0) {\n    return color2;\n  }\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.getOption(\"model\");\n  const model2 = color2.getOption(\"model\");\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n/**\n* The dot product of Objects\n* @memberof Dot\n* @function dotObject\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} Array with Separator.\n* @example\ndotObject(PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)]),\nPropertyObject([\"9px\", \"solid\", rgba(50, 50, 50, 1)]),\n0.5, 0.5);\n// => PropertyObject([\"5px\", \"solid\", rgba(25, 25, 25, 1)])\n*/\nexport function dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.getOption(\"type\");\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.getOption(\"separator\") || a2.getOption(\"separator\"),\n    prefix: a1.getOption(\"prefix\") || a2.getOption(\"prefix\"),\n    suffix: a1.getOption(\"suffix\") || a2.getOption(\"suffix\"),\n    model: a1.getOption(\"model\") || a2.getOption(\"model\"),\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === \"array\") {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  // split number and unit of the value.\n  const r1 = b1 / (b1 + b2);\n  const r2 = 1 - r1;\n\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = v1.value * r2 + v2.value * r1;\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import Animator, { StateInterface, EasingType, isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n  toFixed,\n  isFixed,\n  playCSS,\n  toId,\n  exportCSS,\n  getRealId,\n  makeId,\n} from \"./utils\";\nimport Keyframes from \"./Keyframes\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n  START_ANIMATION,\n  PREFIX, THRESHOLD, ObjectInterface, NameType,\n  TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, NORMAL, INFINITE,\n  REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n  EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION\n} from \"./consts\";\nimport { isObject, isArray, isUndefined, decamelize,\n  ANIMATION, fromCSS, addClass, removeClass, hasClass,\n  KEYFRAMES, requestAnimationFrame, isFunction } from \"@daybrush/utils\";\n\nfunction makeAnimationProperties(properties: ObjectInterface<string | number>) {\n  const cssArray = [];\n\n  for (const name in properties) {\n    cssArray.push(`${ANIMATION}-${decamelize(name)} : ${properties[name]};`);\n  }\n  return cssArray.join(\"\");\n}\n\ntype ElementsType = HTMLElement[] | NodeListOf<HTMLElement>;\n/**\n* manage Frame Keyframes and play keyframes.\n* @memberof Scene\n* @extends Scene.Animator\n* @example\nconst item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator {\n  public keyframes: Keyframes;\n  private elements: ElementsType;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst item = new Scene.SceneItem({\n\t\t0: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t\t1: {\n\t\t\tdisplay: \"block\",\n\t\t\topacity: 0,\n\t\t},\n\t\t2: {\n\t\t\topacity: 1,\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.keyframes = new Keyframes();\n    this.elements = [];\n    this.load(properties, options);\n  }\n  public getDuration() {\n    return Math.max(this.state[DURATION], this.keyframes.getDuration());\n  }\n  public setDuration(duration: number) {\n    if (duration === 0) {\n      return this;\n    }\n    const originalDuration = this.getDuration();\n\n    if (originalDuration > 0) {\n      this.keyframes.setDuration(duration, originalDuration);\n    }\n    super.setDuration(toFixed(duration));\n    return this;\n  }\n  /**\n\t* set the unique indicator of the item.\n\t* @method Scene.SceneItem#setId\n\t* @param {String} [id] - the indicator of the item.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nconst item = new SceneItem();\n\nitem.setId(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public setId(id?: number | string) {\n    const elements = this.elements;\n    const length = elements.length;\n\n    this.setState({ id: id || makeId(!!length) });\n    const sceneId = toId(this.getId());\n\n    this.state.selector || (this.state.selector = `[data-scene-id=\"${sceneId}\"]`);\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      elements[i].setAttribute(\"data-scene-id\", sceneId);\n    }\n    return this;\n  }\n  /**\n\t* Specifies the unique indicator of the item.\n\t* @method Scene.SceneItem#getId\n\t* @return {String} the indicator of the item.\n\t* @example\nconst item = scene.newItem(\"item\");\nconsole.log(item.getId()); // item\n\t*/\n  public getId() {\n    return this.state.id;\n  }\n  /**\n\t* Set properties to the sceneItem at that time\n\t* @method Scene.SceneItem#set\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\nconsole.log(item.get(0, \"a\")); // \"b\"\n\t*/\n  public set(time: any[] | number | string | ObjectInterface<any>, ...args: any[]) {\n    if (isObject(time)) {\n      this.load(time);\n      return this;\n    } else if (args[0]) {\n      if (args[0] instanceof SceneItem) {\n        const item: SceneItem = args[0];\n        const delay = item.getDelay();\n        const realTime = this.getUnitTime(time) + delay;\n        const { keys, values, frames } = item.getAllTimes(!!delay || !this.hasFrame(time));\n        const easing = this.getEasingName() !== item.getEasingName() ? item.getEasing() : 0;\n\n        keys.forEach(t => {\n          this.set(realTime + t, frames[values[t]]);\n        });\n        if (easing) {\n          this.set(realTime + keys[0], EASING, easing);\n          this.set(realTime + keys[keys.length - 1], EASING, \"initial\");\n        }\n        return this;\n      } else if (args.length === 1 && isArray(args[0])) {\n        args[0].forEach((item: any) => {\n          this.set(time, item);\n        });\n        return this;\n      }\n    }\n    const frame = this.newFrame(time);\n\n    frame.set(...args);\n    this.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Get properties of the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} args property's name or properties\n\t* @return {Number|String|Scene.PropertyObejct} property value\n\t* @example\nitem.get(0, \"a\"); // item.getFrame(0).get(\"a\");\nitem.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n\t*/\n  public get(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    return frame && frame.get(...args);\n  }\n  /**\n\t* remove properties to the sceneItem at that time\n\t* @param {Number} time - time\n\t* @param {...String|Object} [properties] - property names or values\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.remove(0, \"a\");\n\t*/\n  public remove(time: number, ...args: NameType[]) {\n    const frame = this.getFrame(time);\n\n    frame && frame.remove(...args);\n    this.update();\n    return this;\n  }\n  /**\n\t* Append the item or object at the last time.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.append(new SceneItem({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n}));\nitem.append({\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\nitem.set(item.getDuration(), {\n\t0: {\n\t\topacity: 0,\n\t},\n\t1: {\n\t\topacity: 1,\n\t}\n});\n\t*/\n  public append(item: SceneItem | ObjectInterface<any>) {\n    this.set(this.getDuration(), item);\n    return this;\n  }\n  /**\n\t* Push the front frames for the time and prepend the scene item or item object.\n\t* @param {SceneItem | object} item - the scene item or item object\n\t* @return {Scene.SceneItem} An instance itself\n\t*/\n  public prepend(item: SceneItem | ObjectInterface<any>) {\n    if (item instanceof SceneItem) {\n      const delay = item.getDelay();\n      const duration = item.getIterationCount() === INFINITE ? item.getDuration() : item.getActiveDuration();\n      const unshiftTime = duration + delay;\n      const firstFrame = this.keyframes.get(0);\n\n      if (firstFrame) {\n        this.keyframes.remove(0);\n      }\n      this.keyframes.unshift(unshiftTime);\n      this.set(0, item);\n      this.set(unshiftTime + THRESHOLD, firstFrame);\n    } else {\n      this.prepend(new SceneItem(item));\n    }\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize items' keyframes.\n\t* @method Scene.SceneItem#setSelector\n\t* @param {string} selectors - Selectors to find elements in items.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setSelector(\"#id.class\");\n\t*/\n  public setSelector(selector: boolean | string) {\n    const state = this.state;\n\n    state.selector = selector === true ? state.id :\n      (selector || `[data-scene-id=\"${state.id}\"]`);\n\n    const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(state.selector);\n\n    if (matches) {\n      state.selector = matches[1];\n      state.peusdo = matches[2];\n    }\n    this.setElement(document.querySelectorAll(state.selector));\n    return this;\n  }\n  /**\n\t* Specifies an element to synchronize item's keyframes.\n\t* @method Scene.SceneItem#setElement\n\t* @param {Element|Array|string} elements - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n\t*/\n  public setElement(elements: HTMLElement | ElementsType) {\n    if (!elements) {\n      return this;\n    }\n    this.elements = (elements instanceof Element) ? [elements] : elements;\n    this.setId(this.getId());\n    return this;\n  }\n  /**\n\t* add css styles of items's element to the frame at that time.\n\t* @method Scene.SceneItem#setCSS\n\t* @param {Array} properties - elements to synchronize item's keyframes.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public setCSS(time: number, properties: string[]) {\n    this.set(time, fromCSS(this.elements, properties));\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t* update property names used in frames.\n\t* @method Scene.SceneItem#update\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.update();\n\t*/\n  public update() {\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* update property names used in frame.\n\t* @method Scene.SceneItem#updateFrame\n\t* @param {Scene.Frame} [frame] - frame of that time.\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.updateFrame(time, this.get(time));\n\t*/\n  public updateFrame(frame: Frame) {\n    this.keyframes.updateFrame(frame);\n    return this;\n  }\n  /**\n\t* Create and add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#newFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} Created frame.\n\t* @example\nitem.newFrame(time);\n\t*/\n  public newFrame(time: string | number) {\n    let frame = this.getFrame(time);\n\n    if (frame) {\n      return frame;\n    }\n    frame = new Frame();\n    this.setFrame(time, frame);\n    return frame;\n  }\n  /**\n\t* Add a frame to the sceneItem at that time\n\t* @method Scene.SceneItem#setFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.setFrame(time, frame);\n\t*/\n  public setFrame(time: string | number, frame: Frame) {\n    this.keyframes.add(this.getUnitTime(time), frame);\n    this.keyframes.update();\n    return this;\n  }\n  /**\n\t* get sceneItem's frame at that time\n\t* @method Scene.SceneItem#getFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.Frame} sceneItem's frame at that time\n\t* @example\nconst frame = item.getFrame(time);\n\t*/\n  public getFrame(time: number | string) {\n    return this.keyframes.get(this.getUnitTime(time));\n  }\n  /**\n\t* check if the item has a frame at that time\n\t* @method Scene.SceneItem#hasFrame\n\t* @param {Number} time - frame's time\n\t* @return {Boolean} true: the item has a frame // false: not\n\t* @example\nif (item.hasFrame(10)) {\n\t// has\n} else {\n\t// not\n}\n\t*/\n  public hasFrame(time: number | string) {\n    return this.keyframes.has(this.getUnitTime(time));\n  }\n  /**\n\t* remove sceneItem's frame at that time\n\t* @method Scene.SceneItem#removeFrame\n\t* @param {Number} time - frame's time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\nitem.removeFrame(time);\n\t*/\n  public removeFrame(time: number) {\n    const keyframes = this.keyframes;\n\n    keyframes.remove(time);\n    keyframes.update();\n\n    return this;\n  }\n  /**\n\t* Copy frame of the previous time at the next time.\n\t* @method Scene.SceneItem#copyFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(0) equal getFrame(1)\nitem.copyFrame(0, 1);\n\t*/\n  public copyFrame(fromTime: ObjectInterface<number> | number | string, toTime: number) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.copyFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const copyFrame = frame.clone();\n\n    this.setFrame(toTime, copyFrame);\n    return this;\n  }\n  /**\n\t* merge frame of the previous time at the next time.\n\t* @method Scene.SceneItem#mergeFrame\n\t* @param {number|string|object} fromTime - the previous time\n\t* @param {number|string} toTime - the next time\n\t* @return {Scene.SceneItem} An instance itself\n\t* @example\n// getFrame(1) contains getFrame(0)\nitem.merge(0, 1);\n\t*/\n  public mergeFrame(fromTime: ObjectInterface<number> | number | string, toTime: number | string) {\n    if (isObject(fromTime)) {\n      for (const time in fromTime) {\n        this.mergeFrame(time, fromTime[time]);\n      }\n      return this;\n    }\n    const frame = this.getFrame(fromTime);\n\n    if (!frame) {\n      return this;\n    }\n    const toFrame = this.newFrame(toTime);\n\n    toFrame.merge(frame);\n    return this;\n  }\n  /**\n\t* Get frame of the current time\n\t* @method Scene.SceneItem#getNowFrame\n\t* @param {Number} time - the current time\n\t* @param {function} easing - the speed curve of an animation\n\t* @return {Scene.Frame} frame of the current time\n\t* @example\nlet item = new Scene.SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n// opacity: 0.7; display:\"block\";\nconst frame = item.getNowFrame(1.7);\n\t*/\n  public getNowFrame(time: number, easing?: EasingType) {\n    const frame = new Frame();\n    const names = this.keyframes.getNames();\n    const { left, right } = this._getNearTimeIndex(time);\n    const realEasing = this._getEasing(time, left, right, this.getEasing() || easing);\n\n    names.forEach(properties => {\n      const value = this._getNowValue(time, properties, left, right, realEasing);\n\n      if (isUndefined(value)) {\n        return;\n      }\n      frame.set(properties, value);\n    });\n    return frame;\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (isArray(properties)) {\n      const length = properties.length;\n\n      for (let i = 0; i < length; ++i) {\n        const time = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n        this.set(time, properties[i]);\n      }\n    } else if (properties.keyframes) {\n      this.set(properties.keyframes);\n    } else {\n      for (const time in properties) {\n        if (time === \"options\" || time === \"keyframes\") {\n          continue;\n        }\n        const value = properties[time];\n        const realTime = this.getUnitTime(time);\n\n        if (typeof value === \"number\") {\n          this.mergeFrame(value, realTime);\n          continue;\n        }\n        this.set(realTime, value);\n      }\n    }\n    options && this.setOptions(options);\n    return this;\n  }\n  /**\n\t * clone SceneItem.\n\t * @method Scene.SceneItem#clone\n\t * @param {AnimatorOptions} [options] animator options\n\t * @return {Scene.SceneItem} An instance of clone\n\t * @example\n\t * item.clone();\n\t */\n  public clone(options = {}) {\n    const item = new SceneItem();\n\n    item.setOptions(this.state);\n    item.setOptions(options);\n    this.keyframes.forEach((frame: Frame, time: number) => item.setFrame(time, frame.clone()));\n    return item;\n  }\n  public setOptions(options: StateInterface = {}) {\n    super.setOptions(options);\n    const { id, selector, duration, elements } = options;\n\n    duration && this.setDuration(duration);\n    id && this.setId(id);\n    if (elements) {\n      this.setElement(elements);\n    } else if (selector) {\n      this.setSelector(selector === true ? this.state.id : selector);\n    }\n    return this;\n  }\n  public getAllTimes(isStartZero = true, options: StateInterface = {}) {\n    const times = this.keyframes.times.slice();\n    let length = times.length;\n    const keys: number[] = [];\n    const values: ObjectInterface<number> = {};\n\n    if (!length) {\n      return { keys: [], values: {}, frames: {} };\n    }\n    const frames: ObjectInterface<Frame> = {};\n    const duration = this.getDuration();\n    const direction = options[DIRECTION] || this.state[DIRECTION];\n    const isShuffle = direction === ALTERNATE || direction === ALTERNATE_REVERSE;\n    (!this.getFrame(0)) && times.unshift(0);\n    (!this.getFrame(duration)) && times.push(duration);\n    length = times.length;\n    let iterationCount = options[ITERATION_COUNT] || this.state[ITERATION_COUNT];\n\n    iterationCount = iterationCount !== INFINITE ? iterationCount : 1;\n    const totalDuration = iterationCount * duration;\n\n    for (let i = 0; i < iterationCount; ++i) {\n      const isReverse = isDirectionReverse(i, iterationCount, direction);\n      const start = i * duration;\n\n      for (let j = 0; j < length; ++j) {\n        if (isShuffle && i !== 0 && j === 0) {\n          // pass duplicate\n          continue;\n        }\n        // isStartZero is keytimes[0] is 0 (i === 0 & j === 0)\n        const threshold = j === 0 && (i === 0 ? !isStartZero : !isShuffle) ? THRESHOLD : 0;\n        const keyvalue = toFixed(isReverse ? times[length - 1 - j] : times[j]);\n        const time = toFixed(isReverse ? duration - keyvalue : keyvalue);\n        const keytime = toFixed(start + time + threshold);\n\n        if (totalDuration < keytime) {\n          break;\n        }\n        keys.push(keytime);\n        values[keytime] = keyvalue;\n\n        if (!frames[keyvalue]) {\n          const frame = this.getFrame(keyvalue);\n\n          if (!frame || j === 0 || j === length - 1) {\n            frames[keyvalue] = this.getNowFrame(keyvalue);\n          } else {\n            frames[keyvalue] = frame.clone();\n            const isTransform = frame.has(\"transform\");\n            const isFilter = frame.has(\"filter\");\n            if (isTransform || isFilter) {\n              const nowFrame = this.getNowFrame(keyvalue);\n\n              isTransform && frames[keyvalue].remove(\"transform\").set(\"transform\", nowFrame.raw(\"transform\"));\n              isFilter && frames[keyvalue].remove(\"filter\").set(\"filter\", nowFrame.raw(\"filter\"));\n            }\n          }\n        }\n      }\n    }\n    if (keys[keys.length - 1] < totalDuration) {\n      // last time === totalDuration\n      const isReverse = isDirectionReverse(iterationCount, iterationCount, direction);\n      const keyvalue = toFixed(duration * (isReverse ? 1 - iterationCount % 1 : iterationCount % 1));\n\n      keys.push(totalDuration);\n      values[totalDuration] = keyvalue;\n      !frames[keyvalue] && (frames[keyvalue] = this.getNowFrame(keyvalue));\n    }\n    return { keys, values, frames };\n  }\n  /**\n\t* Specifies an css text that coverted the keyframes of the item.\n\t* @param {Array} [duration=this.getDuration()] - elements to synchronize item's keyframes.\n\t* @param {Array} [options={}] - parent options to unify options of items.\n\t* @example\nitem.setCSS(0, [\"opacity\"]);\nitem.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n\t*/\n  public toCSS(parentDuration = this.getDuration(), options: StateInterface = {}) {\n    const state = this.state;\n    const selector = state.selector || this.options.selector;\n    if (!selector) {\n      return \"\";\n    }\n    const peusdo = state.peusdo || \"\";\n    const id = getRealId(this);\n    // infinity or zero\n    const isParent = !isUndefined(options[ITERATION_COUNT]);\n    const isZeroDuration = parentDuration === 0;\n    const duration = isZeroDuration ? this.getDuration() : parentDuration;\n    const playSpeed = (options[PLAY_SPEED] || 1);\n    const delay = ((options[DELAY] || 0) + (isZeroDuration ? state[DELAY] : 0)) / playSpeed;\n    const easingName = (state[EASING] && state[EASING_NAME]) ||\n      (isParent && options[EASING] && options[EASING_NAME]) || state[EASING_NAME];\n    const iterationCount = (!isZeroDuration && options[ITERATION_COUNT]) || state[ITERATION_COUNT];\n    const fillMode = (options[FILL_MODE] !== \"forwards\" && options[FILL_MODE]) || state[FILL_MODE];\n    const direction = options[DIRECTION] || state[DIRECTION];\n    const cssText = makeAnimationProperties({\n      fillMode,\n      direction,\n      iterationCount,\n      delay: `${delay}s`,\n      name: `${PREFIX}KEYFRAMES_${toId(id)}`,\n      duration: `${duration / playSpeed}s`,\n      timingFunction: easingName,\n    });\n\n    const css = `${selector}.${START_ANIMATION}${peusdo} {\n\t\t\t${cssText}\n\t\t}${selector}.${PAUSE_ANIMATION}${peusdo} {\n      ${ANIMATION}-play-state: paused;\n    }\n\t\t${this._toKeyframes(duration, !isZeroDuration && isParent)}`;\n\n    return css;\n  }\n  public exportCSS(duration = this.getDuration(), options: StateInterface = {}) {\n    if (!this.elements.length) {\n      return \"\";\n    }\n    const css = this.toCSS(duration, options);\n    const isParent = !isUndefined(options[ITERATION_COUNT]);\n\n    !isParent && exportCSS(getRealId(this), css);\n    return css;\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      addClass(elements[i], PAUSE_ANIMATION);\n    }\n  }\n  public endCSS() {\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length) {\n      return this;\n    }\n    for (let i = 0; i < length; ++i) {\n      const element = elements[i];\n\n      removeClass(element, PAUSE_ANIMATION);\n      removeClass(element, START_ANIMATION);\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nitem.playCSS();\nitem.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(isExportCSS = true, properties = {}) {\n    playCSS(this, isExportCSS, properties);\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const elements = this.elements;\n    const length = elements.length;\n    const cssText = makeAnimationProperties(properties);\n\n    if (!length) {\n      return;\n    }\n    if (isPaused) {\n      for (let i = 0; i < length; ++i) {\n        removeClass(elements[i], PAUSE_ANIMATION);\n      }\n    } else {\n      for (let i = 0; i < length; ++i) {\n        const element = elements[i];\n\n        element.style.cssText += cssText;\n        if (hasClass(element, START_ANIMATION)) {\n          removeClass(element, START_ANIMATION);\n          (el => {\n            requestAnimationFrame(() => {\n              requestAnimationFrame(() => {\n                addClass(el, START_ANIMATION);\n              });\n            });\n          })(element);\n        } else {\n          addClass(element, START_ANIMATION);\n        }\n      }\n    }\n    return elements[0];\n  }\n  private _getEasing(time: number, left: number, right: number, easing: EasingType) {\n    if (this.keyframes.hasName(TIMING_FUNCTION)) {\n      const nowEasing = this._getNowValue(time, [TIMING_FUNCTION], left, right, 0, true);\n\n      return isFunction(nowEasing) ? nowEasing : easing;\n    }\n    return easing;\n  }\n  private _toKeyframes(duration = this.getDuration(), isParent: boolean) {\n    const id = getRealId(this);\n    const state = this.state;\n    const playSpeed = state[PLAY_SPEED];\n    const iterationCount = state[ITERATION_COUNT];\n    const fillMode = state[FILL_MODE];\n    const delay = isParent ? state[DELAY] : 0;\n    const direction = isParent ? state[DIRECTION] : NORMAL;\n    const isReverse = direction === REVERSE || direction === ALTERNATE_REVERSE;\n    const { keys, values, frames } = this.getAllTimes(true, {\n      duration,\n      delay,\n      direction,\n      iterationCount: isParent && iterationCount !== INFINITE ? iterationCount : 1,\n      isCSS: true,\n    });\n    const length = keys.length;\n    const css: ObjectInterface<string> = {};\n    const keyframes: string[] = [];\n\n    if (!keys.length) {\n      return \"\";\n    }\n    for (const time in frames) {\n      css[time] = frames[time].toCSS();\n    }\n    const lastTime = keys[length - 1];\n    const lastCSS = css[values[lastTime]];\n\n    if (delay) {\n      const delayCSS = isReverse && (fillMode === \"both\" || fillMode === \"backwards\") ? lastCSS : css[0];\n      keyframes.push(`0%{}`);\n      isReverse && keyframes.push(`${delay / playSpeed / duration * 100 - THRESHOLD}%{${delayCSS}}`);\n    }\n    keys.forEach(time => {\n      const keyTime = (delay + time) / playSpeed / duration * 100;\n      keyframes.push(`${keyTime}%{${keyTime === 0 ? \"\" : css[values[time]]}}`);\n    });\n    // if (afterDelay) {\n    //   keyframes.push(`${lastTime / playSpeed / duration * 100 + THRESHOLD}%{${lastCSS}}`);\n    //   keyframes.push(`100%{${lastCSS}`);\n    // } else {\n    if ((delay + lastTime) / playSpeed < duration) {\n      // not 100%\n      keyframes.push(`100%{${lastCSS}}`);\n    }\n    // }\n    return `@${KEYFRAMES} ${PREFIX}KEYFRAMES_${toId(id)}{\n\t\t\t${keyframes.join(\"\\n\")}\n\t\t}`;\n  }\n  private _getNowValue(\n    time: number,\n    properties: string[],\n    left: number,\n    right: number,\n    easing: EasingType = this.getEasing(),\n    usePrevValue: boolean = isFixed(properties),\n  ) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    let prevTime: number;\n    let nextTime: number;\n    let prevFrame: Frame;\n    let nextFrame: Frame;\n\n    for (let i = left; i >= 0; --i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        prevTime = times[i];\n        prevFrame = frame;\n        break;\n      }\n    }\n    const prevValue = prevFrame && prevFrame.raw(...properties);\n\n    if (usePrevValue) {\n      return prevValue;\n    }\n    for (let i = right; i < length; ++i) {\n      const frame = keyframes.get(times[i]);\n\n      if (frame.has(...properties)) {\n        nextTime = times[i];\n        nextFrame = frame;\n        break;\n      }\n    }\n    const nextValue = nextFrame && nextFrame.raw(...properties);\n\n    if (!prevFrame || isUndefined(prevValue)) {\n      return nextValue;\n    }\n    if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n      return prevValue;\n    }\n    if (prevTime < 0) {\n      prevTime = 0;\n    }\n    return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n  }\n  private _getNearTimeIndex(time: number) {\n    const keyframes = this.keyframes;\n    const times = keyframes.times;\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (times[i] === time) {\n        return { left: i, right: i };\n      } else if (times[i] > time) {\n        return { left: i === 0 ? 0 : i - 1, right: i };\n      }\n    }\n    return { left: length - 1, right: length - 1 };\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const easing = this.getEasing() || parentEasing;\n    const frame = this.getNowFrame(iterationTime, easing);\n    const currentTime = this.getTime();\n\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @event Scene.SceneItem#animate\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Scene.Frame} param.frame frame of that time.\n\t\t */\n    this.trigger(\"animate\", {\n      frame,\n      currentTime,\n      time: iterationTime,\n    });\n    const elements = this.elements;\n    const length = elements.length;\n\n    if (!length || this.state.peusdo) {\n      return frame;\n    }\n    const attributes = frame.get(\"attribute\");\n\n    if (attributes) {\n      for (const name in (attributes as any)) {\n        for (let i = 0; i < length; ++i) {\n          elements[i].setAttribute(name, attributes[name]);\n        }\n      }\n    }\n    const cssText = frame.toCSS();\n\n    if (this.state.cssText !== cssText) {\n      this.state.cssText = cssText;\n\n      for (let i = 0; i < length; ++i) {\n        elements[i].style.cssText += cssText;\n      }\n      return frame;\n    }\n  }\n}\n\nexport default SceneItem;\n","import Animator, { StateInterface, EasingType } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface, ANIMATE } from \"./consts\";\nimport Frame from \"./Frame\";\nimport { playCSS, exportCSS, getRealId, makeId } from \"./utils\";\nimport { isFunction } from \"@daybrush/utils\";\n\n/**\n* manage sceneItems and play Scene.\n* @extends Scene.Animator\n*/\nclass Scene extends Animator {\n\n  public items: ObjectInterface<Scene | SceneItem>;\n  /**\n\t* @param {Object} [properties] - properties\n\t* @param {AnimatorOptions} [options] - options\n\t* @example\n\tconst scene = new Scene({\n\t\titem1: {\n\t\t\t0: {\n\t\t\t\tdisplay: \"none\",\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tdisplay: \"block\",\n\t\t\t\topacity: 0,\n\t\t\t},\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t},\n\t\titem2: {\n\t\t\t2: {\n\t\t\t\topacity: 1,\n\t\t\t},\n\t\t}\n\t});\n\t */\n  constructor(properties?: ObjectInterface<any>, options?: ObjectInterface<any>) {\n    super();\n    this.items = {};\n    this.load(properties, options);\n  }\n  public setId(id: number | string = `scene${Math.floor(Math.random() * 100000)}`) {\n    this.state.id = id;\n    return this;\n  }\n  public getId() {\n    return this.state.id;\n  }\n  public getDuration() {\n    const items = this.items;\n    let time = 0;\n\n    for (const id in items) {\n      const item = items[id];\n\n      time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n    }\n    return time;\n  }\n  public setDuration(duration: number) {\n    const items = this.items;\n    const sceneDuration = this.getDuration();\n\n    if (duration === 0 || !isFinite(sceneDuration)) {\n      return this;\n    }\n    if (sceneDuration === 0) {\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDuration(duration);\n      }\n    } else {\n      const ratio = duration / sceneDuration;\n\n      for (const id in items) {\n        const item = items[id];\n\n        item.setDelay(item.getDelay() * ratio);\n        item.setDuration(item.getDuration() * ratio);\n      }\n    }\n    return this;\n  }\n  /**\n\t* get item in scene by name\n\t* @method Scene#getItem\n  * @param {string} name - The item's name\n  * @param {number} [index] - If item is added as function, it can be imported via index.\n  * @return {Scene | Scene.SceneItem} item\n  * @example\nconst item = scene.getItem(\"item1\")\n  */\n  public getItem(name: number | string) {\n    return this.items[name];\n  }\n  /**\n\t* create item in scene\n\t* @method Scene#newItem\n\t* @param {String} name - name of item to create\n\t* @param {StateOptions} options - The option object of SceneItem\n\t* @return {Sceme.SceneItem} Newly created item\n\t* @example\nconst item = scene.newItem(\"item1\")\n  */\n  public newItem(name: number | string, options = {}) {\n    if (name in this.items) {\n      return;\n    }\n    const item = new SceneItem();\n\n    this.setItem(name, item);\n    item.setOptions(options);\n\n    return item;\n  }\n  /**\n\t* add a sceneItem to the scene\n\t* @param {String} name - name of item to create\n\t* @param {Scene.SceneItem} item - sceneItem\n\t* @example\nconst item = scene.newItem(\"item1\")\n\t*/\n  public setItem(name: number | string, item: Scene | SceneItem) {\n    item.setId(name);\n    this.items[name] = item;\n    return this;\n  }\n  public animate(time: number, parentEasing?: EasingType) {\n    super.setTime(time, true);\n    return this._animate(parentEasing);\n  }\n  public setTime(time: number | string, isNumber?: boolean, parentEasing?: EasingType) {\n    super.setTime(time, isNumber);\n    this._animate(parentEasing);\n    return this;\n  }\n  /**\n\t * executes a provided function once for each scene item.\n\t * @param {Function} func Function to execute for each element, taking three arguments\n\t * @param {Scene | Scene.SceneItem} [func.item] The value of the item being processed in the scene.\n\t * @param {string} [func.name] The name of the item being processed in the scene.\n\t * @param {object} [func.items] The object that forEach() is being applied to.\n\t * @return {Scene} An instance itself\n\t */\n  public forEach(func: (item?: Scene | SceneItem, name?: string, items?: ObjectInterface<Scene | SceneItem>) => void) {\n    const items = this.items;\n\n    for (const name in items) {\n      func(items[name], name, items);\n    }\n    return this;\n  }\n  /**\n\t * Export the CSS of the items to the style.\n\t * @return {Scene} An instance itself\n\t */\n  public exportCSS(duration: number = this.getDuration(), state?: StateInterface) {\n    const items = this.items;\n    let totalDuration = state ? this.getDuration() : duration;\n\n    if (!totalDuration || !isFinite(totalDuration)) {\n      totalDuration = 0;\n    }\n    const isParent = !!state;\n    const styles = [];\n\n    for (const id in items) {\n      styles.push(items[id].exportCSS(totalDuration, this.state));\n    }\n    const css: string = styles.join(\"\");\n    !isParent && exportCSS(getRealId(this), css);\n    return css;\n  }\n  public append(item: SceneItem | Scene) {\n    item.setDelay(item.getDelay() + this.getDuration());\n    this.setItem(getRealId(item), item);\n  }\n  public isPausedCSS() {\n    return this.state.playCSS && this.isPaused();\n  }\n  public pauseCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].pauseCSS();\n    }\n  }\n  public pause() {\n    super.pause();\n    this.isPausedCSS() && this.pauseCSS();\n    return this;\n  }\n  public endCSS() {\n    const items = this.items;\n\n    for (const id in items) {\n      items[id].endCSS();\n    }\n    this.setState({ playCSS: false });\n  }\n  public end() {\n    !this.isEnded() && this.state.playCSS && this.endCSS();\n    super.end();\n    return this;\n  }\n  public addPlayClass(isPaused: boolean, properties = {}) {\n    const items = this.items;\n    let animtionElement: HTMLElement;\n\n    for (const id in items) {\n      const el = items[id].addPlayClass(isPaused, properties);\n\n      !animtionElement && (animtionElement = el);\n    }\n    return animtionElement;\n  }\n  /**\n\t* Play using the css animation and keyframes.\n\t* @param {boolean} [exportCSS=true] Check if you want to export css.\n\t* @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n\t* @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n\t* @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n\t* @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n\t* @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n\t* @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n\t* @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n\t* @return {Scene} An instance itself\n\t* @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n\t* @example\nscene.playCSS();\nscene.playCSS(false, {\n\tdirection: \"reverse\",\n\tfillMode: \"forwards\",\n});\n\t*/\n  public playCSS(isExportCSS = true, properties = {}) {\n    playCSS(this, isExportCSS, properties);\n    return this;\n  }\n  public set(properties: any = {}) {\n    this.load(properties);\n  }\n  public load(properties: any = {}, options = properties.options) {\n    if (!properties) {\n      return this;\n    }\n    const isSelector = options && options.selector;\n\n    for (const name in properties) {\n      if (name === \"options\") {\n        continue;\n      }\n      const object = properties[name];\n      let item;\n\n      if (object instanceof Scene || object instanceof SceneItem) {\n        this.setItem(name, object);\n        item = object;\n      } else if (isFunction(object) && isSelector) {\n        const elements = document.querySelectorAll(name);\n        const length = elements.length;\n        const scene = new Scene();\n\n        for (let i = 0; i < length; ++i) {\n          const id = makeId();\n\n          scene.newItem(`${i}`, {\n            id,\n            selector: `[data-scene-id=\"${id}\"]`,\n            elements: elements[i],\n          }).load(object(i));\n        }\n        this.setItem(name, scene);\n        continue;\n      } else {\n        item = this.newItem(name);\n        item.load(object);\n      }\n      isSelector && item.setSelector(name);\n    }\n    this.setOptions(options);\n  }\n  public setSelector(_: string | boolean) {\n    const isSelector = this.options.selector;\n\n    this.forEach((item, name) => {\n      item.setSelector(isSelector ? name : false);\n    });\n  }\n  private _animate(parentEasing?: EasingType) {\n    const iterationTime = this.getIterationTime();\n    const items = this.items;\n    const easing = this.getEasing() || parentEasing;\n    const frames: ObjectInterface<ObjectInterface<any> | Frame> = {};\n\n    for (const id in items) {\n      const item = items[id];\n\n      frames[id] = item.animate(Math.max(iterationTime * item.getPlaySpeed() - item.getDelay(), 0), easing);\n    }\n    /**\n\t\t * This event is fired when timeupdate and animate.\n\t\t * @param {Number} param.currentTime The total time that the animator is running.\n\t\t * @param {Number} param.time The iteration time during duration that the animator is running.\n\t\t * @param {Frame} param.frames frame of that time.\n\t\t */\n    this.trigger(ANIMATE, {\n      currentTime: this.getTime(),\n      time: iterationTime,\n      frames,\n    });\n    return frames;\n  }\n}\n\nexport default Scene;\n","\nimport { StateInterface } from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { ObjectInterface } from \"./consts\";\n\n/**\n * @namespace presets\n */\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func set\n * @param {string | string[]} property - property to set effect\n * @param {any[]} values - values of 100%\n * @param {AnimatorOptions} [options]\n * @example\n// import {set, blink} from \"scenejs\";\n// set(\"opacity\", [0, 1, 0], {duration: 2});\nScene.set(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\nScene.blink({duration: 2});\n\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t}\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function set(property: string | string[], values: any[], options: StateInterface) {\n  const item = new SceneItem({}, options);\n  const length = values.length;\n\n  for (let i = 0; i < length; ++i) {\n    item.set(`${i / (length - 1) * 100}%`, property, values[i]);\n  }\n  return item;\n}\n\n/**\n * Make a zoom in effect.\n * @memberof presets\n * @func zoomIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {set, zoomIn} from \"scenejs\";\n// zoomIn({duration: 2});\nScene.zoomIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(0)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(1)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomIn({ from = 0, to = 1 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a zoom out effect.\n * @memberof presets\n * @func zoomOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {zoomOut} from \"scenejs\";\n// zoomOut({duration: 2});\nScene.zoomOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"transform\": \"scale(1)\",\n\t},\n\t\"100%\": {\n\t\t\"transform\": \"scale(0)\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function zoomOut({ from = 1, to = 0 }: StateInterface) {\n  return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe in effect.\n * @memberof presets\n * @func wipeIn\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeIn} from \"scenejs\";\n// wipeIn({property: \"left\", duration: 2});\nScene.wipeIn({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"-100%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"0%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeIn({ from = \"-100%\", to = \"0%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Make a wipe out effect.\n * @memberof presets\n * @func wipeOut\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeOut} from \"scenejs\";\n// wipeOut({property: \"left\", duration: 2});\nScene.wipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\t\"left\": \"0%\",\n\t},\n\t\"100%\": {\n\t\t\"left\": \"100%\",\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function wipeOut({ from = \"0%\", to = \"100%\", property = \"left\" }: StateInterface) {\n  return set(property, [from, to], arguments[0]);\n}\n\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func transition\n * @param {Scene.SceneItem} item1 - Item that end effect\n * @param {Scene.SceneItem} item2 - Item that start effect\n * @param {AnimatorOptions} options\n * @param {object} options.from The starting properties of item1 and end properties of item2\n * @param {object} options.to The starting properties of item2 and end properties of item1\n * @param {number} options.duration animation's duration\n * @param {number} [options.time] start time of item1 <br/> <strong>default: item1.getDuration() - duration</strong>\n * @example\n// import {transition} from \"scenejs\";\ntransition(item1, item2, {\n\tfrom: {\n\t\topacity: 1,\n\t},\n\tto: {\n\t\topacity: 0,\n\t},\n\tduration: 0.1,\n});\n\n// Same\nitem1.set({\n\t[item1.getDuration() - 0.1]: {\n\t\topacity: 1,\n\t},\n\t[item1.getDuration()]: {\n\t\topacity: 0,\n\t}\n});\nitem2.set({\n\t0: {\n\t\topacity: 0,\n\t},\n\t0.1: {\n\t\topacity: 1,\n\t}\n});\n */\nexport function transition(item1: SceneItem, item2: SceneItem, {\n  from,\n  to,\n  duration = item1.getDuration(),\n  time = Math.max(item1.getDuration() - duration, 0),\n}: { from: ObjectInterface<any>, to: ObjectInterface<any>, duration?: number, time: number }) {\n  item1.set({\n    [time]: from,\n    [time + duration]: to,\n  });\n  item2.set({\n    0: to,\n    [duration]: from,\n  });\n}\n\n/**\n * Make a fade in effect.\n * @memberof presets\n * @func fadeIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeIn} from \"scenejs\";\n// fadeIn({duration: 2});\nScene.fadeIn({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"100%\": {\n\t\topacity: 1,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeIn({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n\n/**\n * Make a fade out effect.\n * @memberof presets\n * @func fadeOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeOut} from \"scenejs\";\n// fadeOut({duration: 2});\nScene.fadeOut({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function fadeOut({ from = 1, to = 0 }: StateInterface) {\n  return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof presets\n * @func blink\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {blink} from \"scenejs\";\n// blink({duration: 2});\nScene.blink({duration: 2});\n// Same\nnew SceneItem({\n\t\"0%\": {\n\t\topacity: 0,\n\t},\n\t\"50%\": {\n\t\topacity: 1,\n\t},\n\t\"100%\": {\n\t\topacity: 0,\n\t}\n}, {\n\tduration: 2,\n});\n */\nexport function blink({ from = 0, to = 1 }: StateInterface) {\n  return set(\"opacity\", [from, to, from], arguments[0]);\n}\n","import Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport Frame from \"./Frame\";\nimport Keyframes from \"./Keyframes\";\nimport PropertyObject from \"./PropertyObject\";\nimport Animator from \"./Animator\";\nimport * as _presets from \"./presets\";\n\n/**\n* version info\n* @name Scene.VERSION\n* @memberof Scene\n* @static\n* @type {string}\n* @example\n* Scene.VERSION // #__VERSION__#\n*/\nexport const VERSION: string = \"#__VERSION__#\";\nexport { SceneItem, Frame, Animator, Keyframes, PropertyObject };\nexport { bezier, EASE_IN_OUT, EASE_IN, EASE_OUT, EASE, LINEAR, steps, STEP_START, STEP_END } from \"./easing\";\nexport { set, transition, wipeIn, wipeOut, fadeIn, fadeOut, blink, zoomIn, zoomOut} from \"./presets\";\nexport { OPTIONS, EVENTS } from \"./consts\";\nexport { setRole, setAlias } from \"./utils\";\nexport { Scene as default };\n"],"names":["PREFIX","TIMING_FUNCTION","ROLES","transform","filter","attribute","ALIAS","easing","FIXED","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","ITERATION_TIME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","ITERATION","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","OPTIONS","EVENTS","events","name","callback","isObject","i","on","forEach","func","_this","event","push","callbacks","index","indexOf","splice","_i","data","length","target","type","currentTarget","apply","cubic","y1","y2","t","t2","solveFromX","x1","x2","x","solveX","dx","Math","abs","bezier","max","min","easingName","steps","count","position","time","level","floor","STEP_START","STEP_END","LINEAR","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","value","options","prefix","suffix","model","separator","setOptions","init","newOptions","arr","map","v","PropertyObject","clone","join","toValue","STRING","split","OBJECT","isPropertyObject","setAlias","alias","setRole","names","isProperty","isFixedProperty","roles","fixed","getType","isArray","ARRAY","PROPERTY","NUMBER","toFixed","num","round","isInProperties","args","isCheckTrue","role","isRole","isFixed","isPausedCSS","item","state","playCSS","getPlayState","exportCSS","id","css","styleId","toId","styleElement","document","querySelector","innerText","body","insertAdjacentHTML","makeId","selector","random","checkElement","getRealId","setId","getId","text","match","isExportCSS","properties","ANIMATION","addPlayClass","isEnded","setTime","el","peusdo","addAnimationEvent","setState","setPlayState","trigger","duration","getDuration","isZeroDuration","isFinite","animationend","finish","removeEventListener","animationiteration","_a","elapsedTime","currentTime","iterationCount","setCurrentIterationCount","addEventListener","GetterSetter","getter","setter","parent","constructor","prototype","camelize","isDirectionReverse","currentIterationCount","iteraiontCount","direction","setters","getters","tslib_1","_super","delay","fillMode","playSpeed","iterationTime","tickTime","prevTime","playState","curveArray","Array","setEasing","setDuration","Infinity","getActiveDuration","getTime","animator","play","setTickTime","requestAnimationFrame","tick","end","pause","isTick","activeDuration","getUnitTime","calculateIterationTime","isDelay","getIterationTime","getIterationCount","object","isString","unit","parseFloat","passIterationCount","currentIterationTime","setIterationTime","isReverse","isForwards","now","Animator","EventTrigger","splitStyle","str","obj","matches","exec","trim","toPropertyObject","arrayToColorObject","RGBA","stringToBracketObject","afterModel","COLOR_MODELS","stringToRGBA","getOption","arrayToPropertyObject","stringToColorObject","result","values","splitComma","splitSpace","charAt","toObject","size","get","toInnerProperties","arrObj","replace","merge","to","from","FUNCTION","getValue","slice","getPropertyName","set","raw","params","undefined","_set","Frame","styles","style","frame","frameProperties","cssObject","TRANSFORM","FILTER","toCSSObject","cssArray","getNames","stack","concat","pop","updateFrame","times","items","originalDuration","ratio","time2","addTime","removeTime","pushIndex","dotArray","a1","a2","b1","b2","v1","dot","dotColor","color1","color2","value1","value2","model1","model2","colorModel","parseInt","dotObject","a1Type","type1","type2","isFunction1","isFunction2","r1","r2","splitUnit","v2","isNaN","dotValue","nextTime","prevValue","nextValue","makeAnimationProperties","decamelize","keyframes","Keyframes","elements","load","sceneId","setAttribute","SceneItem","getDelay","realTime_1","keys","values_1","frames_1","getEasingName","getEasing","newFrame","getFrame","remove","update","unshiftTime","firstFrame","unshift","prepend","setElement","querySelectorAll","Element","fromCSS","parentEasing","_animate","isNumber","setFrame","add","has","fromTime","toTime","copyFrame","mergeFrame","toFrame","left","right","realEasing","_getEasing","_getNowValue","isUndefined","realTime","setSelector","isStartZero","frames","isShuffle","totalDuration","start","j","threshold","keyvalue","keytime","getNowFrame","isTransform","isFilter","nowFrame","parentDuration","isParent","cssText","timingFunction","_toKeyframes","toCSS","pauseCSS","isPaused","addClass","element","removeClass","endCSS","hasClass","hasName","nowEasing","isFunction","lastTime","lastCSS","delayCSS","keyTime","KEYFRAMES","usePrevValue","prevFrame","nextFrame","attributes","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","setItem","animtionElement","isSelector","Scene","scene","newItem","_","animate","property","zoomIn","_b","_c","arguments","zoomOut","wipeIn","_d","wipeOut","transition","item1","item2","_e","fadeIn","fadeOut","blink","VERSION"],"mappings":"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"}